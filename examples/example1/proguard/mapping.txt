android.support.v4.app.ActionBarDrawerToggle -> android.support.v4.app.ActionBarDrawerToggle:
    android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImpl IMPL -> IMPL
    float TOGGLE_DRAWABLE_OFFSET -> TOGGLE_DRAWABLE_OFFSET
    int ID_HOME -> ID_HOME
    android.app.Activity mActivity -> mActivity
    android.support.v4.app.ActionBarDrawerToggle$Delegate mActivityImpl -> mActivityImpl
    android.support.v4.widget.DrawerLayout mDrawerLayout -> mDrawerLayout
    boolean mDrawerIndicatorEnabled -> mDrawerIndicatorEnabled
    android.graphics.drawable.Drawable mThemeImage -> mThemeImage
    android.graphics.drawable.Drawable mDrawerImage -> mDrawerImage
    android.support.v4.app.ActionBarDrawerToggle$SlideDrawable mSlider -> mSlider
    int mDrawerImageResource -> mDrawerImageResource
    int mOpenDrawerContentDescRes -> mOpenDrawerContentDescRes
    int mCloseDrawerContentDescRes -> mCloseDrawerContentDescRes
    java.lang.Object mSetIndicatorInfo -> mSetIndicatorInfo
    void syncState() -> syncState
    void setDrawerIndicatorEnabled(boolean) -> setDrawerIndicatorEnabled
    boolean isDrawerIndicatorEnabled() -> isDrawerIndicatorEnabled
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onDrawerSlide(android.view.View,float) -> onDrawerSlide
    void onDrawerOpened(android.view.View) -> onDrawerOpened
    void onDrawerClosed(android.view.View) -> onDrawerClosed
    void onDrawerStateChanged(int) -> onDrawerStateChanged
    android.graphics.drawable.Drawable getThemeUpIndicator() -> getThemeUpIndicator
    void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    void setActionBarDescription(int) -> setActionBarDescription
    android.app.Activity access$300(android.support.v4.app.ActionBarDrawerToggle) -> access$300
android.support.v4.app.ActionBarDrawerToggle$1 -> android.support.v4.app.ActionBarDrawerToggle$1:
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImpl -> android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImpl:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplBase -> android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplBase:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplHC -> android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplHC:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$Delegate -> android.support.v4.app.ActionBarDrawerToggle$Delegate:
    android.graphics.drawable.Drawable getThemeUpIndicator() -> getThemeUpIndicator
    void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    void setActionBarDescription(int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$DelegateProvider -> android.support.v4.app.ActionBarDrawerToggle$DelegateProvider:
    android.support.v4.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate() -> getDrawerToggleDelegate
android.support.v4.app.ActionBarDrawerToggle$SlideDrawable -> android.support.v4.app.ActionBarDrawerToggle$SlideDrawable:
    boolean mHasMirroring -> mHasMirroring
    android.graphics.Rect mTmpRect -> mTmpRect
    float mPosition -> mPosition
    float mOffset -> mOffset
    android.support.v4.app.ActionBarDrawerToggle this$0 -> this$0
    void setPosition(float) -> setPosition
    float getPosition() -> getPosition
    void setOffset(float) -> setOffset
    void draw(android.graphics.Canvas) -> draw
android.support.v4.app.ActionBarDrawerToggleHoneycomb -> android.support.v4.app.ActionBarDrawerToggleHoneycomb:
    java.lang.String TAG -> TAG
    int[] THEME_ATTRS -> THEME_ATTRS
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
android.support.v4.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo -> android.support.v4.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo:
    java.lang.reflect.Method setHomeAsUpIndicator -> setHomeAsUpIndicator
    java.lang.reflect.Method setHomeActionContentDescription -> setHomeActionContentDescription
    android.widget.ImageView upIndicatorView -> upIndicatorView
android.support.v4.app.ActivityCompat -> android.support.v4.app.ActivityCompat:
    boolean invalidateOptionsMenu(android.app.Activity) -> invalidateOptionsMenu
    void startActivity(android.app.Activity,android.content.Intent,android.os.Bundle) -> startActivity
    void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle) -> startActivityForResult
    void finishAffinity(android.app.Activity) -> finishAffinity
android.support.v4.app.ActivityCompatHoneycomb -> android.support.v4.app.ActivityCompatHoneycomb:
    void invalidateOptionsMenu(android.app.Activity) -> invalidateOptionsMenu
    void dump(android.app.Activity,java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.app.ActivityCompatJB -> android.support.v4.app.ActivityCompatJB:
    void startActivity(android.content.Context,android.content.Intent,android.os.Bundle) -> startActivity
    void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle) -> startActivityForResult
    void finishAffinity(android.app.Activity) -> finishAffinity
android.support.v4.app.ActivityOptionsCompat -> android.support.v4.app.ActivityOptionsCompat:
    android.support.v4.app.ActivityOptionsCompat makeCustomAnimation(android.content.Context,int,int) -> makeCustomAnimation
    android.support.v4.app.ActivityOptionsCompat makeScaleUpAnimation(android.view.View,int,int,int,int) -> makeScaleUpAnimation
    android.support.v4.app.ActivityOptionsCompat makeThumbnailScaleUpAnimation(android.view.View,android.graphics.Bitmap,int,int) -> makeThumbnailScaleUpAnimation
    android.os.Bundle toBundle() -> toBundle
    void update(android.support.v4.app.ActivityOptionsCompat) -> update
android.support.v4.app.ActivityOptionsCompat$ActivityOptionsImplJB -> android.support.v4.app.ActivityOptionsCompat$ActivityOptionsImplJB:
    android.support.v4.app.ActivityOptionsCompatJB mImpl -> mImpl
    android.os.Bundle toBundle() -> toBundle
    void update(android.support.v4.app.ActivityOptionsCompat) -> update
android.support.v4.app.ActivityOptionsCompatJB -> android.support.v4.app.ActivityOptionsCompatJB:
    android.app.ActivityOptions mActivityOptions -> mActivityOptions
    android.support.v4.app.ActivityOptionsCompatJB makeCustomAnimation(android.content.Context,int,int) -> makeCustomAnimation
    android.support.v4.app.ActivityOptionsCompatJB makeScaleUpAnimation(android.view.View,int,int,int,int) -> makeScaleUpAnimation
    android.support.v4.app.ActivityOptionsCompatJB makeThumbnailScaleUpAnimation(android.view.View,android.graphics.Bitmap,int,int) -> makeThumbnailScaleUpAnimation
    android.os.Bundle toBundle() -> toBundle
    void update(android.support.v4.app.ActivityOptionsCompatJB) -> update
android.support.v4.app.BackStackRecord -> android.support.v4.app.BackStackRecord:
    java.lang.String TAG -> TAG
    android.support.v4.app.FragmentManagerImpl mManager -> mManager
    int OP_NULL -> OP_NULL
    int OP_ADD -> OP_ADD
    int OP_REPLACE -> OP_REPLACE
    int OP_REMOVE -> OP_REMOVE
    int OP_HIDE -> OP_HIDE
    int OP_SHOW -> OP_SHOW
    int OP_DETACH -> OP_DETACH
    int OP_ATTACH -> OP_ATTACH
    android.support.v4.app.BackStackRecord$Op mHead -> mHead
    android.support.v4.app.BackStackRecord$Op mTail -> mTail
    int mNumOp -> mNumOp
    int mEnterAnim -> mEnterAnim
    int mExitAnim -> mExitAnim
    int mPopEnterAnim -> mPopEnterAnim
    int mPopExitAnim -> mPopExitAnim
    int mTransition -> mTransition
    int mTransitionStyle -> mTransitionStyle
    boolean mAddToBackStack -> mAddToBackStack
    boolean mAllowAddToBackStack -> mAllowAddToBackStack
    java.lang.String mName -> mName
    boolean mCommitted -> mCommitted
    int mIndex -> mIndex
    int mBreadCrumbTitleRes -> mBreadCrumbTitleRes
    java.lang.CharSequence mBreadCrumbTitleText -> mBreadCrumbTitleText
    int mBreadCrumbShortTitleRes -> mBreadCrumbShortTitleRes
    java.lang.CharSequence mBreadCrumbShortTitleText -> mBreadCrumbShortTitleText
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void dump(java.lang.String,java.io.PrintWriter,boolean) -> dump
    int getId() -> getId
    int getBreadCrumbTitleRes() -> getBreadCrumbTitleRes
    int getBreadCrumbShortTitleRes() -> getBreadCrumbShortTitleRes
    java.lang.CharSequence getBreadCrumbTitle() -> getBreadCrumbTitle
    java.lang.CharSequence getBreadCrumbShortTitle() -> getBreadCrumbShortTitle
    void addOp(android.support.v4.app.BackStackRecord$Op) -> addOp
    android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> add
    void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int) -> doAddOp
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> replace
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String) -> replace
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> remove
    android.support.v4.app.FragmentTransaction hide(android.support.v4.app.Fragment) -> hide
    android.support.v4.app.FragmentTransaction show(android.support.v4.app.Fragment) -> show
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> detach
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> attach
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int,int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setTransition(int) -> setTransition
    android.support.v4.app.FragmentTransaction setTransitionStyle(int) -> setTransitionStyle
    android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String) -> addToBackStack
    boolean isAddToBackStackAllowed() -> isAddToBackStackAllowed
    android.support.v4.app.FragmentTransaction disallowAddToBackStack() -> disallowAddToBackStack
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(int) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(int) -> setBreadCrumbShortTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence) -> setBreadCrumbShortTitle
    void bumpBackStackNesting(int) -> bumpBackStackNesting
    int commit() -> commit
    int commitAllowingStateLoss() -> commitAllowingStateLoss
    int commitInternal(boolean) -> commitInternal
    void run() -> run
    void popFromBackStack(boolean) -> popFromBackStack
    java.lang.String getName() -> getName
    int getTransition() -> getTransition
    int getTransitionStyle() -> getTransitionStyle
    boolean isEmpty() -> isEmpty
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.BackStackRecord$Op:
    android.support.v4.app.BackStackRecord$Op next -> next
    android.support.v4.app.BackStackRecord$Op prev -> prev
    int cmd -> cmd
    android.support.v4.app.Fragment fragment -> fragment
    int enterAnim -> enterAnim
    int exitAnim -> exitAnim
    int popEnterAnim -> popEnterAnim
    int popExitAnim -> popExitAnim
    java.util.ArrayList removed -> removed
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    int[] mOps -> mOps
    int mTransition -> mTransition
    int mTransitionStyle -> mTransitionStyle
    java.lang.String mName -> mName
    int mIndex -> mIndex
    int mBreadCrumbTitleRes -> mBreadCrumbTitleRes
    java.lang.CharSequence mBreadCrumbTitleText -> mBreadCrumbTitleText
    int mBreadCrumbShortTitleRes -> mBreadCrumbShortTitleRes
    java.lang.CharSequence mBreadCrumbShortTitleText -> mBreadCrumbShortTitleText
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> instantiate
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> android.support.v4.app.BackStackState$1:
    android.support.v4.app.BackStackState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.BackStackState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.DialogFragment -> android.support.v4.app.DialogFragment:
    int STYLE_NORMAL -> STYLE_NORMAL
    int STYLE_NO_TITLE -> STYLE_NO_TITLE
    int STYLE_NO_FRAME -> STYLE_NO_FRAME
    int STYLE_NO_INPUT -> STYLE_NO_INPUT
    java.lang.String SAVED_DIALOG_STATE_TAG -> SAVED_DIALOG_STATE_TAG
    java.lang.String SAVED_STYLE -> SAVED_STYLE
    java.lang.String SAVED_THEME -> SAVED_THEME
    java.lang.String SAVED_CANCELABLE -> SAVED_CANCELABLE
    java.lang.String SAVED_SHOWS_DIALOG -> SAVED_SHOWS_DIALOG
    java.lang.String SAVED_BACK_STACK_ID -> SAVED_BACK_STACK_ID
    int mStyle -> mStyle
    int mTheme -> mTheme
    boolean mCancelable -> mCancelable
    boolean mShowsDialog -> mShowsDialog
    int mBackStackId -> mBackStackId
    android.app.Dialog mDialog -> mDialog
    boolean mViewDestroyed -> mViewDestroyed
    boolean mDismissed -> mDismissed
    boolean mShownByMe -> mShownByMe
    void setStyle(int,int) -> setStyle
    void show(android.support.v4.app.FragmentManager,java.lang.String) -> show
    int show(android.support.v4.app.FragmentTransaction,java.lang.String) -> show
    void dismiss() -> dismiss
    void dismissAllowingStateLoss() -> dismissAllowingStateLoss
    void dismissInternal(boolean) -> dismissInternal
    android.app.Dialog getDialog() -> getDialog
    int getTheme() -> getTheme
    void setCancelable(boolean) -> setCancelable
    boolean isCancelable() -> isCancelable
    void setShowsDialog(boolean) -> setShowsDialog
    boolean getShowsDialog() -> getShowsDialog
    void onAttach(android.app.Activity) -> onAttach
    void onDetach() -> onDetach
    void onCreate(android.os.Bundle) -> onCreate
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    void onCancel(android.content.DialogInterface) -> onCancel
    void onDismiss(android.content.DialogInterface) -> onDismiss
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onStart() -> onStart
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStop() -> onStop
    void onDestroyView() -> onDestroyView
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    android.support.v4.util.SimpleArrayMap sClassMap -> sClassMap
    int INITIALIZING -> INITIALIZING
    int CREATED -> CREATED
    int ACTIVITY_CREATED -> ACTIVITY_CREATED
    int STOPPED -> STOPPED
    int STARTED -> STARTED
    int RESUMED -> RESUMED
    int mState -> mState
    android.view.View mAnimatingAway -> mAnimatingAway
    int mStateAfterAnimating -> mStateAfterAnimating
    android.os.Bundle mSavedFragmentState -> mSavedFragmentState
    android.util.SparseArray mSavedViewState -> mSavedViewState
    int mIndex -> mIndex
    java.lang.String mWho -> mWho
    android.os.Bundle mArguments -> mArguments
    android.support.v4.app.Fragment mTarget -> mTarget
    int mTargetIndex -> mTargetIndex
    int mTargetRequestCode -> mTargetRequestCode
    boolean mAdded -> mAdded
    boolean mRemoving -> mRemoving
    boolean mResumed -> mResumed
    boolean mFromLayout -> mFromLayout
    boolean mInLayout -> mInLayout
    boolean mRestored -> mRestored
    int mBackStackNesting -> mBackStackNesting
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> mFragmentManager
    android.support.v4.app.FragmentActivity mActivity -> mActivity
    android.support.v4.app.FragmentManagerImpl mChildFragmentManager -> mChildFragmentManager
    android.support.v4.app.Fragment mParentFragment -> mParentFragment
    int mFragmentId -> mFragmentId
    int mContainerId -> mContainerId
    java.lang.String mTag -> mTag
    boolean mHidden -> mHidden
    boolean mDetached -> mDetached
    boolean mRetainInstance -> mRetainInstance
    boolean mRetaining -> mRetaining
    boolean mHasMenu -> mHasMenu
    boolean mMenuVisible -> mMenuVisible
    boolean mCalled -> mCalled
    int mNextAnim -> mNextAnim
    android.view.ViewGroup mContainer -> mContainer
    android.view.View mView -> mView
    android.view.View mInnerView -> mInnerView
    boolean mDeferStart -> mDeferStart
    boolean mUserVisibleHint -> mUserVisibleHint
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> mLoaderManager
    boolean mLoadersStarted -> mLoadersStarted
    boolean mCheckedForLoaderManager -> mCheckedForLoaderManager
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> instantiate
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> instantiate
    boolean isSupportFragmentClass(android.content.Context,java.lang.String) -> isSupportFragmentClass
    void restoreViewState(android.os.Bundle) -> restoreViewState
    void setIndex(int,android.support.v4.app.Fragment) -> setIndex
    boolean isInBackStack() -> isInBackStack
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int getId() -> getId
    java.lang.String getTag() -> getTag
    void setArguments(android.os.Bundle) -> setArguments
    android.os.Bundle getArguments() -> getArguments
    void setInitialSavedState(android.support.v4.app.Fragment$SavedState) -> setInitialSavedState
    void setTargetFragment(android.support.v4.app.Fragment,int) -> setTargetFragment
    android.support.v4.app.Fragment getTargetFragment() -> getTargetFragment
    int getTargetRequestCode() -> getTargetRequestCode
    android.support.v4.app.FragmentActivity getActivity() -> getActivity
    android.content.res.Resources getResources() -> getResources
    java.lang.CharSequence getText(int) -> getText
    java.lang.String getString(int) -> getString
    java.lang.String getString(int,java.lang.Object[]) -> getString
    android.support.v4.app.FragmentManager getFragmentManager() -> getFragmentManager
    android.support.v4.app.FragmentManager getChildFragmentManager() -> getChildFragmentManager
    android.support.v4.app.Fragment getParentFragment() -> getParentFragment
    boolean isAdded() -> isAdded
    boolean isDetached() -> isDetached
    boolean isRemoving() -> isRemoving
    boolean isInLayout() -> isInLayout
    boolean isResumed() -> isResumed
    boolean isVisible() -> isVisible
    boolean isHidden() -> isHidden
    boolean hasOptionsMenu() -> hasOptionsMenu
    boolean isMenuVisible() -> isMenuVisible
    void onHiddenChanged(boolean) -> onHiddenChanged
    void setRetainInstance(boolean) -> setRetainInstance
    boolean getRetainInstance() -> getRetainInstance
    void setHasOptionsMenu(boolean) -> setHasOptionsMenu
    void setMenuVisibility(boolean) -> setMenuVisibility
    void setUserVisibleHint(boolean) -> setUserVisibleHint
    boolean getUserVisibleHint() -> getUserVisibleHint
    android.support.v4.app.LoaderManager getLoaderManager() -> getLoaderManager
    void startActivity(android.content.Intent) -> startActivity
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> onInflate
    void onAttach(android.app.Activity) -> onAttach
    android.view.animation.Animation onCreateAnimation(int,boolean,int) -> onCreateAnimation
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    android.view.View getView() -> getView
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onViewStateRestored(android.os.Bundle) -> onViewStateRestored
    void onStart() -> onStart
    void onResume() -> onResume
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPause() -> onPause
    void onStop() -> onStop
    void onLowMemory() -> onLowMemory
    void onDestroyView() -> onDestroyView
    void onDestroy() -> onDestroy
    void initState() -> initState
    void onDetach() -> onDetach
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> onCreateOptionsMenu
    void onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    void onDestroyOptionsMenu() -> onDestroyOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onOptionsMenuClosed(android.view.Menu) -> onOptionsMenuClosed
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    void registerForContextMenu(android.view.View) -> registerForContextMenu
    void unregisterForContextMenu(android.view.View) -> unregisterForContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    android.support.v4.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    void instantiateChildFragmentManager() -> instantiateChildFragmentManager
    void performCreate(android.os.Bundle) -> performCreate
    android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> performCreateView
    void performActivityCreated(android.os.Bundle) -> performActivityCreated
    void performStart() -> performStart
    void performResume() -> performResume
    void performConfigurationChanged(android.content.res.Configuration) -> performConfigurationChanged
    void performLowMemory() -> performLowMemory
    boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> performCreateOptionsMenu
    boolean performPrepareOptionsMenu(android.view.Menu) -> performPrepareOptionsMenu
    boolean performOptionsItemSelected(android.view.MenuItem) -> performOptionsItemSelected
    boolean performContextItemSelected(android.view.MenuItem) -> performContextItemSelected
    void performOptionsMenuClosed(android.view.Menu) -> performOptionsMenuClosed
    void performSaveInstanceState(android.os.Bundle) -> performSaveInstanceState
    void performPause() -> performPause
    void performStop() -> performStop
    void performReallyStop() -> performReallyStop
    void performDestroyView() -> performDestroyView
    void performDestroy() -> performDestroy
android.support.v4.app.Fragment$1 -> android.support.v4.app.Fragment$1:
    android.support.v4.app.Fragment this$0 -> this$0
    android.view.View findViewById(int) -> findViewById
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.Fragment$InstantiationException:
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    android.os.Bundle mState -> mState
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> android.support.v4.app.Fragment$SavedState$1:
    android.support.v4.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.Fragment$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> android.support.v4.app.FragmentActivity:
    java.lang.String TAG -> TAG
    java.lang.String FRAGMENTS_TAG -> FRAGMENTS_TAG
    int HONEYCOMB -> HONEYCOMB
    int MSG_REALLY_STOPPED -> MSG_REALLY_STOPPED
    int MSG_RESUME_PENDING -> MSG_RESUME_PENDING
    android.os.Handler mHandler -> mHandler
    android.support.v4.app.FragmentManagerImpl mFragments -> mFragments
    android.support.v4.app.FragmentContainer mContainer -> mContainer
    boolean mCreated -> mCreated
    boolean mResumed -> mResumed
    boolean mStopped -> mStopped
    boolean mReallyStopped -> mReallyStopped
    boolean mRetaining -> mRetaining
    boolean mOptionsMenuInvalidated -> mOptionsMenuInvalidated
    boolean mCheckedForLoaderManager -> mCheckedForLoaderManager
    boolean mLoadersStarted -> mLoadersStarted
    android.support.v4.util.SimpleArrayMap mAllLoaderManagers -> mAllLoaderManagers
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> mLoaderManager
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onLowMemory() -> onLowMemory
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onResume() -> onResume
    void onPostResume() -> onPostResume
    void onResumeFragments() -> onResumeFragments
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    boolean onPrepareOptionsPanel(android.view.View,android.view.Menu) -> onPrepareOptionsPanel
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    java.lang.Object onRetainCustomNonConfigurationInstance() -> onRetainCustomNonConfigurationInstance
    java.lang.Object getLastCustomNonConfigurationInstance() -> getLastCustomNonConfigurationInstance
    void supportInvalidateOptionsMenu() -> supportInvalidateOptionsMenu
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.String viewToString(android.view.View) -> viewToString
    void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View) -> dumpViewHierarchy
    void doReallyStop(boolean) -> doReallyStop
    void onReallyStop() -> onReallyStop
    void onAttachFragment(android.support.v4.app.Fragment) -> onAttachFragment
    android.support.v4.app.FragmentManager getSupportFragmentManager() -> getSupportFragmentManager
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void startActivityFromFragment(android.support.v4.app.Fragment,android.content.Intent,int) -> startActivityFromFragment
    void invalidateSupportFragment(java.lang.String) -> invalidateSupportFragment
    android.support.v4.app.LoaderManager getSupportLoaderManager() -> getSupportLoaderManager
    android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean) -> getLoaderManager
android.support.v4.app.FragmentActivity$1 -> android.support.v4.app.FragmentActivity$1:
    android.support.v4.app.FragmentActivity this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.app.FragmentActivity$2 -> android.support.v4.app.FragmentActivity$2:
    android.support.v4.app.FragmentActivity this$0 -> this$0
    android.view.View findViewById(int) -> findViewById
android.support.v4.app.FragmentActivity$FragmentTag -> android.support.v4.app.FragmentActivity$FragmentTag:
    int[] Fragment -> Fragment
    int Fragment_id -> Fragment_id
    int Fragment_name -> Fragment_name
    int Fragment_tag -> Fragment_tag
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.FragmentActivity$NonConfigurationInstances:
    java.lang.Object activity -> activity
    java.lang.Object custom -> custom
    android.support.v4.util.SimpleArrayMap children -> children
    java.util.ArrayList fragments -> fragments
    android.support.v4.util.SimpleArrayMap loaders -> loaders
android.support.v4.app.FragmentContainer -> android.support.v4.app.FragmentContainer:
    android.view.View findViewById(int) -> findViewById
android.support.v4.app.FragmentManager -> android.support.v4.app.FragmentManager:
    int POP_BACK_STACK_INCLUSIVE -> POP_BACK_STACK_INCLUSIVE
    android.support.v4.app.FragmentTransaction beginTransaction() -> beginTransaction
    android.support.v4.app.FragmentTransaction openTransaction() -> openTransaction
    boolean executePendingTransactions() -> executePendingTransactions
    android.support.v4.app.Fragment findFragmentById(int) -> findFragmentById
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    void popBackStack() -> popBackStack
    boolean popBackStackImmediate() -> popBackStackImmediate
    void popBackStack(java.lang.String,int) -> popBackStack
    boolean popBackStackImmediate(java.lang.String,int) -> popBackStackImmediate
    void popBackStack(int,int) -> popBackStack
    boolean popBackStackImmediate(int,int) -> popBackStackImmediate
    int getBackStackEntryCount() -> getBackStackEntryCount
    android.support.v4.app.FragmentManager$BackStackEntry getBackStackEntryAt(int) -> getBackStackEntryAt
    void addOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> addOnBackStackChangedListener
    void removeOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> removeOnBackStackChangedListener
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> putFragment
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> getFragment
    java.util.List getFragments() -> getFragments
    android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> saveFragmentInstanceState
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void enableDebugLogging(boolean) -> enableDebugLogging
android.support.v4.app.FragmentManager$BackStackEntry -> android.support.v4.app.FragmentManager$BackStackEntry:
    int getId() -> getId
    java.lang.String getName() -> getName
    int getBreadCrumbTitleRes() -> getBreadCrumbTitleRes
    int getBreadCrumbShortTitleRes() -> getBreadCrumbShortTitleRes
    java.lang.CharSequence getBreadCrumbTitle() -> getBreadCrumbTitle
    java.lang.CharSequence getBreadCrumbShortTitle() -> getBreadCrumbShortTitle
android.support.v4.app.FragmentManager$OnBackStackChangedListener -> android.support.v4.app.FragmentManager$OnBackStackChangedListener:
    void onBackStackChanged() -> onBackStackChanged
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.FragmentManagerImpl:
    boolean DEBUG -> DEBUG
    java.lang.String TAG -> TAG
    boolean HONEYCOMB -> HONEYCOMB
    java.lang.String TARGET_REQUEST_CODE_STATE_TAG -> TARGET_REQUEST_CODE_STATE_TAG
    java.lang.String TARGET_STATE_TAG -> TARGET_STATE_TAG
    java.lang.String VIEW_STATE_TAG -> VIEW_STATE_TAG
    java.lang.String USER_VISIBLE_HINT_TAG -> USER_VISIBLE_HINT_TAG
    java.util.ArrayList mPendingActions -> mPendingActions
    java.lang.Runnable[] mTmpActions -> mTmpActions
    boolean mExecutingActions -> mExecutingActions
    java.util.ArrayList mActive -> mActive
    java.util.ArrayList mAdded -> mAdded
    java.util.ArrayList mAvailIndices -> mAvailIndices
    java.util.ArrayList mBackStack -> mBackStack
    java.util.ArrayList mCreatedMenus -> mCreatedMenus
    java.util.ArrayList mBackStackIndices -> mBackStackIndices
    java.util.ArrayList mAvailBackStackIndices -> mAvailBackStackIndices
    java.util.ArrayList mBackStackChangeListeners -> mBackStackChangeListeners
    int mCurState -> mCurState
    android.support.v4.app.FragmentActivity mActivity -> mActivity
    android.support.v4.app.FragmentContainer mContainer -> mContainer
    android.support.v4.app.Fragment mParent -> mParent
    boolean mNeedMenuInvalidate -> mNeedMenuInvalidate
    boolean mStateSaved -> mStateSaved
    boolean mDestroyed -> mDestroyed
    java.lang.String mNoTransactionsBecause -> mNoTransactionsBecause
    boolean mHavePendingDeferredStart -> mHavePendingDeferredStart
    android.os.Bundle mStateBundle -> mStateBundle
    android.util.SparseArray mStateArray -> mStateArray
    java.lang.Runnable mExecCommit -> mExecCommit
    android.view.animation.Interpolator DECELERATE_QUINT -> DECELERATE_QUINT
    android.view.animation.Interpolator DECELERATE_CUBIC -> DECELERATE_CUBIC
    android.view.animation.Interpolator ACCELERATE_QUINT -> ACCELERATE_QUINT
    android.view.animation.Interpolator ACCELERATE_CUBIC -> ACCELERATE_CUBIC
    int ANIM_DUR -> ANIM_DUR
    int ANIM_STYLE_OPEN_ENTER -> ANIM_STYLE_OPEN_ENTER
    int ANIM_STYLE_OPEN_EXIT -> ANIM_STYLE_OPEN_EXIT
    int ANIM_STYLE_CLOSE_ENTER -> ANIM_STYLE_CLOSE_ENTER
    int ANIM_STYLE_CLOSE_EXIT -> ANIM_STYLE_CLOSE_EXIT
    int ANIM_STYLE_FADE_ENTER -> ANIM_STYLE_FADE_ENTER
    int ANIM_STYLE_FADE_EXIT -> ANIM_STYLE_FADE_EXIT
    void throwException(java.lang.RuntimeException) -> throwException
    android.support.v4.app.FragmentTransaction beginTransaction() -> beginTransaction
    boolean executePendingTransactions() -> executePendingTransactions
    void popBackStack() -> popBackStack
    boolean popBackStackImmediate() -> popBackStackImmediate
    void popBackStack(java.lang.String,int) -> popBackStack
    boolean popBackStackImmediate(java.lang.String,int) -> popBackStackImmediate
    void popBackStack(int,int) -> popBackStack
    boolean popBackStackImmediate(int,int) -> popBackStackImmediate
    int getBackStackEntryCount() -> getBackStackEntryCount
    android.support.v4.app.FragmentManager$BackStackEntry getBackStackEntryAt(int) -> getBackStackEntryAt
    void addOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> addOnBackStackChangedListener
    void removeOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> removeOnBackStackChangedListener
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> putFragment
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> getFragment
    java.util.List getFragments() -> getFragments
    android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> saveFragmentInstanceState
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float) -> makeOpenCloseAnimation
    android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float) -> makeFadeAnimation
    android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> loadAnimation
    void performPendingDeferredStart(android.support.v4.app.Fragment) -> performPendingDeferredStart
    void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> moveToState
    void moveToState(android.support.v4.app.Fragment) -> moveToState
    void moveToState(int,boolean) -> moveToState
    void moveToState(int,int,int,boolean) -> moveToState
    void startPendingDeferredFragments() -> startPendingDeferredFragments
    void makeActive(android.support.v4.app.Fragment) -> makeActive
    void makeInactive(android.support.v4.app.Fragment) -> makeInactive
    void addFragment(android.support.v4.app.Fragment,boolean) -> addFragment
    void removeFragment(android.support.v4.app.Fragment,int,int) -> removeFragment
    void hideFragment(android.support.v4.app.Fragment,int,int) -> hideFragment
    void showFragment(android.support.v4.app.Fragment,int,int) -> showFragment
    void detachFragment(android.support.v4.app.Fragment,int,int) -> detachFragment
    void attachFragment(android.support.v4.app.Fragment,int,int) -> attachFragment
    android.support.v4.app.Fragment findFragmentById(int) -> findFragmentById
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    android.support.v4.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    void checkStateLoss() -> checkStateLoss
    void enqueueAction(java.lang.Runnable,boolean) -> enqueueAction
    int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> allocBackStackIndex
    void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> setBackStackIndex
    void freeBackStackIndex(int) -> freeBackStackIndex
    boolean execPendingActions() -> execPendingActions
    void reportBackStackChanged() -> reportBackStackChanged
    void addBackStackState(android.support.v4.app.BackStackRecord) -> addBackStackState
    boolean popBackStackState(android.os.Handler,java.lang.String,int,int) -> popBackStackState
    java.util.ArrayList retainNonConfig() -> retainNonConfig
    void saveFragmentViewState(android.support.v4.app.Fragment) -> saveFragmentViewState
    android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment) -> saveFragmentBasicState
    android.os.Parcelable saveAllState() -> saveAllState
    void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> restoreAllState
    void attachActivity(android.support.v4.app.FragmentActivity,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment) -> attachActivity
    void noteStateNotSaved() -> noteStateNotSaved
    void dispatchCreate() -> dispatchCreate
    void dispatchActivityCreated() -> dispatchActivityCreated
    void dispatchStart() -> dispatchStart
    void dispatchResume() -> dispatchResume
    void dispatchPause() -> dispatchPause
    void dispatchStop() -> dispatchStop
    void dispatchReallyStop() -> dispatchReallyStop
    void dispatchDestroyView() -> dispatchDestroyView
    void dispatchDestroy() -> dispatchDestroy
    void dispatchConfigurationChanged(android.content.res.Configuration) -> dispatchConfigurationChanged
    void dispatchLowMemory() -> dispatchLowMemory
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> dispatchCreateOptionsMenu
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> dispatchPrepareOptionsMenu
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> dispatchOptionsItemSelected
    boolean dispatchContextItemSelected(android.view.MenuItem) -> dispatchContextItemSelected
    void dispatchOptionsMenuClosed(android.view.Menu) -> dispatchOptionsMenuClosed
    int reverseTransit(int) -> reverseTransit
    int transitToStyleIndex(int,boolean) -> transitToStyleIndex
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.FragmentManagerImpl$1:
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$2 -> android.support.v4.app.FragmentManagerImpl$2:
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$3 -> android.support.v4.app.FragmentManagerImpl$3:
    java.lang.String val$name -> val$name
    int val$flags -> val$flags
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$4 -> android.support.v4.app.FragmentManagerImpl$4:
    int val$id -> val$id
    int val$flags -> val$flags
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.app.FragmentManagerImpl$5:
    android.support.v4.app.Fragment val$fragment -> val$fragment
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    android.support.v4.app.FragmentState[] mActive -> mActive
    int[] mAdded -> mAdded
    android.support.v4.app.BackStackState[] mBackStack -> mBackStack
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.FragmentManagerState$1:
    android.support.v4.app.FragmentManagerState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.FragmentManagerState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentPagerAdapter -> android.support.v4.app.FragmentPagerAdapter:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.app.FragmentManager mFragmentManager -> mFragmentManager
    android.support.v4.app.FragmentTransaction mCurTransaction -> mCurTransaction
    android.support.v4.app.Fragment mCurrentPrimaryItem -> mCurrentPrimaryItem
    android.support.v4.app.Fragment getItem(int) -> getItem
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
    long getItemId(int) -> getItemId
    java.lang.String makeFragmentName(int,long) -> makeFragmentName
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    java.lang.String mClassName -> mClassName
    int mIndex -> mIndex
    boolean mFromLayout -> mFromLayout
    int mFragmentId -> mFragmentId
    int mContainerId -> mContainerId
    java.lang.String mTag -> mTag
    boolean mRetainInstance -> mRetainInstance
    boolean mDetached -> mDetached
    android.os.Bundle mArguments -> mArguments
    android.os.Bundle mSavedFragmentState -> mSavedFragmentState
    android.support.v4.app.Fragment mInstance -> mInstance
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity,android.support.v4.app.Fragment) -> instantiate
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> android.support.v4.app.FragmentState$1:
    android.support.v4.app.FragmentState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.FragmentState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentStatePagerAdapter -> android.support.v4.app.FragmentStatePagerAdapter:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.app.FragmentManager mFragmentManager -> mFragmentManager
    android.support.v4.app.FragmentTransaction mCurTransaction -> mCurTransaction
    java.util.ArrayList mSavedState -> mSavedState
    java.util.ArrayList mFragments -> mFragments
    android.support.v4.app.Fragment mCurrentPrimaryItem -> mCurrentPrimaryItem
    android.support.v4.app.Fragment getItem(int) -> getItem
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
android.support.v4.app.FragmentTabHost -> android.support.v4.app.FragmentTabHost:
    java.util.ArrayList mTabs -> mTabs
    android.widget.FrameLayout mRealTabContent -> mRealTabContent
    android.content.Context mContext -> mContext
    android.support.v4.app.FragmentManager mFragmentManager -> mFragmentManager
    int mContainerId -> mContainerId
    android.widget.TabHost$OnTabChangeListener mOnTabChangeListener -> mOnTabChangeListener
    android.support.v4.app.FragmentTabHost$TabInfo mLastTab -> mLastTab
    boolean mAttached -> mAttached
    void initFragmentTabHost(android.content.Context,android.util.AttributeSet) -> initFragmentTabHost
    void ensureHierarchy(android.content.Context) -> ensureHierarchy
    void setup() -> setup
    void setup(android.content.Context,android.support.v4.app.FragmentManager) -> setup
    void setup(android.content.Context,android.support.v4.app.FragmentManager,int) -> setup
    void ensureContent() -> ensureContent
    void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    void addTab(android.widget.TabHost$TabSpec,java.lang.Class,android.os.Bundle) -> addTab
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onTabChanged(java.lang.String) -> onTabChanged
    android.support.v4.app.FragmentTransaction doTabChanged(java.lang.String,android.support.v4.app.FragmentTransaction) -> doTabChanged
android.support.v4.app.FragmentTabHost$1 -> android.support.v4.app.FragmentTabHost$1:
android.support.v4.app.FragmentTabHost$DummyTabFactory -> android.support.v4.app.FragmentTabHost$DummyTabFactory:
    android.content.Context mContext -> mContext
    android.view.View createTabContent(java.lang.String) -> createTabContent
android.support.v4.app.FragmentTabHost$SavedState -> android.support.v4.app.FragmentTabHost$SavedState:
    java.lang.String curTab -> curTab
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.app.FragmentTabHost$SavedState$1 -> android.support.v4.app.FragmentTabHost$SavedState$1:
    android.support.v4.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.FragmentTabHost$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost$TabInfo -> android.support.v4.app.FragmentTabHost$TabInfo:
    java.lang.String tag -> tag
    java.lang.Class clss -> clss
    android.os.Bundle args -> args
    android.support.v4.app.Fragment fragment -> fragment
    android.support.v4.app.Fragment access$102(android.support.v4.app.FragmentTabHost$TabInfo,android.support.v4.app.Fragment) -> access$102
    android.support.v4.app.Fragment access$100(android.support.v4.app.FragmentTabHost$TabInfo) -> access$100
    java.lang.String access$200(android.support.v4.app.FragmentTabHost$TabInfo) -> access$200
    java.lang.Class access$300(android.support.v4.app.FragmentTabHost$TabInfo) -> access$300
    android.os.Bundle access$400(android.support.v4.app.FragmentTabHost$TabInfo) -> access$400
android.support.v4.app.FragmentTransaction -> android.support.v4.app.FragmentTransaction:
    int TRANSIT_ENTER_MASK -> TRANSIT_ENTER_MASK
    int TRANSIT_EXIT_MASK -> TRANSIT_EXIT_MASK
    int TRANSIT_UNSET -> TRANSIT_UNSET
    int TRANSIT_NONE -> TRANSIT_NONE
    int TRANSIT_FRAGMENT_OPEN -> TRANSIT_FRAGMENT_OPEN
    int TRANSIT_FRAGMENT_CLOSE -> TRANSIT_FRAGMENT_CLOSE
    int TRANSIT_FRAGMENT_FADE -> TRANSIT_FRAGMENT_FADE
    android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> replace
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String) -> replace
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> remove
    android.support.v4.app.FragmentTransaction hide(android.support.v4.app.Fragment) -> hide
    android.support.v4.app.FragmentTransaction show(android.support.v4.app.Fragment) -> show
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> detach
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> attach
    boolean isEmpty() -> isEmpty
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int,int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setTransition(int) -> setTransition
    android.support.v4.app.FragmentTransaction setTransitionStyle(int) -> setTransitionStyle
    android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String) -> addToBackStack
    boolean isAddToBackStackAllowed() -> isAddToBackStackAllowed
    android.support.v4.app.FragmentTransaction disallowAddToBackStack() -> disallowAddToBackStack
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(int) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(int) -> setBreadCrumbShortTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence) -> setBreadCrumbShortTitle
    int commit() -> commit
    int commitAllowingStateLoss() -> commitAllowingStateLoss
android.support.v4.app.ListFragment -> android.support.v4.app.ListFragment:
    int INTERNAL_EMPTY_ID -> INTERNAL_EMPTY_ID
    int INTERNAL_PROGRESS_CONTAINER_ID -> INTERNAL_PROGRESS_CONTAINER_ID
    int INTERNAL_LIST_CONTAINER_ID -> INTERNAL_LIST_CONTAINER_ID
    android.os.Handler mHandler -> mHandler
    java.lang.Runnable mRequestFocus -> mRequestFocus
    android.widget.AdapterView$OnItemClickListener mOnClickListener -> mOnClickListener
    android.widget.ListAdapter mAdapter -> mAdapter
    android.widget.ListView mList -> mList
    android.view.View mEmptyView -> mEmptyView
    android.widget.TextView mStandardEmptyView -> mStandardEmptyView
    android.view.View mProgressContainer -> mProgressContainer
    android.view.View mListContainer -> mListContainer
    java.lang.CharSequence mEmptyText -> mEmptyText
    boolean mListShown -> mListShown
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void onDestroyView() -> onDestroyView
    void onListItemClick(android.widget.ListView,android.view.View,int,long) -> onListItemClick
    void setListAdapter(android.widget.ListAdapter) -> setListAdapter
    void setSelection(int) -> setSelection
    int getSelectedItemPosition() -> getSelectedItemPosition
    long getSelectedItemId() -> getSelectedItemId
    android.widget.ListView getListView() -> getListView
    void setEmptyText(java.lang.CharSequence) -> setEmptyText
    void setListShown(boolean) -> setListShown
    void setListShownNoAnimation(boolean) -> setListShownNoAnimation
    void setListShown(boolean,boolean) -> setListShown
    android.widget.ListAdapter getListAdapter() -> getListAdapter
    void ensureList() -> ensureList
android.support.v4.app.ListFragment$1 -> android.support.v4.app.ListFragment$1:
    android.support.v4.app.ListFragment this$0 -> this$0
    void run() -> run
android.support.v4.app.ListFragment$2 -> android.support.v4.app.ListFragment$2:
    android.support.v4.app.ListFragment this$0 -> this$0
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
android.support.v4.app.LoaderManager -> android.support.v4.app.LoaderManager:
    android.support.v4.content.Loader initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> initLoader
    android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> restartLoader
    void destroyLoader(int) -> destroyLoader
    android.support.v4.content.Loader getLoader(int) -> getLoader
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void enableDebugLogging(boolean) -> enableDebugLogging
    boolean hasRunningLoaders() -> hasRunningLoaders
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.app.LoaderManager$LoaderCallbacks:
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> onCreateLoader
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> onLoadFinished
    void onLoaderReset(android.support.v4.content.Loader) -> onLoaderReset
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.LoaderManagerImpl:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.util.SparseArrayCompat mLoaders -> mLoaders
    android.support.v4.util.SparseArrayCompat mInactiveLoaders -> mInactiveLoaders
    java.lang.String mWho -> mWho
    android.support.v4.app.FragmentActivity mActivity -> mActivity
    boolean mStarted -> mStarted
    boolean mRetaining -> mRetaining
    boolean mRetainingStarted -> mRetainingStarted
    boolean mCreatingLoader -> mCreatingLoader
    void updateActivity(android.support.v4.app.FragmentActivity) -> updateActivity
    android.support.v4.app.LoaderManagerImpl$LoaderInfo createLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> createLoader
    android.support.v4.app.LoaderManagerImpl$LoaderInfo createAndInstallLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> createAndInstallLoader
    void installLoader(android.support.v4.app.LoaderManagerImpl$LoaderInfo) -> installLoader
    android.support.v4.content.Loader initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> initLoader
    android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> restartLoader
    void destroyLoader(int) -> destroyLoader
    android.support.v4.content.Loader getLoader(int) -> getLoader
    void doStart() -> doStart
    void doStop() -> doStop
    void doRetain() -> doRetain
    void finishRetain() -> finishRetain
    void doReportNextStart() -> doReportNextStart
    void doReportStart() -> doReportStart
    void doDestroy() -> doDestroy
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    boolean hasRunningLoaders() -> hasRunningLoaders
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.LoaderManagerImpl$LoaderInfo:
    int mId -> mId
    android.os.Bundle mArgs -> mArgs
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> mCallbacks
    android.support.v4.content.Loader mLoader -> mLoader
    boolean mHaveData -> mHaveData
    boolean mDeliveredData -> mDeliveredData
    java.lang.Object mData -> mData
    boolean mStarted -> mStarted
    boolean mRetaining -> mRetaining
    boolean mRetainingStarted -> mRetainingStarted
    boolean mReportNextStart -> mReportNextStart
    boolean mDestroyed -> mDestroyed
    boolean mListenerRegistered -> mListenerRegistered
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> mPendingLoader
    android.support.v4.app.LoaderManagerImpl this$0 -> this$0
    void start() -> start
    void retain() -> retain
    void finishRetain() -> finishRetain
    void reportStart() -> reportStart
    void stop() -> stop
    void destroy() -> destroy
    void onLoadComplete(android.support.v4.content.Loader,java.lang.Object) -> onLoadComplete
    void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> callOnLoadFinished
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.app.NavUtils -> android.support.v4.app.NavUtils:
    java.lang.String TAG -> TAG
    java.lang.String PARENT_ACTIVITY -> PARENT_ACTIVITY
    android.support.v4.app.NavUtils$NavUtilsImpl IMPL -> IMPL
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpFromSameTask(android.app.Activity) -> navigateUpFromSameTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    android.content.Intent getParentActivityIntent(android.content.Context,java.lang.Class) -> getParentActivityIntent
    android.content.Intent getParentActivityIntent(android.content.Context,android.content.ComponentName) -> getParentActivityIntent
    java.lang.String getParentActivityName(android.app.Activity) -> getParentActivityName
    java.lang.String getParentActivityName(android.content.Context,android.content.ComponentName) -> getParentActivityName
android.support.v4.app.NavUtils$NavUtilsImpl -> android.support.v4.app.NavUtils$NavUtilsImpl:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NavUtils$NavUtilsImplBase -> android.support.v4.app.NavUtils$NavUtilsImplBase:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NavUtils$NavUtilsImplJB -> android.support.v4.app.NavUtils$NavUtilsImplJB:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    android.content.Intent superGetParentActivityIntent(android.app.Activity) -> superGetParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NavUtilsJB -> android.support.v4.app.NavUtilsJB:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.app.NoSaveStateFrameLayout:
    android.view.ViewGroup wrap(android.view.View) -> wrap
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.NotificationCompat -> android.support.v4.app.NotificationCompat:
    int FLAG_HIGH_PRIORITY -> FLAG_HIGH_PRIORITY
    int PRIORITY_DEFAULT -> PRIORITY_DEFAULT
    int PRIORITY_LOW -> PRIORITY_LOW
    int PRIORITY_MIN -> PRIORITY_MIN
    int PRIORITY_HIGH -> PRIORITY_HIGH
    int PRIORITY_MAX -> PRIORITY_MAX
    android.support.v4.app.NotificationCompat$NotificationCompatImpl IMPL -> IMPL
    android.support.v4.app.NotificationCompat$NotificationCompatImpl access$000() -> access$000
android.support.v4.app.NotificationCompat$Action -> android.support.v4.app.NotificationCompat$Action:
    int icon -> icon
    java.lang.CharSequence title -> title
    android.app.PendingIntent actionIntent -> actionIntent
android.support.v4.app.NotificationCompat$BigPictureStyle -> android.support.v4.app.NotificationCompat$BigPictureStyle:
    android.graphics.Bitmap mPicture -> mPicture
    android.graphics.Bitmap mBigLargeIcon -> mBigLargeIcon
    boolean mBigLargeIconSet -> mBigLargeIconSet
    android.support.v4.app.NotificationCompat$BigPictureStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    android.support.v4.app.NotificationCompat$BigPictureStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    android.support.v4.app.NotificationCompat$BigPictureStyle bigPicture(android.graphics.Bitmap) -> bigPicture
    android.support.v4.app.NotificationCompat$BigPictureStyle bigLargeIcon(android.graphics.Bitmap) -> bigLargeIcon
android.support.v4.app.NotificationCompat$BigTextStyle -> android.support.v4.app.NotificationCompat$BigTextStyle:
    java.lang.CharSequence mBigText -> mBigText
    android.support.v4.app.NotificationCompat$BigTextStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    android.support.v4.app.NotificationCompat$BigTextStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    android.support.v4.app.NotificationCompat$BigTextStyle bigText(java.lang.CharSequence) -> bigText
android.support.v4.app.NotificationCompat$Builder -> android.support.v4.app.NotificationCompat$Builder:
    android.content.Context mContext -> mContext
    java.lang.CharSequence mContentTitle -> mContentTitle
    java.lang.CharSequence mContentText -> mContentText
    android.app.PendingIntent mContentIntent -> mContentIntent
    android.app.PendingIntent mFullScreenIntent -> mFullScreenIntent
    android.widget.RemoteViews mTickerView -> mTickerView
    android.graphics.Bitmap mLargeIcon -> mLargeIcon
    java.lang.CharSequence mContentInfo -> mContentInfo
    int mNumber -> mNumber
    int mPriority -> mPriority
    boolean mUseChronometer -> mUseChronometer
    android.support.v4.app.NotificationCompat$Style mStyle -> mStyle
    java.lang.CharSequence mSubText -> mSubText
    int mProgressMax -> mProgressMax
    int mProgress -> mProgress
    boolean mProgressIndeterminate -> mProgressIndeterminate
    java.util.ArrayList mActions -> mActions
    android.app.Notification mNotification -> mNotification
    android.support.v4.app.NotificationCompat$Builder setWhen(long) -> setWhen
    android.support.v4.app.NotificationCompat$Builder setUsesChronometer(boolean) -> setUsesChronometer
    android.support.v4.app.NotificationCompat$Builder setSmallIcon(int) -> setSmallIcon
    android.support.v4.app.NotificationCompat$Builder setSmallIcon(int,int) -> setSmallIcon
    android.support.v4.app.NotificationCompat$Builder setContentTitle(java.lang.CharSequence) -> setContentTitle
    android.support.v4.app.NotificationCompat$Builder setContentText(java.lang.CharSequence) -> setContentText
    android.support.v4.app.NotificationCompat$Builder setSubText(java.lang.CharSequence) -> setSubText
    android.support.v4.app.NotificationCompat$Builder setNumber(int) -> setNumber
    android.support.v4.app.NotificationCompat$Builder setContentInfo(java.lang.CharSequence) -> setContentInfo
    android.support.v4.app.NotificationCompat$Builder setProgress(int,int,boolean) -> setProgress
    android.support.v4.app.NotificationCompat$Builder setContent(android.widget.RemoteViews) -> setContent
    android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent) -> setContentIntent
    android.support.v4.app.NotificationCompat$Builder setDeleteIntent(android.app.PendingIntent) -> setDeleteIntent
    android.support.v4.app.NotificationCompat$Builder setFullScreenIntent(android.app.PendingIntent,boolean) -> setFullScreenIntent
    android.support.v4.app.NotificationCompat$Builder setTicker(java.lang.CharSequence) -> setTicker
    android.support.v4.app.NotificationCompat$Builder setTicker(java.lang.CharSequence,android.widget.RemoteViews) -> setTicker
    android.support.v4.app.NotificationCompat$Builder setLargeIcon(android.graphics.Bitmap) -> setLargeIcon
    android.support.v4.app.NotificationCompat$Builder setSound(android.net.Uri) -> setSound
    android.support.v4.app.NotificationCompat$Builder setSound(android.net.Uri,int) -> setSound
    android.support.v4.app.NotificationCompat$Builder setVibrate(long[]) -> setVibrate
    android.support.v4.app.NotificationCompat$Builder setLights(int,int,int) -> setLights
    android.support.v4.app.NotificationCompat$Builder setOngoing(boolean) -> setOngoing
    android.support.v4.app.NotificationCompat$Builder setOnlyAlertOnce(boolean) -> setOnlyAlertOnce
    android.support.v4.app.NotificationCompat$Builder setAutoCancel(boolean) -> setAutoCancel
    android.support.v4.app.NotificationCompat$Builder setDefaults(int) -> setDefaults
    void setFlag(int,boolean) -> setFlag
    android.support.v4.app.NotificationCompat$Builder setPriority(int) -> setPriority
    android.support.v4.app.NotificationCompat$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent) -> addAction
    android.support.v4.app.NotificationCompat$Builder setStyle(android.support.v4.app.NotificationCompat$Style) -> setStyle
    android.app.Notification getNotification() -> getNotification
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompat$InboxStyle -> android.support.v4.app.NotificationCompat$InboxStyle:
    java.util.ArrayList mTexts -> mTexts
    android.support.v4.app.NotificationCompat$InboxStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    android.support.v4.app.NotificationCompat$InboxStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    android.support.v4.app.NotificationCompat$InboxStyle addLine(java.lang.CharSequence) -> addLine
android.support.v4.app.NotificationCompat$NotificationCompatImpl -> android.support.v4.app.NotificationCompat$NotificationCompatImpl:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplBase -> android.support.v4.app.NotificationCompat$NotificationCompatImplBase:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb -> android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplIceCreamSandwich -> android.support.v4.app.NotificationCompat$NotificationCompatImplIceCreamSandwich:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplJellybean -> android.support.v4.app.NotificationCompat$NotificationCompatImplJellybean:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$Style -> android.support.v4.app.NotificationCompat$Style:
    android.support.v4.app.NotificationCompat$Builder mBuilder -> mBuilder
    java.lang.CharSequence mBigContentTitle -> mBigContentTitle
    java.lang.CharSequence mSummaryText -> mSummaryText
    boolean mSummaryTextSet -> mSummaryTextSet
    void setBuilder(android.support.v4.app.NotificationCompat$Builder) -> setBuilder
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompatHoneycomb -> android.support.v4.app.NotificationCompatHoneycomb:
    android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap) -> add
android.support.v4.app.NotificationCompatIceCreamSandwich -> android.support.v4.app.NotificationCompatIceCreamSandwich:
    android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean) -> add
android.support.v4.app.NotificationCompatJellybean -> android.support.v4.app.NotificationCompatJellybean:
    android.app.Notification$Builder b -> b
    void addAction(int,java.lang.CharSequence,android.app.PendingIntent) -> addAction
    void addBigTextStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,java.lang.CharSequence) -> addBigTextStyle
    void addBigPictureStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,android.graphics.Bitmap,android.graphics.Bitmap,boolean) -> addBigPictureStyle
    void addInboxStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,java.util.ArrayList) -> addInboxStyle
    android.app.Notification build() -> build
android.support.v4.app.ServiceCompat -> android.support.v4.app.ServiceCompat:
    int START_STICKY -> START_STICKY
android.support.v4.app.ShareCompat -> android.support.v4.app.ShareCompat:
    java.lang.String EXTRA_CALLING_PACKAGE -> EXTRA_CALLING_PACKAGE
    java.lang.String EXTRA_CALLING_ACTIVITY -> EXTRA_CALLING_ACTIVITY
    android.support.v4.app.ShareCompat$ShareCompatImpl IMPL -> IMPL
    java.lang.String getCallingPackage(android.app.Activity) -> getCallingPackage
    android.content.ComponentName getCallingActivity(android.app.Activity) -> getCallingActivity
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    void configureMenuItem(android.view.Menu,int,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    android.support.v4.app.ShareCompat$ShareCompatImpl access$000() -> access$000
android.support.v4.app.ShareCompat$IntentBuilder -> android.support.v4.app.ShareCompat$IntentBuilder:
    android.app.Activity mActivity -> mActivity
    android.content.Intent mIntent -> mIntent
    java.lang.CharSequence mChooserTitle -> mChooserTitle
    java.util.ArrayList mToAddresses -> mToAddresses
    java.util.ArrayList mCcAddresses -> mCcAddresses
    java.util.ArrayList mBccAddresses -> mBccAddresses
    java.util.ArrayList mStreams -> mStreams
    android.support.v4.app.ShareCompat$IntentBuilder from(android.app.Activity) -> from
    android.content.Intent getIntent() -> getIntent
    android.app.Activity getActivity() -> getActivity
    void combineArrayExtra(java.lang.String,java.util.ArrayList) -> combineArrayExtra
    void combineArrayExtra(java.lang.String,java.lang.String[]) -> combineArrayExtra
    android.content.Intent createChooserIntent() -> createChooserIntent
    void startChooser() -> startChooser
    android.support.v4.app.ShareCompat$IntentBuilder setChooserTitle(java.lang.CharSequence) -> setChooserTitle
    android.support.v4.app.ShareCompat$IntentBuilder setChooserTitle(int) -> setChooserTitle
    android.support.v4.app.ShareCompat$IntentBuilder setType(java.lang.String) -> setType
    android.support.v4.app.ShareCompat$IntentBuilder setText(java.lang.CharSequence) -> setText
    android.support.v4.app.ShareCompat$IntentBuilder setHtmlText(java.lang.String) -> setHtmlText
    android.support.v4.app.ShareCompat$IntentBuilder setStream(android.net.Uri) -> setStream
    android.support.v4.app.ShareCompat$IntentBuilder addStream(android.net.Uri) -> addStream
    android.support.v4.app.ShareCompat$IntentBuilder setEmailTo(java.lang.String[]) -> setEmailTo
    android.support.v4.app.ShareCompat$IntentBuilder addEmailTo(java.lang.String) -> addEmailTo
    android.support.v4.app.ShareCompat$IntentBuilder addEmailTo(java.lang.String[]) -> addEmailTo
    android.support.v4.app.ShareCompat$IntentBuilder setEmailCc(java.lang.String[]) -> setEmailCc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailCc(java.lang.String) -> addEmailCc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailCc(java.lang.String[]) -> addEmailCc
    android.support.v4.app.ShareCompat$IntentBuilder setEmailBcc(java.lang.String[]) -> setEmailBcc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailBcc(java.lang.String) -> addEmailBcc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailBcc(java.lang.String[]) -> addEmailBcc
    android.support.v4.app.ShareCompat$IntentBuilder setSubject(java.lang.String) -> setSubject
android.support.v4.app.ShareCompat$IntentReader -> android.support.v4.app.ShareCompat$IntentReader:
    java.lang.String TAG -> TAG
    android.app.Activity mActivity -> mActivity
    android.content.Intent mIntent -> mIntent
    java.lang.String mCallingPackage -> mCallingPackage
    android.content.ComponentName mCallingActivity -> mCallingActivity
    java.util.ArrayList mStreams -> mStreams
    android.support.v4.app.ShareCompat$IntentReader from(android.app.Activity) -> from
    boolean isShareIntent() -> isShareIntent
    boolean isSingleShare() -> isSingleShare
    boolean isMultipleShare() -> isMultipleShare
    java.lang.String getType() -> getType
    java.lang.CharSequence getText() -> getText
    java.lang.String getHtmlText() -> getHtmlText
    android.net.Uri getStream() -> getStream
    android.net.Uri getStream(int) -> getStream
    int getStreamCount() -> getStreamCount
    java.lang.String[] getEmailTo() -> getEmailTo
    java.lang.String[] getEmailCc() -> getEmailCc
    java.lang.String[] getEmailBcc() -> getEmailBcc
    java.lang.String getSubject() -> getSubject
    java.lang.String getCallingPackage() -> getCallingPackage
    android.content.ComponentName getCallingActivity() -> getCallingActivity
    android.graphics.drawable.Drawable getCallingActivityIcon() -> getCallingActivityIcon
    android.graphics.drawable.Drawable getCallingApplicationIcon() -> getCallingApplicationIcon
    java.lang.CharSequence getCallingApplicationLabel() -> getCallingApplicationLabel
android.support.v4.app.ShareCompat$ShareCompatImpl -> android.support.v4.app.ShareCompat$ShareCompatImpl:
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
android.support.v4.app.ShareCompat$ShareCompatImplBase -> android.support.v4.app.ShareCompat$ShareCompatImplBase:
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
    void withinStyle(java.lang.StringBuilder,java.lang.CharSequence,int,int) -> withinStyle
android.support.v4.app.ShareCompat$ShareCompatImplICS -> android.support.v4.app.ShareCompat$ShareCompatImplICS:
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    boolean shouldAddChooserIntent(android.view.MenuItem) -> shouldAddChooserIntent
android.support.v4.app.ShareCompat$ShareCompatImplJB -> android.support.v4.app.ShareCompat$ShareCompatImplJB:
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
    boolean shouldAddChooserIntent(android.view.MenuItem) -> shouldAddChooserIntent
android.support.v4.app.ShareCompatICS -> android.support.v4.app.ShareCompatICS:
    java.lang.String HISTORY_FILENAME_PREFIX -> HISTORY_FILENAME_PREFIX
    void configureMenuItem(android.view.MenuItem,android.app.Activity,android.content.Intent) -> configureMenuItem
android.support.v4.app.ShareCompatJB -> android.support.v4.app.ShareCompatJB:
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.SuperNotCalledException:
android.support.v4.app.TaskStackBuilder -> android.support.v4.app.TaskStackBuilder:
    java.lang.String TAG -> TAG
    android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl IMPL -> IMPL
    java.util.ArrayList mIntents -> mIntents
    android.content.Context mSourceContext -> mSourceContext
    android.support.v4.app.TaskStackBuilder create(android.content.Context) -> create
    android.support.v4.app.TaskStackBuilder from(android.content.Context) -> from
    android.support.v4.app.TaskStackBuilder addNextIntent(android.content.Intent) -> addNextIntent
    android.support.v4.app.TaskStackBuilder addNextIntentWithParentStack(android.content.Intent) -> addNextIntentWithParentStack
    android.support.v4.app.TaskStackBuilder addParentStack(android.app.Activity) -> addParentStack
    android.support.v4.app.TaskStackBuilder addParentStack(java.lang.Class) -> addParentStack
    android.support.v4.app.TaskStackBuilder addParentStack(android.content.ComponentName) -> addParentStack
    int getIntentCount() -> getIntentCount
    android.content.Intent getIntent(int) -> getIntent
    android.content.Intent editIntentAt(int) -> editIntentAt
    java.util.Iterator iterator() -> iterator
    void startActivities() -> startActivities
    void startActivities(android.os.Bundle) -> startActivities
    android.app.PendingIntent getPendingIntent(int,int) -> getPendingIntent
    android.app.PendingIntent getPendingIntent(int,int,android.os.Bundle) -> getPendingIntent
    android.content.Intent[] getIntents() -> getIntents
android.support.v4.app.TaskStackBuilder$SupportParentable -> android.support.v4.app.TaskStackBuilder$SupportParentable:
    android.content.Intent getSupportParentActivityIntent() -> getSupportParentActivityIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplBase -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplBase:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplHoneycomb -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplHoneycomb:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplJellybean -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplJellybean:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilderHoneycomb -> android.support.v4.app.TaskStackBuilderHoneycomb:
    android.app.PendingIntent getActivitiesPendingIntent(android.content.Context,int,android.content.Intent[],int) -> getActivitiesPendingIntent
android.support.v4.app.TaskStackBuilderJellybean -> android.support.v4.app.TaskStackBuilderJellybean:
    android.app.PendingIntent getActivitiesPendingIntent(android.content.Context,int,android.content.Intent[],int,android.os.Bundle) -> getActivitiesPendingIntent
android.support.v4.content.ContextCompat -> android.support.v4.content.a:
    java.lang.String DIR_ANDROID -> DIR_ANDROID
    java.lang.String DIR_DATA -> DIR_DATA
    java.lang.String DIR_OBB -> DIR_OBB
    java.lang.String DIR_FILES -> DIR_FILES
    java.lang.String DIR_CACHE -> DIR_CACHE
    boolean startActivities(android.content.Context,android.content.Intent[]) -> startActivities
    boolean startActivities(android.content.Context,android.content.Intent[],android.os.Bundle) -> startActivities
    java.io.File[] getObbDirs(android.content.Context) -> getObbDirs
    java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String) -> getExternalFilesDirs
    java.io.File[] getExternalCacheDirs(android.content.Context) -> getExternalCacheDirs
    java.io.File buildPath(java.io.File,java.lang.String[]) -> buildPath
android.support.v4.content.FileProvider -> android.support.v4.content.FileProvider:
    java.lang.String[] COLUMNS -> a
    java.io.File DEVICE_ROOT -> b
    java.util.HashMap sCache -> c
    android.support.v4.content.FileProvider$PathStrategy mStrategy -> d
    boolean onCreate() -> onCreate
    void attachInfo(android.content.Context,android.content.pm.ProviderInfo) -> attachInfo
    android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    java.lang.String getType(android.net.Uri) -> getType
    android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
    int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String) -> openFile
    android.support.v4.content.FileProvider$PathStrategy getPathStrategy(android.content.Context,java.lang.String) -> a
    java.io.File buildPath(java.io.File,java.lang.String[]) -> a
android.support.v4.content.FileProvider$PathStrategy -> android.support.v4.content.b:
    java.io.File getFileForUri(android.net.Uri) -> a
android.support.v4.content.FileProvider$SimplePathStrategy -> android.support.v4.content.c:
    java.lang.String mAuthority -> a
    java.util.HashMap mRoots -> b
    void addRoot(java.lang.String,java.io.File) -> a
    java.io.File getFileForUri(android.net.Uri) -> a
android.support.v4.content.IntentCompat -> android.support.v4.content.d:
    android.support.v4.content.IntentCompat$IntentCompatImpl IMPL -> a
    android.content.Intent makeMainActivity(android.content.ComponentName) -> a
android.support.v4.content.IntentCompat$IntentCompatImpl -> android.support.v4.content.e:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> a
android.support.v4.content.IntentCompat$IntentCompatImplBase -> android.support.v4.content.f:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> a
android.support.v4.content.IntentCompat$IntentCompatImplHC -> android.support.v4.content.g:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> a
android.support.v4.content.IntentCompat$IntentCompatImplIcsMr1 -> android.support.v4.content.h:
android.support.v4.content.Loader -> android.support.v4.content.i:
    int mId -> a
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> b
    boolean mStarted -> c
    boolean mAbandoned -> d
    boolean mReset -> e
    boolean mContentChanged -> f
    boolean mProcessingChange -> g
    void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void startLoading() -> a
    void stopLoading() -> b
    void abandon() -> c
    void reset() -> d
    java.lang.String toString() -> toString
    void dump$ec96877(java.lang.String,java.io.PrintWriter) -> a
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.content.j:
android.support.v4.content.WakefulBroadcastReceiver -> android.support.v4.content.WakefulBroadcastReceiver:
    android.util.SparseArray mActiveWakeLocks -> a
    int mNextId -> b
android.support.v4.graphics.drawable.DrawableCompat -> android.support.v4.a.a.a:
    android.support.v4.graphics.drawable.DrawableCompat$DrawableImpl IMPL -> a
    void setAutoMirrored$4eb43225(android.graphics.drawable.Drawable) -> a
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> b
android.support.v4.graphics.drawable.DrawableCompat$BaseDrawableImpl -> android.support.v4.a.a.b:
    void setAutoMirrored$4eb43225(android.graphics.drawable.Drawable) -> a
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> b
android.support.v4.graphics.drawable.DrawableCompat$DrawableImpl -> android.support.v4.a.a.c:
    void setAutoMirrored$4eb43225(android.graphics.drawable.Drawable) -> a
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> b
android.support.v4.graphics.drawable.DrawableCompat$HoneycombDrawableImpl -> android.support.v4.a.a.d:
android.support.v4.graphics.drawable.DrawableCompat$KitKatDrawableImpl -> android.support.v4.a.a.e:
    void setAutoMirrored$4eb43225(android.graphics.drawable.Drawable) -> a
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> b
android.support.v4.os.ParcelableCompat -> android.support.v4.b.a:
    android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.os.ParcelableCompat$CompatCreator -> android.support.v4.b.b:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> android.support.v4.b.c:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
    java.lang.Object[] newArray(int) -> a
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> android.support.v4.b.d:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.util.ArrayMap -> android.support.v4.c.a:
    android.support.v4.util.MapCollections mCollections -> a
    android.support.v4.util.MapCollections getCollection() -> b
    void putAll(java.util.Map) -> putAll
    java.util.Set entrySet() -> entrySet
    java.util.Set keySet() -> keySet
    java.util.Collection values() -> values
android.support.v4.util.ArrayMap$1 -> android.support.v4.c.a$1:
    android.support.v4.util.ArrayMap this$0 -> a
    int colGetSize() -> a
    java.lang.Object colGetEntry(int,int) -> a
    int colIndexOfKey(java.lang.Object) -> a
    int colIndexOfValue(java.lang.Object) -> b
    java.util.Map colGetMap() -> b
    void colPut(java.lang.Object,java.lang.Object) -> a
    java.lang.Object colSetValue(int,java.lang.Object) -> a
    void colRemoveAt(int) -> a
    void colClear() -> c
android.support.v4.util.ContainerHelpers -> android.support.v4.c.b:
    int[] EMPTY_INTS -> a
    long[] EMPTY_LONGS -> b
    java.lang.Object[] EMPTY_OBJECTS -> c
    int idealIntArraySize(int) -> a
    boolean equal(java.lang.Object,java.lang.Object) -> a
    int binarySearch(int[],int,int) -> a
android.support.v4.util.DebugUtils -> android.support.v4.c.c:
    void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> a
android.support.v4.util.LogWriter -> android.support.v4.c.d:
    java.lang.String mTag -> a
    java.lang.StringBuilder mBuilder -> b
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> a
android.support.v4.util.MapCollections -> android.support.v4.c.e:
    android.support.v4.util.MapCollections$EntrySet mEntrySet -> b
    android.support.v4.util.MapCollections$KeySet mKeySet -> c
    android.support.v4.util.MapCollections$ValuesCollection mValues -> d
    java.lang.Object[] toArrayHelper(int) -> b
    java.lang.Object[] toArrayHelper(java.lang.Object[],int) -> a
    boolean equalsSetHelper(java.util.Set,java.lang.Object) -> a
    int colGetSize() -> a
    java.lang.Object colGetEntry(int,int) -> a
    int colIndexOfKey(java.lang.Object) -> a
    int colIndexOfValue(java.lang.Object) -> b
    java.util.Map colGetMap() -> b
    void colPut(java.lang.Object,java.lang.Object) -> a
    java.lang.Object colSetValue(int,java.lang.Object) -> a
    void colRemoveAt(int) -> a
    void colClear() -> c
android.support.v4.util.MapCollections$ArrayIterator -> android.support.v4.c.f:
    int mOffset -> a
    int mSize -> b
    int mIndex -> c
    boolean mCanRemove -> d
    android.support.v4.util.MapCollections this$0 -> e
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
android.support.v4.util.MapCollections$EntrySet -> android.support.v4.c.g:
    android.support.v4.util.MapCollections this$0 -> a
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    boolean add(java.lang.Object) -> add
android.support.v4.util.MapCollections$KeySet -> android.support.v4.c.h:
    android.support.v4.util.MapCollections this$0 -> a
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
android.support.v4.util.MapCollections$MapIterator -> android.support.v4.c.i:
    int mEnd -> a
    int mIndex -> b
    boolean mEntryValid -> c
    android.support.v4.util.MapCollections this$0 -> d
    boolean hasNext() -> hasNext
    void remove() -> remove
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Object next() -> next
android.support.v4.util.MapCollections$ValuesCollection -> android.support.v4.c.j:
    android.support.v4.util.MapCollections this$0 -> a
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
android.support.v4.util.SimpleArrayMap -> android.support.v4.c.k:
    java.lang.Object[] mBaseCache -> b
    int mBaseCacheSize -> c
    java.lang.Object[] mTwiceBaseCache -> d
    int mTwiceBaseCacheSize -> e
    int[] mHashes -> f
    java.lang.Object[] mArray -> g
    int mSize -> h
    int indexOf(java.lang.Object,int) -> a
    int indexOfNull() -> a
    void allocArrays(int) -> d
    void freeArrays(int[],java.lang.Object[],int) -> a
    void clear() -> clear
    void ensureCapacity(int) -> a
    boolean containsKey(java.lang.Object) -> containsKey
    int indexOfValue(java.lang.Object) -> a
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object keyAt(int) -> e
    java.lang.Object valueAt(int) -> b
    boolean isEmpty() -> isEmpty
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object removeAt(int) -> c
    int size() -> size
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
android.support.v4.util.SparseArrayCompat -> android.support.v4.c.l:
    java.lang.Object DELETED -> a
    boolean mGarbage -> b
    int[] mKeys -> c
    java.lang.Object[] mValues -> d
    int mSize -> e
    android.support.v4.util.SparseArrayCompat clone() -> c
    java.lang.Object get(int) -> a
    void remove(int) -> b
    void removeAt(int) -> c
    void gc() -> d
    void put(int,java.lang.Object) -> a
    int size() -> a
    int keyAt(int) -> d
    java.lang.Object valueAt(int) -> e
    int indexOfKey(int) -> f
    void clear() -> b
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
android.support.v4.view.AccessibilityDelegateCompat -> android.support.v4.view.a:
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl IMPL -> b
    java.lang.Object DEFAULT_DELEGATE -> c
    java.lang.Object mBridge -> a
    java.lang.Object getBridge() -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl -> android.support.v4.view.b:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1 -> android.support.v4.view.b$1:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> a
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl this$0 -> b
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl -> android.support.v4.view.c:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl -> android.support.v4.view.d:
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1 -> android.support.v4.view.d$1:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> a
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl this$0 -> b
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl -> android.support.v4.view.e:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompatIcs -> android.support.v4.view.f:
android.support.v4.view.AccessibilityDelegateCompatIcs$1 -> android.support.v4.view.f$1:
    android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge val$bridge -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge -> android.support.v4.view.g:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompatJellyBean -> android.support.v4.view.h:
android.support.v4.view.AccessibilityDelegateCompatJellyBean$1 -> android.support.v4.view.h$1:
    android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean val$bridge -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean -> android.support.v4.view.i:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.GravityCompat -> android.support.v4.view.j:
    android.support.v4.view.GravityCompat$GravityCompatImpl IMPL -> a
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImpl -> android.support.v4.view.k:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImplBase -> android.support.v4.view.l:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImplJellybeanMr1 -> android.support.v4.view.m:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.KeyEventCompat -> android.support.v4.view.n:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> a
    boolean hasModifiers$79c6ddc0(android.view.KeyEvent) -> a
    boolean hasNoModifiers(android.view.KeyEvent) -> b
    void startTracking(android.view.KeyEvent) -> c
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl -> android.support.v4.view.o:
    int metaStateFilterDirectionalModifiers$2e71581f(int,int,int,int) -> a
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers$255f299(int) -> b
    boolean metaStateHasNoModifiers(int) -> c
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompat$EclairKeyEventVersionImpl -> android.support.v4.view.p:
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> android.support.v4.view.q:
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers$255f299(int) -> b
    boolean metaStateHasNoModifiers(int) -> c
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> android.support.v4.view.r:
    boolean metaStateHasModifiers$255f299(int) -> b
    boolean metaStateHasNoModifiers(int) -> c
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.MotionEventCompat -> android.support.v4.view.s:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> a
    int getActionMasked(android.view.MotionEvent) -> a
    int getActionIndex(android.view.MotionEvent) -> b
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> c
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> android.support.v4.view.t:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> android.support.v4.view.u:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> android.support.v4.view.v:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.PagerAdapter -> android.support.v4.view.w:
    android.database.DataSetObservable mObservable -> mObservable
    int POSITION_UNCHANGED -> POSITION_UNCHANGED
    int POSITION_NONE -> POSITION_NONE
    int getCount() -> getCount
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    void startUpdate(android.view.View) -> startUpdate
    java.lang.Object instantiateItem(android.view.View,int) -> instantiateItem
    void destroyItem(android.view.View,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.View,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.View) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
    int getItemPosition(java.lang.Object) -> getItemPosition
    void notifyDataSetChanged() -> notifyDataSetChanged
    void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
    java.lang.CharSequence getPageTitle(int) -> getPageTitle
    float getPageWidth(int) -> getPageWidth
android.support.v4.view.PagerTabStrip -> android.support.v4.view.PagerTabStrip:
    int mIndicatorColor -> f
    int mIndicatorHeight -> g
    int mMinPaddingBottom -> h
    int mMinTextSpacing -> i
    int mMinStripHeight -> j
    int mTabPadding -> k
    android.graphics.Paint mTabPaint -> l
    android.graphics.Rect mTempRect -> m
    int mTabAlpha -> n
    boolean mDrawFullUnderline -> o
    boolean mDrawFullUnderlineSet -> p
    int mFullUnderlineHeight -> q
    boolean mIgnoreTap -> r
    float mInitialMotionX -> s
    float mInitialMotionY -> t
    int mTouchSlop -> u
    void setPadding(int,int,int,int) -> setPadding
    void setTextSpacing(int) -> a
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setBackgroundColor(int) -> setBackgroundColor
    void setBackgroundResource(int) -> setBackgroundResource
    int getMinHeight() -> a
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onDraw(android.graphics.Canvas) -> onDraw
    void updateTextPositions(int,float,boolean) -> a
android.support.v4.view.PagerTabStrip$1 -> android.support.v4.view.PagerTabStrip$1:
    android.support.v4.view.PagerTabStrip this$0 -> a
    void onClick(android.view.View) -> onClick
android.support.v4.view.PagerTabStrip$2 -> android.support.v4.view.PagerTabStrip$2:
    android.support.v4.view.PagerTabStrip this$0 -> a
    void onClick(android.view.View) -> onClick
android.support.v4.view.PagerTitleStrip -> android.support.v4.view.PagerTitleStrip:
    android.support.v4.view.ViewPager mPager -> a
    android.widget.TextView mPrevText -> b
    android.widget.TextView mCurrText -> c
    android.widget.TextView mNextText -> d
    int mLastKnownCurrentPage -> f
    float mLastKnownPositionOffset -> g
    int mScaledTextSpacing -> h
    int mGravity -> i
    boolean mUpdatingText -> j
    boolean mUpdatingPositions -> k
    android.support.v4.view.PagerTitleStrip$PageListener mPageListener -> l
    java.lang.ref.WeakReference mWatchingAdapter -> m
    int[] ATTRS -> n
    int[] TEXT_ATTRS -> o
    int mNonPrimaryAlpha -> p
    int mTextColor -> e
    android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl IMPL -> q
    void setSingleLineAllCaps(android.widget.TextView) -> a
    void setTextSpacing(int) -> a
    int getTextSpacing() -> b
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void updateText(int,android.support.v4.view.PagerAdapter) -> a
    void requestLayout() -> requestLayout
    void updateAdapter(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
    void updateTextPositions(int,float,boolean) -> a
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    int getMinHeight() -> a
    float access$100(android.support.v4.view.PagerTitleStrip) -> a
android.support.v4.view.PagerTitleStrip$PageListener -> android.support.v4.view.x:
    int mScrollState -> b
    android.support.v4.view.PagerTitleStrip this$0 -> a
    void onPageScrolled$486775f1(int,float) -> a
    void onPageSelected$13462e() -> a
    void onPageScrollStateChanged(int) -> a
    void onChanged() -> onChanged
android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl -> android.support.v4.view.y:
    void setSingleLineAllCaps(android.widget.TextView) -> a
android.support.v4.view.PagerTitleStrip$PagerTitleStripImplBase -> android.support.v4.view.z:
    void setSingleLineAllCaps(android.widget.TextView) -> a
android.support.v4.view.PagerTitleStrip$PagerTitleStripImplIcs -> android.support.v4.view.aa:
    void setSingleLineAllCaps(android.widget.TextView) -> a
android.support.v4.view.PagerTitleStripIcs -> android.support.v4.view.ab:
android.support.v4.view.PagerTitleStripIcs$SingleLineAllCapsTransform -> android.support.v4.view.ac:
    java.util.Locale mLocale -> a
    java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View) -> getTransformation
android.support.v4.view.VelocityTrackerCompat -> android.support.v4.view.ad:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> a
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> android.support.v4.view.ae:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> android.support.v4.view.af:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> android.support.v4.view.ag:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.ViewCompat -> android.support.v4.view.ah:
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> a
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility$5359dc9a(android.view.View) -> d
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> e
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> f
    android.view.ViewParent getParentForAccessibility(android.view.View) -> g
    boolean isOpaque(android.view.View) -> h
android.support.v4.view.ViewCompat$BaseViewCompatImpl -> android.support.v4.view.ai:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    long getFrameTime() -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility$5359dc9a(android.view.View) -> d
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> e
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> f
    android.view.ViewParent getParentForAccessibility(android.view.View) -> g
    boolean isOpaque(android.view.View) -> h
android.support.v4.view.ViewCompat$EclairMr1ViewCompatImpl -> android.support.v4.view.aj:
    boolean isOpaque(android.view.View) -> h
android.support.v4.view.ViewCompat$GBViewCompatImpl -> android.support.v4.view.ak:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompat$HCViewCompatImpl -> android.support.v4.view.al:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> e
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> android.support.v4.view.am:
    boolean canScrollHorizontally(android.view.View,int) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
android.support.v4.view.ViewCompat$JBViewCompatImpl -> android.support.v4.view.an:
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility$5359dc9a(android.view.View) -> d
    android.view.ViewParent getParentForAccessibility(android.view.View) -> g
android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl -> android.support.v4.view.ao:
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> f
android.support.v4.view.ViewCompat$KitKatViewCompatImpl -> android.support.v4.view.ap:
android.support.v4.view.ViewCompat$ViewCompatImpl -> android.support.v4.view.aq:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility$5359dc9a(android.view.View) -> d
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> e
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> f
    android.view.ViewParent getParentForAccessibility(android.view.View) -> g
    boolean isOpaque(android.view.View) -> h
android.support.v4.view.ViewConfigurationCompat -> android.support.v4.view.ar:
    android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl IMPL -> a
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl -> android.support.v4.view.as:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl -> android.support.v4.view.at:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl -> android.support.v4.view.au:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewGroupCompat -> android.support.v4.view.av:
    android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl IMPL -> a
    void setMotionEventSplittingEnabled$4d3af60(android.view.ViewGroup) -> a
android.support.v4.view.ViewGroupCompat$ViewGroupCompatHCImpl -> android.support.v4.view.aw:
    void setMotionEventSplittingEnabled$4d3af60(android.view.ViewGroup) -> a
android.support.v4.view.ViewGroupCompat$ViewGroupCompatIcsImpl -> android.support.v4.view.ax:
android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl -> android.support.v4.view.ay:
    void setMotionEventSplittingEnabled$4d3af60(android.view.ViewGroup) -> a
android.support.v4.view.ViewGroupCompat$ViewGroupCompatJellybeanMR2Impl -> android.support.v4.view.az:
android.support.v4.view.ViewGroupCompat$ViewGroupCompatStubImpl -> android.support.v4.view.ba:
    void setMotionEventSplittingEnabled$4d3af60(android.view.ViewGroup) -> a
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    int[] LAYOUT_ATTRS -> a
    int mExpectedAdapterCount -> b
    java.util.Comparator COMPARATOR -> c
    android.view.animation.Interpolator sInterpolator -> d
    java.util.ArrayList mItems -> e
    android.support.v4.view.ViewPager$ItemInfo mTempItem -> f
    android.graphics.Rect mTempRect -> g
    android.support.v4.view.PagerAdapter mAdapter -> h
    int mCurItem -> i
    int mRestoredCurItem -> j
    android.os.Parcelable mRestoredAdapterState -> k
    java.lang.ClassLoader mRestoredClassLoader -> l
    android.widget.Scroller mScroller -> m
    int mPageMargin -> n
    android.graphics.drawable.Drawable mMarginDrawable -> o
    int mTopPageBounds -> p
    int mBottomPageBounds -> q
    float mFirstOffset -> r
    float mLastOffset -> s
    int mChildWidthMeasureSpec -> t
    int mChildHeightMeasureSpec -> u
    boolean mInLayout -> v
    boolean mScrollingCacheEnabled -> w
    boolean mPopulatePending -> x
    int mOffscreenPageLimit -> y
    boolean mIsBeingDragged -> z
    boolean mIsUnableToDrag -> A
    int mDefaultGutterSize -> B
    int mGutterSize -> C
    int mTouchSlop -> D
    float mLastMotionX -> E
    float mLastMotionY -> F
    float mInitialMotionX -> G
    float mInitialMotionY -> H
    int mActivePointerId -> I
    android.view.VelocityTracker mVelocityTracker -> J
    int mMinimumVelocity -> K
    int mMaximumVelocity -> L
    int mFlingDistance -> M
    int mCloseEnough -> N
    boolean mFakeDragging -> O
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> P
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> Q
    boolean mFirstLayout -> R
    boolean mNeedCalculatePageOffsets -> S
    boolean mCalledSuper -> T
    int mDecorChildCount -> U
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> V
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> W
    android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener -> Z
    android.support.v4.view.ViewPager$PageTransformer mPageTransformer -> aa
    int mDrawingOrder -> ab
    java.util.ArrayList mDrawingOrderedChildren -> ac
    android.support.v4.view.ViewPager$ViewPositionComparator sPositionComparator -> ad
    java.lang.Runnable mEndScrollRunnable -> ae
    int mScrollState -> af
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setScrollState(int) -> b
    android.support.v4.view.PagerAdapter getAdapter() -> a
    void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> a
    int getClientWidth() -> e
    void setCurrentItem(int) -> a
    void setCurrentItem$2563266(int) -> c
    int getCurrentItem() -> b
    void setCurrentItemInternal(int,boolean,boolean) -> a
    void setCurrentItemInternal(int,boolean,boolean,int) -> a
    void scrollToItem(int,boolean,int,boolean) -> a
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    android.support.v4.view.ViewPager$OnPageChangeListener setInternalPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> a
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int) -> a
    void populate() -> c
    void populate(int) -> d
    void sortChildDrawingOrder() -> f
    void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo) -> a
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View) -> a
    android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForPosition(int) -> e
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void onLayout(boolean,int,int,int,int) -> onLayout
    void computeScroll() -> computeScroll
    boolean pageScrolled(int) -> f
    void onPageScrolled$486775f1(int,float) -> a
    void completeScroll(boolean) -> a
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestParentDisallowInterceptTouchEvent$1385ff() -> g
    boolean performDrag(float) -> a
    android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition() -> h
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    void onSecondaryPointerUp(android.view.MotionEvent) -> a
    void endDrag() -> i
    void setScrollingCacheEnabled(boolean) -> b
    boolean canScrollHorizontally(int) -> canScrollHorizontally
    boolean canScroll(android.view.View,boolean,int,int,int) -> a
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean arrowScroll(int) -> g
    android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> a
    boolean pageLeft() -> j
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void addTouchables(java.util.ArrayList) -> addTouchables
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    void access$000$b020504(android.support.v4.view.ViewPager) -> a
    android.support.v4.view.PagerAdapter access$200(android.support.v4.view.ViewPager) -> b
    int access$300(android.support.v4.view.ViewPager) -> c
    int[] access$400() -> d
android.support.v4.view.ViewPager$1 -> android.support.v4.view.ViewPager$1:
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> android.support.v4.view.ViewPager$2:
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$3 -> android.support.v4.view.ViewPager$3:
    android.support.v4.view.ViewPager this$0 -> a
    void run() -> run
android.support.v4.view.ViewPager$Decor -> android.support.v4.view.bb:
android.support.v4.view.ViewPager$ItemInfo -> android.support.v4.view.bc:
    java.lang.Object object -> a
    int position -> b
    boolean scrolling -> c
    float widthFactor -> d
    float offset -> e
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.ViewPager$LayoutParams:
    boolean isDecor -> a
    int gravity -> b
    float widthFactor -> c
    boolean needsMeasure -> d
    int position -> e
    int childIndex -> f
android.support.v4.view.ViewPager$MyAccessibilityDelegate -> android.support.v4.view.bd:
    android.support.v4.view.ViewPager this$0 -> b
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
    boolean canScroll() -> b
android.support.v4.view.ViewPager$OnAdapterChangeListener -> android.support.v4.view.be:
android.support.v4.view.ViewPager$OnPageChangeListener -> android.support.v4.view.bf:
    void onPageScrolled$486775f1(int,float) -> a
    void onPageSelected$13462e() -> a
    void onPageScrollStateChanged(int) -> a
android.support.v4.view.ViewPager$PageTransformer -> android.support.v4.view.bg:
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    int position -> a
    android.os.Parcelable adapterState -> b
    java.lang.ClassLoader loader -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> android.support.v4.view.ViewPager$SavedState$1:
    java.lang.Object[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
android.support.v4.view.ViewPager$ViewPositionComparator -> android.support.v4.view.bh:
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat -> android.support.v4.view.a.a:
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl IMPL -> a
    java.lang.Object mInfo -> b
    java.lang.Object getInfo() -> a
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void setSource(android.view.View) -> a
    void addChild(android.view.View) -> b
    int getActions() -> b
    void addAction(int) -> a
    void setMovementGranularities(int) -> b
    int getMovementGranularities() -> c
    void setParent(android.view.View) -> c
    void getBoundsInParent(android.graphics.Rect) -> a
    void setBoundsInParent(android.graphics.Rect) -> b
    void getBoundsInScreen(android.graphics.Rect) -> c
    void setBoundsInScreen(android.graphics.Rect) -> d
    boolean isFocusable() -> d
    void setFocusable(boolean) -> a
    boolean isFocused() -> e
    void setFocused(boolean) -> b
    boolean isVisibleToUser() -> f
    void setVisibleToUser(boolean) -> c
    boolean isAccessibilityFocused() -> g
    void setAccessibilityFocused(boolean) -> d
    boolean isSelected() -> h
    void setSelected(boolean) -> e
    boolean isClickable() -> i
    void setClickable(boolean) -> f
    boolean isLongClickable() -> j
    void setLongClickable(boolean) -> g
    boolean isEnabled() -> k
    void setEnabled(boolean) -> h
    void setScrollable(boolean) -> i
    java.lang.CharSequence getPackageName() -> l
    void setPackageName(java.lang.CharSequence) -> a
    java.lang.CharSequence getClassName() -> m
    void setClassName(java.lang.CharSequence) -> b
    java.lang.CharSequence getContentDescription() -> n
    void setContentDescription(java.lang.CharSequence) -> c
    void recycle() -> o
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl -> android.support.v4.view.a.b:
    java.lang.Object obtain(java.lang.Object) -> a
    void addAction(java.lang.Object,int) -> a
    void addChild(java.lang.Object,android.view.View) -> a
    int getActions(java.lang.Object) -> b
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    java.lang.CharSequence getClassName(java.lang.Object) -> c
    java.lang.CharSequence getContentDescription(java.lang.Object) -> d
    java.lang.CharSequence getPackageName(java.lang.Object) -> e
    java.lang.CharSequence getText(java.lang.Object) -> f
    boolean isCheckable(java.lang.Object) -> g
    boolean isChecked(java.lang.Object) -> h
    boolean isClickable(java.lang.Object) -> i
    boolean isEnabled(java.lang.Object) -> j
    boolean isFocusable(java.lang.Object) -> k
    boolean isFocused(java.lang.Object) -> l
    boolean isLongClickable(java.lang.Object) -> m
    boolean isPassword(java.lang.Object) -> n
    boolean isScrollable(java.lang.Object) -> o
    boolean isSelected(java.lang.Object) -> p
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> c
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> d
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    void setClickable(java.lang.Object,boolean) -> a
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> b
    void setEnabled(java.lang.Object,boolean) -> b
    void setFocusable(java.lang.Object,boolean) -> c
    void setFocused(java.lang.Object,boolean) -> d
    void setLongClickable(java.lang.Object,boolean) -> e
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> c
    void setParent(java.lang.Object,android.view.View) -> b
    void setScrollable(java.lang.Object,boolean) -> f
    void setSelected(java.lang.Object,boolean) -> g
    void setSource(java.lang.Object,android.view.View) -> c
    void recycle(java.lang.Object) -> q
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl -> android.support.v4.view.a.c:
    java.lang.Object obtain(java.lang.Object) -> a
    void setSource(java.lang.Object,android.view.View) -> c
    void addChild(java.lang.Object,android.view.View) -> a
    int getActions(java.lang.Object) -> b
    void addAction(java.lang.Object,int) -> a
    void setMovementGranularities(java.lang.Object,int) -> b
    int getMovementGranularities(java.lang.Object) -> r
    void setParent(java.lang.Object,android.view.View) -> b
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> c
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> d
    boolean isCheckable(java.lang.Object) -> g
    boolean isChecked(java.lang.Object) -> h
    boolean isFocusable(java.lang.Object) -> k
    void setFocusable(java.lang.Object,boolean) -> c
    boolean isFocused(java.lang.Object) -> l
    void setFocused(java.lang.Object,boolean) -> d
    boolean isVisibleToUser(java.lang.Object) -> s
    void setVisibleToUser(java.lang.Object,boolean) -> h
    boolean isAccessibilityFocused(java.lang.Object) -> t
    void setAccessibilityFocused(java.lang.Object,boolean) -> i
    boolean isSelected(java.lang.Object) -> p
    void setSelected(java.lang.Object,boolean) -> g
    boolean isClickable(java.lang.Object) -> i
    void setClickable(java.lang.Object,boolean) -> a
    boolean isLongClickable(java.lang.Object) -> m
    void setLongClickable(java.lang.Object,boolean) -> e
    boolean isEnabled(java.lang.Object) -> j
    void setEnabled(java.lang.Object,boolean) -> b
    boolean isPassword(java.lang.Object) -> n
    boolean isScrollable(java.lang.Object) -> o
    void setScrollable(java.lang.Object,boolean) -> f
    java.lang.CharSequence getPackageName(java.lang.Object) -> e
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> c
    java.lang.CharSequence getClassName(java.lang.Object) -> c
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    java.lang.CharSequence getText(java.lang.Object) -> f
    java.lang.CharSequence getContentDescription(java.lang.Object) -> d
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> b
    void recycle(java.lang.Object) -> q
    java.lang.String getViewIdResourceName(java.lang.Object) -> u
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl -> android.support.v4.view.a.d:
    boolean isVisibleToUser(java.lang.Object) -> s
    void setVisibleToUser(java.lang.Object,boolean) -> h
    boolean isAccessibilityFocused(java.lang.Object) -> t
    void setAccessibilityFocused(java.lang.Object,boolean) -> i
    void setMovementGranularities(java.lang.Object,int) -> b
    int getMovementGranularities(java.lang.Object) -> r
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanMr2Impl -> android.support.v4.view.a.e:
    java.lang.String getViewIdResourceName(java.lang.Object) -> u
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoKitKatImpl -> android.support.v4.view.a.f:
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl -> android.support.v4.view.a.g:
    java.lang.Object obtain(java.lang.Object) -> a
    void addAction(java.lang.Object,int) -> a
    void addChild(java.lang.Object,android.view.View) -> a
    int getActions(java.lang.Object) -> b
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    java.lang.CharSequence getClassName(java.lang.Object) -> c
    java.lang.CharSequence getContentDescription(java.lang.Object) -> d
    java.lang.CharSequence getPackageName(java.lang.Object) -> e
    java.lang.CharSequence getText(java.lang.Object) -> f
    boolean isCheckable(java.lang.Object) -> g
    boolean isChecked(java.lang.Object) -> h
    boolean isClickable(java.lang.Object) -> i
    boolean isEnabled(java.lang.Object) -> j
    boolean isFocusable(java.lang.Object) -> k
    boolean isFocused(java.lang.Object) -> l
    boolean isVisibleToUser(java.lang.Object) -> s
    boolean isAccessibilityFocused(java.lang.Object) -> t
    boolean isLongClickable(java.lang.Object) -> m
    boolean isPassword(java.lang.Object) -> n
    boolean isScrollable(java.lang.Object) -> o
    boolean isSelected(java.lang.Object) -> p
    void setMovementGranularities(java.lang.Object,int) -> b
    int getMovementGranularities(java.lang.Object) -> r
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> c
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> d
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    void setClickable(java.lang.Object,boolean) -> a
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> b
    void setEnabled(java.lang.Object,boolean) -> b
    void setFocusable(java.lang.Object,boolean) -> c
    void setFocused(java.lang.Object,boolean) -> d
    void setVisibleToUser(java.lang.Object,boolean) -> h
    void setAccessibilityFocused(java.lang.Object,boolean) -> i
    void setLongClickable(java.lang.Object,boolean) -> e
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> c
    void setParent(java.lang.Object,android.view.View) -> b
    void setScrollable(java.lang.Object,boolean) -> f
    void setSelected(java.lang.Object,boolean) -> g
    void setSource(java.lang.Object,android.view.View) -> c
    void recycle(java.lang.Object) -> q
    java.lang.String getViewIdResourceName(java.lang.Object) -> u
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat -> android.support.v4.view.a.h:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl IMPL -> a
    java.lang.Object mProvider -> b
    java.lang.Object getProvider() -> a
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo$f3a5639() -> b
    boolean performAction$5985f823() -> c
    java.util.List findAccessibilityNodeInfosByText$2393931d() -> d
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat findFocus$f3a5639() -> e
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl -> android.support.v4.view.a.i:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl -> android.support.v4.view.a.j:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1 -> android.support.v4.view.a.j$1:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl this$0 -> b
    boolean performAction$5985f823() -> a
    java.util.List findAccessibilityNodeInfosByText$2393931d() -> b
    java.lang.Object createAccessibilityNodeInfo$54cf32c4() -> c
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl -> android.support.v4.view.a.k:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl$1 -> android.support.v4.view.a.k$1:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl this$0 -> b
    boolean performAction$5985f823() -> a
    java.util.List findAccessibilityNodeInfosByText$2393931d() -> b
    java.lang.Object createAccessibilityNodeInfo$54cf32c4() -> c
    java.lang.Object findFocus$54cf32c4() -> d
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderStubImpl -> android.support.v4.view.a.l:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean -> android.support.v4.view.a.m:
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1 -> android.support.v4.view.a.m$1:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge val$bridge -> a
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    boolean performAction(int,int,android.os.Bundle) -> performAction
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge -> android.support.v4.view.a.n:
    java.lang.Object createAccessibilityNodeInfo$54cf32c4() -> c
    boolean performAction$5985f823() -> a
    java.util.List findAccessibilityNodeInfosByText$2393931d() -> b
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat -> android.support.v4.view.a.o:
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$1 -> android.support.v4.view.a.o$1:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge val$bridge -> a
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    boolean performAction(int,int,android.os.Bundle) -> performAction
    android.view.accessibility.AccessibilityNodeInfo findFocus(int) -> findFocus
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge -> android.support.v4.view.a.p:
    java.lang.Object createAccessibilityNodeInfo$54cf32c4() -> c
    boolean performAction$5985f823() -> a
    java.util.List findAccessibilityNodeInfosByText$2393931d() -> b
    java.lang.Object findFocus$54cf32c4() -> d
android.support.v4.view.accessibility.AccessibilityRecordCompat -> android.support.v4.view.a.q:
    android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl IMPL -> a
    java.lang.Object mRecord -> b
    android.support.v4.view.accessibility.AccessibilityRecordCompat obtain() -> a
    void setScrollable(boolean) -> a
    void setItemCount(int) -> a
    void setFromIndex(int) -> b
    void setToIndex(int) -> c
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl -> android.support.v4.view.a.r:
    java.lang.Object obtain() -> a
    void setFromIndex(java.lang.Object,int) -> a
    void setItemCount(java.lang.Object,int) -> b
    void setScrollable(java.lang.Object,boolean) -> a
    void setToIndex(java.lang.Object,int) -> c
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsMr1Impl -> android.support.v4.view.a.s:
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl -> android.support.v4.view.a.t:
    java.lang.Object obtain() -> a
    void setScrollable(java.lang.Object,boolean) -> a
    void setItemCount(java.lang.Object,int) -> b
    void setFromIndex(java.lang.Object,int) -> a
    void setToIndex(java.lang.Object,int) -> c
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordJellyBeanImpl -> android.support.v4.view.a.u:
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl -> android.support.v4.view.a.v:
    java.lang.Object obtain() -> a
    void setFromIndex(java.lang.Object,int) -> a
    void setItemCount(java.lang.Object,int) -> b
    void setScrollable(java.lang.Object,boolean) -> a
    void setToIndex(java.lang.Object,int) -> c
android.support.v4.widget.ContentLoadingProgressBar -> android.support.v4.widget.ContentLoadingProgressBar:
    long mStartTime -> a
    boolean mPostedHide -> b
    boolean mPostedShow -> c
    boolean mDismissed -> d
    java.lang.Runnable mDelayedHide -> e
    java.lang.Runnable mDelayedShow -> f
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void removeCallbacks() -> a
    boolean access$002$38dcb275(android.support.v4.widget.ContentLoadingProgressBar) -> a
    long access$102(android.support.v4.widget.ContentLoadingProgressBar,long) -> a
    boolean access$202$38dcb275(android.support.v4.widget.ContentLoadingProgressBar) -> b
    boolean access$300(android.support.v4.widget.ContentLoadingProgressBar) -> c
android.support.v4.widget.ContentLoadingProgressBar$1 -> android.support.v4.widget.ContentLoadingProgressBar$1:
    android.support.v4.widget.ContentLoadingProgressBar this$0 -> a
    void run() -> run
android.support.v4.widget.ContentLoadingProgressBar$2 -> android.support.v4.widget.ContentLoadingProgressBar$2:
    android.support.v4.widget.ContentLoadingProgressBar this$0 -> a
    void run() -> run
android.support.v4.widget.DrawerLayout -> android.support.v4.widget.DrawerLayout:
    int[] LAYOUT_ATTRS -> a
    int mMinDrawerMargin -> b
    int mScrimColor -> c
    float mScrimOpacity -> d
    android.graphics.Paint mScrimPaint -> e
    android.support.v4.widget.ViewDragHelper mLeftDragger -> f
    android.support.v4.widget.ViewDragHelper mRightDragger -> g
    android.support.v4.widget.DrawerLayout$ViewDragCallback mLeftCallback -> h
    android.support.v4.widget.DrawerLayout$ViewDragCallback mRightCallback -> i
    int mDrawerState -> j
    boolean mInLayout -> k
    boolean mFirstLayout -> l
    int mLockModeLeft -> m
    int mLockModeRight -> n
    boolean mDisallowInterceptRequested -> o
    boolean mChildrenCanceledTouch -> p
    android.support.v4.widget.DrawerLayout$DrawerListener mListener -> q
    float mInitialMotionX -> r
    float mInitialMotionY -> s
    android.graphics.drawable.Drawable mShadowLeft -> t
    android.graphics.drawable.Drawable mShadowRight -> u
    void setDrawerLockMode(int,int) -> a
    int getDrawerLockMode(android.view.View) -> a
    void updateDrawerState$5cdeb3e3(int,android.view.View) -> a
    void setDrawerViewOffset(android.view.View,float) -> a
    float getDrawerViewOffset(android.view.View) -> b
    int getDrawerViewAbsoluteGravity(android.view.View) -> e
    boolean checkDrawerViewAbsoluteGravity(android.view.View,int) -> a
    android.view.View findOpenDrawer() -> a
    android.view.View findDrawerWithGravity(int) -> a
    java.lang.String gravityToString(int) -> b
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void requestLayout() -> requestLayout
    void computeScroll() -> computeScroll
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    boolean isContentView(android.view.View) -> f
    boolean isDrawerView(android.view.View) -> c
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    void closeDrawers(boolean) -> a
    void openDrawer(android.view.View) -> g
    void openDrawer$13462e() -> b
    void closeDrawer(android.view.View) -> d
    void closeDrawer$13462e() -> c
    boolean isDrawerOpen$134632() -> d
    boolean isDrawerVisible(android.view.View) -> h
    boolean isDrawerVisible$134632() -> e
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.view.View findVisibleDrawer() -> h
    void cancelChildViewTouch() -> f
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    int[] access$100() -> g
android.support.v4.widget.DrawerLayout$AccessibilityDelegate -> android.support.v4.widget.a:
    android.graphics.Rect mTmpRect -> c
    android.support.v4.widget.DrawerLayout this$0 -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void addChildrenForAccessibility(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.view.ViewGroup) -> a
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    boolean filter(android.view.View) -> b
android.support.v4.widget.DrawerLayout$DrawerListener -> android.support.v4.widget.b:
    void onDrawerSlide(android.view.View,float) -> onDrawerSlide
    void onDrawerOpened(android.view.View) -> onDrawerOpened
    void onDrawerClosed(android.view.View) -> onDrawerClosed
    void onDrawerStateChanged(int) -> onDrawerStateChanged
android.support.v4.widget.DrawerLayout$LayoutParams -> android.support.v4.widget.DrawerLayout$LayoutParams:
    int gravity -> a
    float onScreen -> b
    boolean isPeeking -> c
    boolean knownOpen -> d
android.support.v4.widget.DrawerLayout$SavedState -> android.support.v4.widget.DrawerLayout$SavedState:
    int openDrawerGravity -> a
    int lockModeLeft -> b
    int lockModeRight -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.DrawerLayout$SavedState$1 -> android.support.v4.widget.DrawerLayout$SavedState$1:
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.DrawerLayout$ViewDragCallback -> android.support.v4.widget.c:
    int mAbsGravity -> b
    android.support.v4.widget.ViewDragHelper mDragger -> c
    java.lang.Runnable mPeekRunnable -> d
    android.support.v4.widget.DrawerLayout this$0 -> a
    void setDragger(android.support.v4.widget.ViewDragHelper) -> a
    void removeCallbacks() -> a
    boolean tryCaptureView$5359dc96(android.view.View) -> a
    void onViewDragStateChanged(int) -> a
    void onViewPositionChanged$5b6f797d(android.view.View,int) -> a
    void onViewCaptured$5359dc9a(android.view.View) -> b
    void closeOtherDrawer() -> c
    void onViewReleased$17e2ac03(android.view.View,float) -> a
    void onEdgeTouched$255f295() -> b
    void onEdgeDragStarted(int,int) -> a
    int getViewHorizontalDragRange(android.view.View) -> c
    int clampViewPositionHorizontal$17e143b0(android.view.View,int) -> b
    int clampViewPositionVertical$17e143b0(android.view.View) -> d
    void access$000(android.support.v4.widget.DrawerLayout$ViewDragCallback) -> a
android.support.v4.widget.DrawerLayout$ViewDragCallback$1 -> android.support.v4.widget.c$1:
    android.support.v4.widget.DrawerLayout$ViewDragCallback this$1 -> a
    void run() -> run
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.widget.d:
    java.lang.Object mEdgeEffect -> a
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> b
    void setSize(int,int) -> a
    boolean isFinished() -> a
    void finish() -> b
    boolean onPull(float) -> a
    boolean onRelease() -> c
    boolean draw(android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> android.support.v4.widget.e:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> android.support.v4.widget.f:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> android.support.v4.widget.g:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.ScrollerCompat -> android.support.v4.widget.h:
    java.lang.Object mScroller -> a
    android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl IMPL -> b
    android.support.v4.widget.ScrollerCompat create(android.content.Context,android.view.animation.Interpolator) -> a
    boolean isFinished() -> a
    int getCurrX() -> b
    int getCurrY() -> c
    int getFinalX() -> d
    int getFinalY() -> e
    boolean computeScrollOffset() -> f
    void startScroll(int,int,int,int,int) -> a
    void abortAnimation() -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl -> android.support.v4.widget.i:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> a
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplBase -> android.support.v4.widget.j:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> a
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplGingerbread -> android.support.v4.widget.k:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> a
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplIcs -> android.support.v4.widget.l:
android.support.v4.widget.SlidingPaneLayout -> android.support.v4.widget.SlidingPaneLayout:
    int mSliderFadeColor -> b
    int mCoveredFadeColor -> c
    android.graphics.drawable.Drawable mShadowDrawable -> d
    int mOverhangSize -> e
    boolean mCanSlide -> f
    android.view.View mSlideableView -> g
    float mSlideOffset -> h
    float mParallaxOffset -> i
    int mSlideRange -> j
    boolean mIsUnableToDrag -> k
    int mParallaxBy -> l
    float mInitialMotionX -> m
    float mInitialMotionY -> n
    android.support.v4.widget.SlidingPaneLayout$PanelSlideListener mPanelSlideListener -> o
    android.support.v4.widget.ViewDragHelper mDragHelper -> p
    boolean mPreservedOpenState -> q
    boolean mFirstLayout -> r
    android.graphics.Rect mTmpRect -> s
    java.util.ArrayList mPostedRunnables -> t
    android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl IMPL -> a
    void dispatchOnPanelOpened$3c7ec8c3() -> a
    void dispatchOnPanelClosed$3c7ec8c3() -> b
    void updateObscuredViewsVisibility(android.view.View) -> a
    void setAllChildrenVisible() -> c
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean closePane$5359dc96$134632() -> d
    void dimChildView(android.view.View,float,int) -> a
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    void invalidateChildRegion(android.view.View) -> c
    boolean smoothSlideTo$254957c(float) -> a
    void computeScroll() -> computeScroll
    void draw(android.graphics.Canvas) -> draw
    void parallaxOtherViews(float) -> b
    boolean isDimmed(android.view.View) -> b
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    boolean access$100(android.support.v4.widget.SlidingPaneLayout) -> a
    android.support.v4.widget.ViewDragHelper access$200(android.support.v4.widget.SlidingPaneLayout) -> b
    float access$300(android.support.v4.widget.SlidingPaneLayout) -> c
    android.view.View access$400(android.support.v4.widget.SlidingPaneLayout) -> d
    boolean access$502(android.support.v4.widget.SlidingPaneLayout,boolean) -> a
    void access$600(android.support.v4.widget.SlidingPaneLayout,int) -> a
    int access$700(android.support.v4.widget.SlidingPaneLayout) -> e
    void access$900(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
    java.util.ArrayList access$1000(android.support.v4.widget.SlidingPaneLayout) -> f
android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate -> android.support.v4.widget.m:
    android.graphics.Rect mTmpRect -> c
    android.support.v4.widget.SlidingPaneLayout this$0 -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    boolean filter(android.view.View) -> b
android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable -> android.support.v4.widget.n:
    android.view.View mChildView -> a
    android.support.v4.widget.SlidingPaneLayout this$0 -> b
    void run() -> run
android.support.v4.widget.SlidingPaneLayout$DragHelperCallback -> android.support.v4.widget.o:
    android.support.v4.widget.SlidingPaneLayout this$0 -> a
    boolean tryCaptureView$5359dc96(android.view.View) -> a
    void onViewDragStateChanged(int) -> a
    void onViewCaptured$5359dc9a(android.view.View) -> b
    void onViewPositionChanged$5b6f797d(android.view.View,int) -> a
    void onViewReleased$17e2ac03(android.view.View,float) -> a
    int getViewHorizontalDragRange(android.view.View) -> c
    int clampViewPositionHorizontal$17e143b0(android.view.View,int) -> b
    void onEdgeDragStarted(int,int) -> a
android.support.v4.widget.SlidingPaneLayout$LayoutParams -> android.support.v4.widget.SlidingPaneLayout$LayoutParams:
    int[] ATTRS -> e
    float weight -> a
    boolean slideable -> b
    boolean dimWhenOffset -> c
    android.graphics.Paint dimPaint -> d
android.support.v4.widget.SlidingPaneLayout$PanelSlideListener -> android.support.v4.widget.p:
android.support.v4.widget.SlidingPaneLayout$SavedState -> android.support.v4.widget.SlidingPaneLayout$SavedState:
    boolean isOpen -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.SlidingPaneLayout$SavedState$1 -> android.support.v4.widget.SlidingPaneLayout$SavedState$1:
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl -> android.support.v4.widget.q:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplBase -> android.support.v4.widget.r:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJB -> android.support.v4.widget.s:
    java.lang.reflect.Method mGetDisplayList -> a
    java.lang.reflect.Field mRecreateDisplayList -> b
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJBMR1 -> android.support.v4.widget.t:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.ViewDragHelper -> android.support.v4.widget.u:
    int mDragState -> a
    int mTouchSlop -> b
    int mActivePointerId -> c
    float[] mInitialMotionX -> d
    float[] mInitialMotionY -> e
    float[] mLastMotionX -> f
    float[] mLastMotionY -> g
    int[] mInitialEdgesTouched -> h
    int[] mEdgeDragsInProgress -> i
    int[] mEdgeDragsLocked -> j
    int mPointersDown -> k
    android.view.VelocityTracker mVelocityTracker -> l
    float mMaxVelocity -> m
    float mMinVelocity -> n
    int mEdgeSize -> o
    int mTrackingEdges -> p
    android.support.v4.widget.ScrollerCompat mScroller -> q
    android.support.v4.widget.ViewDragHelper$Callback mCallback -> r
    android.view.View mCapturedView -> s
    boolean mReleaseInProgress -> t
    android.view.ViewGroup mParentView -> u
    android.view.animation.Interpolator sInterpolator -> v
    java.lang.Runnable mSetIdleRunnable -> w
    android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup,float,android.support.v4.widget.ViewDragHelper$Callback) -> a
    void setMinVelocity(float) -> a
    int getViewDragState() -> a
    void setEdgeTrackingEnabled(int) -> a
    int getEdgeSize() -> b
    void captureChildView(android.view.View,int) -> a
    android.view.View getCapturedView() -> c
    int getTouchSlop() -> d
    void cancel() -> e
    void abort() -> f
    boolean smoothSlideViewTo(android.view.View,int,int) -> a
    boolean settleCapturedViewAt(int,int) -> a
    boolean forceSettleCapturedViewAt(int,int,int,int) -> a
    int computeAxisDuration(int,int,int) -> a
    int clampMag(int,int,int) -> b
    float clampMag(float,float,float) -> a
    boolean continueSettling$138603() -> g
    void dispatchViewReleased$2548a35(float) -> b
    void clearMotionHistory(int) -> c
    void saveInitialMotion(float,float,int) -> a
    void saveLastMotion(android.view.MotionEvent) -> c
    void setDragState(int) -> b
    boolean tryCaptureViewForDrag(android.view.View,int) -> b
    boolean shouldInterceptTouchEvent(android.view.MotionEvent) -> a
    void processTouchEvent(android.view.MotionEvent) -> b
    void reportNewEdgeDrags(float,float,int) -> b
    boolean checkNewEdgeDrag(float,float,int,int) -> a
    boolean checkTouchSlop$17e2abff(android.view.View,float) -> a
    boolean checkTouchSlop$134632() -> h
    void releaseViewForPointerUp() -> i
    boolean isViewUnder(android.view.View,int,int) -> b
    android.view.View findTopChildUnder(int,int) -> b
android.support.v4.widget.ViewDragHelper$1 -> android.support.v4.widget.u$1:
    float getInterpolation(float) -> getInterpolation
android.support.v4.widget.ViewDragHelper$2 -> android.support.v4.widget.u$2:
    android.support.v4.widget.ViewDragHelper this$0 -> a
    void run() -> run
android.support.v4.widget.ViewDragHelper$Callback -> android.support.v4.widget.v:
    void onViewDragStateChanged(int) -> a
    void onViewPositionChanged$5b6f797d(android.view.View,int) -> a
    void onViewCaptured$5359dc9a(android.view.View) -> b
    void onViewReleased$17e2ac03(android.view.View,float) -> a
    void onEdgeTouched$255f295() -> b
    void onEdgeDragStarted(int,int) -> a
    int getViewHorizontalDragRange(android.view.View) -> c
    boolean tryCaptureView$5359dc96(android.view.View) -> a
    int clampViewPositionHorizontal$17e143b0(android.view.View,int) -> b
    int clampViewPositionVertical$17e143b0(android.view.View) -> d
com.pouchdb.pouchdroid.PouchDroidActivity -> com.pouchdb.pouchdroid.PouchDroidActivity:
    com.pouchdb.pouchdroid.PouchDroidRuntime couchDroidRuntime -> couchDroidRuntime
    void onPouchDroidReady(com.pouchdb.pouchdroid.PouchDroidRuntime) -> onPouchDroidReady
    void onResume() -> onResume
    void onPause() -> onPause
com.pouchdb.pouchdroid.PouchDroidActivity$1 -> com.pouchdb.pouchdroid.PouchDroidActivity$1:
    com.pouchdb.pouchdroid.PouchDroidActivity this$0 -> this$0
    void onReady(com.pouchdb.pouchdroid.PouchDroidRuntime) -> onReady
com.pouchdb.pouchdroid.PouchDroidFragment -> com.pouchdb.pouchdroid.PouchDroidFragment:
    com.pouchdb.pouchdroid.PouchDroidRuntime couchDroidRuntime -> couchDroidRuntime
    void onPouchDroidReady(com.pouchdb.pouchdroid.PouchDroidRuntime) -> onPouchDroidReady
    void onResume() -> onResume
    void onPause() -> onPause
com.pouchdb.pouchdroid.PouchDroidFragment$1 -> com.pouchdb.pouchdroid.PouchDroidFragment$1:
    com.pouchdb.pouchdroid.PouchDroidFragment this$0 -> this$0
    void onReady(com.pouchdb.pouchdroid.PouchDroidRuntime) -> onReady
com.pouchdb.pouchdroid.PouchDroidListActivity -> com.pouchdb.pouchdroid.PouchDroidListActivity:
    com.pouchdb.pouchdroid.PouchDroidRuntime couchDroidRuntime -> couchDroidRuntime
    void onPouchDroidReady(com.pouchdb.pouchdroid.PouchDroidRuntime) -> onPouchDroidReady
    void onResume() -> onResume
    void onPause() -> onPause
com.pouchdb.pouchdroid.PouchDroidListActivity$1 -> com.pouchdb.pouchdroid.PouchDroidListActivity$1:
    com.pouchdb.pouchdroid.PouchDroidListActivity this$0 -> this$0
    void onReady(com.pouchdb.pouchdroid.PouchDroidRuntime) -> onReady
com.pouchdb.pouchdroid.PouchDroidRuntime -> com.pouchdb.pouchdroid.PouchDroidRuntime:
    com.pouchdb.pouchdroid.util.UtilLogger log -> log
    int JSINTERFACE_VERIFIER_CALLER_INTERVAL -> JSINTERFACE_VERIFIER_CALLER_INTERVAL
    boolean USE_WEINRE -> USE_WEINRE
    boolean USE_MINIFIED_POUCH -> USE_MINIFIED_POUCH
    boolean USE_MINIFIED_COUCHDROID -> USE_MINIFIED_COUCHDROID
    java.lang.String WEINRE_URL -> WEINRE_URL
    android.app.Activity activity -> activity
    android.webkit.WebView webView -> webView
    com.pouchdb.pouchdroid.PouchDroidRuntime$JSInterfaceVerifierCaller jsInterfaceVerifierCaller -> jsInterfaceVerifierCaller
    com.pouchdb.pouchdroid.migration.PouchDroidProgressListener progressListener -> progressListener
    java.util.List clientProgressListeners -> clientProgressListeners
    com.pouchdb.pouchdroid.PouchDroidRuntime$OnReadyListener onReadyListener -> onReadyListener
    android.app.Activity getActivity() -> getActivity
    android.webkit.WebView getWebView() -> getWebView
    com.pouchdb.pouchdroid.migration.PouchDroidProgressListener createProgressListener() -> createProgressListener
    void loadInitialJavascript() -> loadInitialJavascript
    void loadJavascript(java.lang.CharSequence) -> loadJavascript
    void initWebView() -> initWebView
    void close() -> close
    void addListener(com.pouchdb.pouchdroid.migration.PouchDroidProgressListener) -> addListener
    com.pouchdb.pouchdroid.util.UtilLogger access$0() -> access$0
    com.pouchdb.pouchdroid.PouchDroidRuntime$JSInterfaceVerifierCaller access$1(com.pouchdb.pouchdroid.PouchDroidRuntime) -> access$1
    void access$2(com.pouchdb.pouchdroid.PouchDroidRuntime) -> access$2
    com.pouchdb.pouchdroid.PouchDroidRuntime$OnReadyListener access$3(com.pouchdb.pouchdroid.PouchDroidRuntime) -> access$3
    android.app.Activity access$4(com.pouchdb.pouchdroid.PouchDroidRuntime) -> access$4
    java.util.List access$5(com.pouchdb.pouchdroid.PouchDroidRuntime) -> access$5
    android.webkit.WebView access$6(com.pouchdb.pouchdroid.PouchDroidRuntime) -> access$6
com.pouchdb.pouchdroid.PouchDroidRuntime$1 -> com.pouchdb.pouchdroid.PouchDroidRuntime$1:
    com.pouchdb.pouchdroid.PouchDroidRuntime this$0 -> this$0
    void onProgress(com.pouchdb.pouchdroid.migration.PouchDroidProgressListener$ProgressType,java.lang.String,int,int) -> onProgress
com.pouchdb.pouchdroid.PouchDroidRuntime$2 -> com.pouchdb.pouchdroid.PouchDroidRuntime$2:
    com.pouchdb.pouchdroid.PouchDroidRuntime this$0 -> this$0
    java.lang.CharSequence val$javascript -> val$javascript
    void run() -> run
com.pouchdb.pouchdroid.PouchDroidRuntime$JSInterfaceVerifier -> com.pouchdb.pouchdroid.PouchDroidRuntime$JSInterfaceVerifier:
    com.pouchdb.pouchdroid.PouchDroidRuntime this$0 -> this$0
    void callback() -> callback
    com.pouchdb.pouchdroid.PouchDroidRuntime access$1(com.pouchdb.pouchdroid.PouchDroidRuntime$JSInterfaceVerifier) -> access$1
com.pouchdb.pouchdroid.PouchDroidRuntime$JSInterfaceVerifier$1 -> com.pouchdb.pouchdroid.PouchDroidRuntime$JSInterfaceVerifier$1:
    com.pouchdb.pouchdroid.PouchDroidRuntime$JSInterfaceVerifier this$1 -> this$1
    void run() -> run
com.pouchdb.pouchdroid.PouchDroidRuntime$JSInterfaceVerifierCaller -> com.pouchdb.pouchdroid.PouchDroidRuntime$JSInterfaceVerifierCaller:
    boolean cancelled -> cancelled
    com.pouchdb.pouchdroid.PouchDroidRuntime this$0 -> this$0
    java.lang.Void doInBackground(java.lang.Void[]) -> doInBackground
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    boolean access$1(com.pouchdb.pouchdroid.PouchDroidRuntime$JSInterfaceVerifierCaller) -> access$1
    void access$2(com.pouchdb.pouchdroid.PouchDroidRuntime$JSInterfaceVerifierCaller,boolean) -> access$2
com.pouchdb.pouchdroid.PouchDroidRuntime$MyWebChromeClient -> com.pouchdb.pouchdroid.PouchDroidRuntime$MyWebChromeClient:
    com.pouchdb.pouchdroid.PouchDroidRuntime this$0 -> this$0
    void onConsoleMessage(java.lang.String,int,java.lang.String) -> onConsoleMessage
com.pouchdb.pouchdroid.PouchDroidRuntime$OnReadyListener -> com.pouchdb.pouchdroid.PouchDroidRuntime$OnReadyListener:
    void onReady(com.pouchdb.pouchdroid.PouchDroidRuntime) -> onReady
com.pouchdb.pouchdroid.ProgressReporter -> com.pouchdb.pouchdroid.ProgressReporter:
    com.pouchdb.pouchdroid.util.UtilLogger log -> log
    android.app.Activity activity -> activity
    com.pouchdb.pouchdroid.migration.PouchDroidProgressListener listener -> listener
    void reportProgress(java.lang.String,java.lang.String,int,int) -> reportProgress
    com.pouchdb.pouchdroid.migration.PouchDroidProgressListener access$0(com.pouchdb.pouchdroid.ProgressReporter) -> access$0
    com.pouchdb.pouchdroid.util.UtilLogger access$1() -> access$1
com.pouchdb.pouchdroid.ProgressReporter$1 -> com.pouchdb.pouchdroid.ProgressReporter$1:
    com.pouchdb.pouchdroid.ProgressReporter this$0 -> this$0
    java.lang.String val$type -> val$type
    java.lang.String val$tableName -> val$tableName
    int val$numRowsTotal -> val$numRowsTotal
    int val$numRowsLoaded -> val$numRowsLoaded
    void run() -> run
com.pouchdb.pouchdroid.R -> com.pouchdb.pouchdroid.R:
com.pouchdb.pouchdroid.R$raw -> com.pouchdb.pouchdroid.R$raw:
    int pouchdroid -> pouchdroid
    int pouchdroid_min -> pouchdroid_min
    int pouchdb -> pouchdb
    int pouchdb_min -> pouchdb_min
com.pouchdb.pouchdroid.example1.BuildConfig -> com.pouchdb.pouchdroid.example1.BuildConfig:
    boolean DEBUG -> DEBUG
com.pouchdb.pouchdroid.example1.MainActivity -> com.pouchdb.pouchdroid.example1.MainActivity:
    java.lang.String COUCHDB_URL -> COUCHDB_URL
    int EXPECTED_COUNT -> EXPECTED_COUNT
    boolean RANDOMIZE_DB -> RANDOMIZE_DB
    boolean LOAD_ONLY_ONE_MONSTER -> LOAD_ONLY_ONE_MONSTER
    android.database.sqlite.SQLiteDatabase sqliteDatabase -> sqliteDatabase
    long startTime -> startTime
    android.widget.TextView text -> text
    android.widget.ProgressBar progress -> progress
    android.widget.ProgressBar progressIndeterminate -> progressIndeterminate
    void onCreate(android.os.Bundle) -> onCreate
    void onPouchDroidReady(com.pouchdb.pouchdroid.PouchDroidRuntime) -> onPouchDroidReady
    void onPause() -> onPause
    void loadPokemonData() -> loadPokemonData
    void onProgress(com.pouchdb.pouchdroid.migration.PouchDroidProgressListener$ProgressType,java.lang.String,int,int) -> onProgress
    void access$0(com.pouchdb.pouchdroid.example1.MainActivity) -> access$0
    android.widget.TextView access$1(com.pouchdb.pouchdroid.example1.MainActivity) -> access$1
    void access$2(com.pouchdb.pouchdroid.example1.MainActivity,long) -> access$2
    android.database.sqlite.SQLiteDatabase access$3(com.pouchdb.pouchdroid.example1.MainActivity) -> access$3
com.pouchdb.pouchdroid.example1.MainActivity$1 -> com.pouchdb.pouchdroid.example1.MainActivity$1:
    com.pouchdb.pouchdroid.example1.MainActivity this$0 -> this$0
    com.pouchdb.pouchdroid.PouchDroidRuntime val$runtime -> val$runtime
    java.lang.Void doInBackground(java.lang.Void[]) -> doInBackground
    void onPostExecute(java.lang.Void) -> onPostExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.pouchdb.pouchdroid.example1.PocketMonsterHelper -> com.pouchdb.pouchdroid.example1.PocketMonsterHelper:
    java.util.List readInPocketMonsters(android.content.Context) -> readInPocketMonsters
com.pouchdb.pouchdroid.example1.R -> com.pouchdb.pouchdroid.example1.R:
com.pouchdb.pouchdroid.example1.R$attr -> com.pouchdb.pouchdroid.example1.R$attr:
com.pouchdb.pouchdroid.example1.R$color -> com.pouchdb.pouchdroid.example1.R$color:
    int alert_blue -> alert_blue
    int alert_red -> alert_red
com.pouchdb.pouchdroid.example1.R$dimen -> com.pouchdb.pouchdroid.example1.R$dimen:
    int activity_horizontal_margin -> activity_horizontal_margin
    int activity_vertical_margin -> activity_vertical_margin
com.pouchdb.pouchdroid.example1.R$drawable -> com.pouchdb.pouchdroid.example1.R$drawable:
    int ic_launcher -> ic_launcher
com.pouchdb.pouchdroid.example1.R$id -> com.pouchdb.pouchdroid.example1.R$id:
    int action_foo -> action_foo
    int progress_indeterminate -> progress_indeterminate
com.pouchdb.pouchdroid.example1.R$layout -> com.pouchdb.pouchdroid.example1.R$layout:
    int activity_main -> activity_main
com.pouchdb.pouchdroid.example1.R$menu -> com.pouchdb.pouchdroid.example1.R$menu:
    int main -> main
com.pouchdb.pouchdroid.example1.R$raw -> com.pouchdb.pouchdroid.example1.R$raw:
    int pouchdroid -> pouchdroid
    int pouchdroid_min -> pouchdroid_min
    int pokemon -> pokemon
    int pouchdb -> pouchdb
    int pouchdb_min -> pouchdb_min
com.pouchdb.pouchdroid.example1.R$string -> com.pouchdb.pouchdroid.example1.R$string:
    int action_settings -> action_settings
    int app_name -> app_name
    int hello_world -> hello_world
com.pouchdb.pouchdroid.example1.R$style -> com.pouchdb.pouchdroid.example1.R$style:
    int AppBaseTheme -> AppBaseTheme
    int AppTheme -> AppTheme
com.pouchdb.pouchdroid.example1.pojo.PocketMonster -> com.pouchdb.pouchdroid.example1.pojo.PocketMonster:
    java.lang.String uniqueId -> uniqueId
    int nationalDexNumber -> nationalDexNumber
    java.lang.String type1 -> type1
    java.lang.String type2 -> type2
    java.lang.String name -> name
    java.lang.String getUniqueId() -> getUniqueId
    void setUniqueId(java.lang.String) -> setUniqueId
    int getNationalDexNumber() -> getNationalDexNumber
    void setNationalDexNumber(int) -> setNationalDexNumber
    java.lang.String getType1() -> getType1
    void setType1(java.lang.String) -> setType1
    java.lang.String getType2() -> getType2
    void setType2(java.lang.String) -> setType2
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    java.lang.String getPouchId() -> getPouchId
    void setPouchId(java.lang.String) -> setPouchId
    java.lang.String toString() -> toString
com.pouchdb.pouchdroid.migration.PouchDroidMigrationTask -> com.pouchdb.pouchdroid.migration.PouchDroidMigrationTask:
    com.pouchdb.pouchdroid.util.UtilLogger log -> log
    int BATCH_SIZE_HIMEM -> BATCH_SIZE_HIMEM
    int BATCH_SIZE_LOMEM -> BATCH_SIZE_LOMEM
    int SDK_INT_CUTOFF -> SDK_INT_CUTOFF
    java.util.List sqliteTableInfos -> sqliteTableInfos
    org.codehaus.jackson.map.ObjectMapper objectMapper -> objectMapper
    android.database.sqlite.SQLiteDatabase sqliteDatabase -> sqliteDatabase
    java.lang.String userId -> userId
    java.lang.String couchdbUrl -> couchdbUrl
    java.lang.String dbName -> dbName
    com.pouchdb.pouchdroid.migration.PouchDroidProgressListener clientListener -> clientListener
    com.pouchdb.pouchdroid.migration.PouchDroidProgressListener listener -> listener
    com.pouchdb.pouchdroid.PouchDroidRuntime runtime -> runtime
    void setSqliteTables(java.util.List) -> setSqliteTables
    void start() -> start
    com.pouchdb.pouchdroid.migration.PouchDroidProgressListener wrapClientListener() -> wrapClientListener
    void replicate() -> replicate
    void migrateSqliteTable(com.pouchdb.pouchdroid.migration.PouchDroidMigrationTask$SqliteTableInfo,int) -> migrateSqliteTable
    void loadBatchFromTable(com.pouchdb.pouchdroid.migration.SqliteTable,java.util.List,int,int) -> loadBatchFromTable
    void initPouchDBHelper() -> initPouchDBHelper
    java.lang.CharSequence createFinalReportProgressJs() -> createFinalReportProgressJs
    java.lang.CharSequence createInitReportProgressJs(com.pouchdb.pouchdroid.migration.SqliteTable,int) -> createInitReportProgressJs
    java.lang.CharSequence createReportProgressJs(com.pouchdb.pouchdroid.migration.SqliteTable,int,int) -> createReportProgressJs
    void loadBatchIntoPouchdb(org.codehaus.jackson.node.ObjectNode,java.lang.CharSequence) -> loadBatchIntoPouchdb
    void convertBatchToJsonList(org.codehaus.jackson.node.ArrayNode,org.codehaus.jackson.node.ArrayNode,int,java.util.List,com.pouchdb.pouchdroid.migration.SqliteTable) -> convertBatchToJsonList
    int getBatchSize() -> getBatchSize
    int countNumRows(com.pouchdb.pouchdroid.migration.SqliteTable) -> countNumRows
    java.util.List getColumnsForTable(java.lang.String) -> getColumnsForTable
    void access$1(com.pouchdb.pouchdroid.migration.PouchDroidMigrationTask,java.lang.String) -> access$1
    void access$2(com.pouchdb.pouchdroid.migration.PouchDroidMigrationTask,java.lang.String) -> access$2
    void access$3(com.pouchdb.pouchdroid.migration.PouchDroidMigrationTask,com.pouchdb.pouchdroid.migration.PouchDroidProgressListener) -> access$3
    java.lang.String access$4(com.pouchdb.pouchdroid.migration.PouchDroidMigrationTask) -> access$4
    java.lang.String access$5(com.pouchdb.pouchdroid.migration.PouchDroidMigrationTask) -> access$5
    void access$6(com.pouchdb.pouchdroid.migration.PouchDroidMigrationTask,java.util.List) -> access$6
    com.pouchdb.pouchdroid.util.UtilLogger access$7() -> access$7
    com.pouchdb.pouchdroid.migration.PouchDroidProgressListener access$8(com.pouchdb.pouchdroid.migration.PouchDroidMigrationTask) -> access$8
    java.util.List access$9(com.pouchdb.pouchdroid.migration.PouchDroidMigrationTask) -> access$9
    void access$10(com.pouchdb.pouchdroid.migration.PouchDroidMigrationTask,com.pouchdb.pouchdroid.migration.PouchDroidMigrationTask$SqliteTableInfo,int) -> access$10
    void access$11(com.pouchdb.pouchdroid.migration.PouchDroidMigrationTask) -> access$11
    com.pouchdb.pouchdroid.PouchDroidRuntime access$12(com.pouchdb.pouchdroid.migration.PouchDroidMigrationTask) -> access$12
    java.lang.CharSequence access$13(com.pouchdb.pouchdroid.migration.PouchDroidMigrationTask,com.pouchdb.pouchdroid.migration.SqliteTable,int) -> access$13
    void access$14(com.pouchdb.pouchdroid.migration.PouchDroidMigrationTask,com.pouchdb.pouchdroid.migration.SqliteTable,java.util.List,int,int) -> access$14
com.pouchdb.pouchdroid.migration.PouchDroidMigrationTask$1 -> com.pouchdb.pouchdroid.migration.PouchDroidMigrationTask$1:
    com.pouchdb.pouchdroid.migration.PouchDroidMigrationTask this$0 -> this$0
    void onProgress(com.pouchdb.pouchdroid.migration.PouchDroidProgressListener$ProgressType,java.lang.String,int,int) -> onProgress
com.pouchdb.pouchdroid.migration.PouchDroidMigrationTask$2 -> com.pouchdb.pouchdroid.migration.PouchDroidMigrationTask$2:
    com.pouchdb.pouchdroid.migration.PouchDroidMigrationTask this$0 -> this$0
    int val$offset -> val$offset
    com.pouchdb.pouchdroid.migration.PouchDroidMigrationTask$SqliteTableInfo val$sqliteTableInfo -> val$sqliteTableInfo
    java.lang.Void doInBackground(java.lang.Void[]) -> doInBackground
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.pouchdb.pouchdroid.migration.PouchDroidMigrationTask$Builder -> com.pouchdb.pouchdroid.migration.PouchDroidMigrationTask$Builder:
    com.pouchdb.pouchdroid.migration.PouchDroidMigrationTask couchdbSync -> couchdbSync
    java.util.List sqliteTables -> sqliteTables
    com.pouchdb.pouchdroid.migration.PouchDroidMigrationTask$Builder addSqliteTable(java.lang.String,java.lang.String[]) -> addSqliteTable
    com.pouchdb.pouchdroid.migration.PouchDroidMigrationTask$Builder setUserId(java.lang.String) -> setUserId
    com.pouchdb.pouchdroid.migration.PouchDroidMigrationTask$Builder setCouchdbUrl(java.lang.String) -> setCouchdbUrl
    com.pouchdb.pouchdroid.migration.PouchDroidMigrationTask$Builder setProgressListener(com.pouchdb.pouchdroid.migration.PouchDroidProgressListener) -> setProgressListener
    com.pouchdb.pouchdroid.migration.PouchDroidMigrationTask build() -> build
com.pouchdb.pouchdroid.migration.PouchDroidMigrationTask$SqliteTableInfo -> com.pouchdb.pouchdroid.migration.PouchDroidMigrationTask$SqliteTableInfo:
    com.pouchdb.pouchdroid.migration.SqliteTable table -> table
    java.util.List columns -> columns
    int totalRowCount -> totalRowCount
com.pouchdb.pouchdroid.migration.PouchDroidProgressListener -> com.pouchdb.pouchdroid.migration.PouchDroidProgressListener:
    void onProgress(com.pouchdb.pouchdroid.migration.PouchDroidProgressListener$ProgressType,java.lang.String,int,int) -> onProgress
com.pouchdb.pouchdroid.migration.PouchDroidProgressListener$ProgressType -> com.pouchdb.pouchdroid.migration.PouchDroidProgressListener$ProgressType:
    com.pouchdb.pouchdroid.migration.PouchDroidProgressListener$ProgressType Init -> Init
    com.pouchdb.pouchdroid.migration.PouchDroidProgressListener$ProgressType Copy -> Copy
    com.pouchdb.pouchdroid.migration.PouchDroidProgressListener$ProgressType Sync -> Sync
    com.pouchdb.pouchdroid.migration.PouchDroidProgressListener$ProgressType[] ENUM$VALUES -> ENUM$VALUES
    com.pouchdb.pouchdroid.migration.PouchDroidProgressListener$ProgressType[] values() -> values
    com.pouchdb.pouchdroid.migration.PouchDroidProgressListener$ProgressType valueOf(java.lang.String) -> valueOf
com.pouchdb.pouchdroid.migration.SqliteColumn -> com.pouchdb.pouchdroid.migration.SqliteColumn:
    java.lang.String name -> name
    int type -> type
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    int getType() -> getType
    void setType(int) -> setType
com.pouchdb.pouchdroid.migration.SqliteTable -> com.pouchdb.pouchdroid.migration.SqliteTable:
    java.lang.String name -> name
    java.util.List idColumns -> idColumns
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    java.util.List getIdColumns() -> getIdColumns
    void setIdColumns(java.util.List) -> setIdColumns
    java.lang.String toString() -> toString
com.pouchdb.pouchdroid.pouch.AbstractPouchDB -> com.pouchdb.pouchdroid.pouch.AbstractPouchDB:
    void destroy(java.util.Map,com.pouchdb.pouchdroid.pouch.PouchDB$StandardCallback) -> destroy
    void put(com.pouchdb.pouchdroid.pouch.PouchDocumentInterface,java.util.Map,com.pouchdb.pouchdroid.pouch.PouchDB$StandardCallback) -> put
    void post(com.pouchdb.pouchdroid.pouch.PouchDocumentInterface,java.util.Map,com.pouchdb.pouchdroid.pouch.PouchDB$StandardCallback) -> post
    void get(java.lang.String,java.util.Map,com.pouchdb.pouchdroid.pouch.PouchDB$GetCallback) -> get
    void remove(com.pouchdb.pouchdroid.pouch.PouchDocumentInterface,java.util.Map,com.pouchdb.pouchdroid.pouch.PouchDB$StandardCallback) -> remove
    void bulkDocs(java.util.List,java.util.Map,com.pouchdb.pouchdroid.pouch.PouchDB$BulkCallback) -> bulkDocs
    void allDocs(java.util.Map,com.pouchdb.pouchdroid.pouch.PouchDB$AllDocsCallback) -> allDocs
    void replicateTo(java.lang.String,java.util.Map,com.pouchdb.pouchdroid.pouch.PouchDB$ReplicateCallback) -> replicateTo
    void replicateFrom(java.lang.String,java.util.Map,com.pouchdb.pouchdroid.pouch.PouchDB$ReplicateCallback) -> replicateFrom
com.pouchdb.pouchdroid.pouch.AllDocsInfo -> com.pouchdb.pouchdroid.pouch.AllDocsInfo:
    int totalRows -> totalRows
    int offset -> offset
    java.util.List rows -> rows
    int getOffset() -> getOffset
    void setOffset(int) -> setOffset
    int getTotalRows() -> getTotalRows
    void setTotalRows(int) -> setTotalRows
    java.util.List getRows() -> getRows
    void setRows(java.util.List) -> setRows
    java.util.List getDocuments() -> getDocuments
    java.lang.String toString() -> toString
com.pouchdb.pouchdroid.pouch.AllDocsInfo$Row -> com.pouchdb.pouchdroid.pouch.AllDocsInfo$Row:
    com.pouchdb.pouchdroid.pouch.PouchDocumentInterface doc -> doc
    java.lang.String id -> id
    java.lang.String key -> key
    com.pouchdb.pouchdroid.pouch.AllDocsInfo$RowValue value -> value
    com.pouchdb.pouchdroid.pouch.PouchDocumentInterface getDoc() -> getDoc
    void setDoc(com.pouchdb.pouchdroid.pouch.PouchDocumentInterface) -> setDoc
    java.lang.String getId() -> getId
    void setId(java.lang.String) -> setId
    java.lang.String getKey() -> getKey
    void setKey(java.lang.String) -> setKey
    com.pouchdb.pouchdroid.pouch.AllDocsInfo$RowValue getValue() -> getValue
    void setValue(com.pouchdb.pouchdroid.pouch.AllDocsInfo$RowValue) -> setValue
    java.lang.String toString() -> toString
com.pouchdb.pouchdroid.pouch.AllDocsInfo$RowValue -> com.pouchdb.pouchdroid.pouch.AllDocsInfo$RowValue:
    java.lang.String rev -> rev
    java.lang.String getRev() -> getRev
    void setRev(java.lang.String) -> setRev
    java.lang.String toString() -> toString
com.pouchdb.pouchdroid.pouch.PouchDB -> com.pouchdb.pouchdroid.pouch.PouchDB:
    com.pouchdb.pouchdroid.util.UtilLogger log -> log
    java.util.concurrent.atomic.AtomicInteger POUCH_IDS -> POUCH_IDS
    int id -> id
    com.pouchdb.pouchdroid.PouchDroidRuntime runtime -> runtime
    java.lang.Class documentClass -> documentClass
    com.pouchdb.pouchdroid.pouch.PouchDB newPouchDB(java.lang.Class,com.pouchdb.pouchdroid.PouchDroidRuntime) -> newPouchDB
    com.pouchdb.pouchdroid.pouch.PouchDB newPouchDB(java.lang.Class,com.pouchdb.pouchdroid.PouchDroidRuntime,java.lang.String) -> newPouchDB
    com.pouchdb.pouchdroid.pouch.PouchDB newPouchDB(java.lang.Class,com.pouchdb.pouchdroid.PouchDroidRuntime,java.lang.String,boolean) -> newPouchDB
    void destroy(java.util.Map,com.pouchdb.pouchdroid.pouch.PouchDB$StandardCallback) -> destroy
    void destroy(com.pouchdb.pouchdroid.pouch.PouchDB$StandardCallback) -> destroy
    void destroy(java.util.Map) -> destroy
    void destroy() -> destroy
    void put(com.pouchdb.pouchdroid.pouch.PouchDocumentInterface,java.util.Map,com.pouchdb.pouchdroid.pouch.PouchDB$StandardCallback) -> put
    void put(com.pouchdb.pouchdroid.pouch.PouchDocumentInterface,java.util.Map) -> put
    void put(com.pouchdb.pouchdroid.pouch.PouchDocumentInterface,com.pouchdb.pouchdroid.pouch.PouchDB$StandardCallback) -> put
    void put(com.pouchdb.pouchdroid.pouch.PouchDocumentInterface) -> put
    void post(com.pouchdb.pouchdroid.pouch.PouchDocumentInterface,java.util.Map,com.pouchdb.pouchdroid.pouch.PouchDB$StandardCallback) -> post
    void post(com.pouchdb.pouchdroid.pouch.PouchDocumentInterface,java.util.Map) -> post
    void post(com.pouchdb.pouchdroid.pouch.PouchDocumentInterface,com.pouchdb.pouchdroid.pouch.PouchDB$StandardCallback) -> post
    void post(com.pouchdb.pouchdroid.pouch.PouchDocumentInterface) -> post
    void get(java.lang.String,java.util.Map,com.pouchdb.pouchdroid.pouch.PouchDB$GetCallback) -> get
    void get(java.lang.String,java.util.Map) -> get
    void get(java.lang.String,com.pouchdb.pouchdroid.pouch.PouchDB$GetCallback) -> get
    void get(java.lang.String) -> get
    void remove(com.pouchdb.pouchdroid.pouch.PouchDocumentInterface,java.util.Map,com.pouchdb.pouchdroid.pouch.PouchDB$StandardCallback) -> remove
    void remove(com.pouchdb.pouchdroid.pouch.PouchDocumentInterface,java.util.Map) -> remove
    void remove(com.pouchdb.pouchdroid.pouch.PouchDocumentInterface,com.pouchdb.pouchdroid.pouch.PouchDB$StandardCallback) -> remove
    void remove(com.pouchdb.pouchdroid.pouch.PouchDocumentInterface) -> remove
    void bulkDocs(java.util.List,java.util.Map,com.pouchdb.pouchdroid.pouch.PouchDB$BulkCallback) -> bulkDocs
    void bulkDocs(java.util.List,java.util.Map) -> bulkDocs
    void bulkDocs(java.util.List,com.pouchdb.pouchdroid.pouch.PouchDB$BulkCallback) -> bulkDocs
    void bulkDocs(java.util.List) -> bulkDocs
    void allDocs(java.util.Map,com.pouchdb.pouchdroid.pouch.PouchDB$AllDocsCallback) -> allDocs
    void allDocs(com.pouchdb.pouchdroid.pouch.PouchDB$AllDocsCallback) -> allDocs
    void allDocs(boolean,java.util.Map,com.pouchdb.pouchdroid.pouch.PouchDB$AllDocsCallback) -> allDocs
    void allDocs(boolean,com.pouchdb.pouchdroid.pouch.PouchDB$AllDocsCallback) -> allDocs
    void replicateTo(java.lang.String,java.util.Map,com.pouchdb.pouchdroid.pouch.PouchDB$ReplicateCallback) -> replicateTo
    void replicateTo(java.lang.String,com.pouchdb.pouchdroid.pouch.PouchDB$ReplicateCallback) -> replicateTo
    void replicateTo(java.lang.String) -> replicateTo
    void replicateFrom(java.lang.String,java.util.Map,com.pouchdb.pouchdroid.pouch.PouchDB$ReplicateCallback) -> replicateFrom
    void replicateFrom(java.lang.String,com.pouchdb.pouchdroid.pouch.PouchDB$ReplicateCallback) -> replicateFrom
    void replicateFrom(java.lang.String) -> replicateFrom
    void loadAction(java.lang.String,java.util.Map,com.pouchdb.pouchdroid.pouch.PouchDB$Callback) -> loadAction
    void loadAction(java.lang.String,java.lang.String,java.util.Map,com.pouchdb.pouchdroid.pouch.PouchDB$Callback) -> loadAction
    void loadAction(java.lang.String,java.lang.String,java.util.Map,com.pouchdb.pouchdroid.pouch.PouchDB$Callback,java.lang.String) -> loadAction
    java.lang.CharSequence createFunctionForCallback(com.pouchdb.pouchdroid.pouch.PouchDB$Callback) -> createFunctionForCallback
    java.lang.Class access$0(com.pouchdb.pouchdroid.pouch.PouchDB) -> access$0
    com.pouchdb.pouchdroid.PouchDroidRuntime access$1(com.pouchdb.pouchdroid.pouch.PouchDB) -> access$1
    com.pouchdb.pouchdroid.util.UtilLogger access$2() -> access$2
com.pouchdb.pouchdroid.pouch.PouchDB$1 -> com.pouchdb.pouchdroid.pouch.PouchDB$1:
    com.pouchdb.pouchdroid.pouch.PouchDB this$0 -> this$0
    com.pouchdb.pouchdroid.pouch.PouchDB$GetCallback val$callback -> val$callback
    void onCallback(com.pouchdb.pouchdroid.pouch.PouchError,com.pouchdb.pouchdroid.pouch.PouchDocumentInterface) -> onCallback
    java.lang.Class getPrimaryClass() -> getPrimaryClass
    java.lang.Class getGenericClass() -> getGenericClass
    void onCallback(com.pouchdb.pouchdroid.pouch.PouchError,java.lang.Object) -> onCallback
    java.lang.Object getPrimaryClass() -> getPrimaryClass
com.pouchdb.pouchdroid.pouch.PouchDB$2 -> com.pouchdb.pouchdroid.pouch.PouchDB$2:
    com.pouchdb.pouchdroid.pouch.PouchDB this$0 -> this$0
    com.pouchdb.pouchdroid.pouch.PouchDB$AllDocsCallback val$callback -> val$callback
    void onCallback(com.pouchdb.pouchdroid.pouch.PouchError,com.pouchdb.pouchdroid.pouch.AllDocsInfo) -> onCallback
    java.lang.Class getGenericClass() -> getGenericClass
    void onCallback(com.pouchdb.pouchdroid.pouch.PouchError,java.lang.Object) -> onCallback
com.pouchdb.pouchdroid.pouch.PouchDB$3 -> com.pouchdb.pouchdroid.pouch.PouchDB$3:
    com.pouchdb.pouchdroid.pouch.PouchDB this$0 -> this$0
    com.pouchdb.pouchdroid.pouch.PouchDB$Callback val$innerCallback -> val$innerCallback
    void onCallback(com.pouchdb.pouchdroid.pouch.PouchError,java.lang.Object) -> onCallback
    java.lang.Object getPrimaryClass() -> getPrimaryClass
    java.lang.Class getGenericClass() -> getGenericClass
com.pouchdb.pouchdroid.pouch.PouchDB$3$1 -> com.pouchdb.pouchdroid.pouch.PouchDB$3$1:
    com.pouchdb.pouchdroid.pouch.PouchDB$3 this$1 -> this$1
    com.pouchdb.pouchdroid.pouch.PouchDB$Callback val$innerCallback -> val$innerCallback
    com.pouchdb.pouchdroid.pouch.PouchError val$err -> val$err
    java.lang.Object val$info -> val$info
    void run() -> run
com.pouchdb.pouchdroid.pouch.PouchDB$AllDocsCallback -> com.pouchdb.pouchdroid.pouch.PouchDB$AllDocsCallback:
    java.lang.Object getPrimaryClass() -> getPrimaryClass
    java.lang.Class getGenericClass() -> getGenericClass
com.pouchdb.pouchdroid.pouch.PouchDB$BulkCallback -> com.pouchdb.pouchdroid.pouch.PouchDB$BulkCallback:
    java.lang.Object getPrimaryClass() -> getPrimaryClass
    java.lang.Class getGenericClass() -> getGenericClass
com.pouchdb.pouchdroid.pouch.PouchDB$BulkCallback$1 -> com.pouchdb.pouchdroid.pouch.PouchDB$BulkCallback$1:
    com.pouchdb.pouchdroid.pouch.PouchDB$BulkCallback this$1 -> this$1
com.pouchdb.pouchdroid.pouch.PouchDB$Callback -> com.pouchdb.pouchdroid.pouch.PouchDB$Callback:
    void onCallback(com.pouchdb.pouchdroid.pouch.PouchError,java.lang.Object) -> onCallback
    java.lang.Object getPrimaryClass() -> getPrimaryClass
    java.lang.Class getGenericClass() -> getGenericClass
com.pouchdb.pouchdroid.pouch.PouchDB$GetCallback -> com.pouchdb.pouchdroid.pouch.PouchDB$GetCallback:
    java.lang.Object getPrimaryClass() -> getPrimaryClass
    java.lang.Class getGenericClass() -> getGenericClass
com.pouchdb.pouchdroid.pouch.PouchDB$ReplicateCallback -> com.pouchdb.pouchdroid.pouch.PouchDB$ReplicateCallback:
    java.lang.Object getPrimaryClass() -> getPrimaryClass
    java.lang.Class getGenericClass() -> getGenericClass
com.pouchdb.pouchdroid.pouch.PouchDB$StandardCallback -> com.pouchdb.pouchdroid.pouch.PouchDB$StandardCallback:
    java.lang.Object getPrimaryClass() -> getPrimaryClass
    java.lang.Class getGenericClass() -> getGenericClass
com.pouchdb.pouchdroid.pouch.PouchDateDeserializer -> com.pouchdb.pouchdroid.pouch.PouchDateDeserializer:
    java.lang.ThreadLocal DATE_FORMAT -> DATE_FORMAT
    java.util.Date deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
com.pouchdb.pouchdroid.pouch.PouchDateDeserializer$1 -> com.pouchdb.pouchdroid.pouch.PouchDateDeserializer$1:
    java.text.SimpleDateFormat initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
com.pouchdb.pouchdroid.pouch.PouchDocument -> com.pouchdb.pouchdroid.pouch.PouchDocument:
    java.lang.String pouchId -> pouchId
    java.lang.String pouchRev -> pouchRev
    java.lang.String getPouchId() -> getPouchId
    void setPouchId(java.lang.String) -> setPouchId
    java.lang.String getPouchRev() -> getPouchRev
    void setPouchRev(java.lang.String) -> setPouchRev
com.pouchdb.pouchdroid.pouch.PouchDocumentInterface -> com.pouchdb.pouchdroid.pouch.PouchDocumentInterface:
    java.lang.String getPouchId() -> getPouchId
    void setPouchId(java.lang.String) -> setPouchId
    java.lang.String getPouchRev() -> getPouchRev
    void setPouchRev(java.lang.String) -> setPouchRev
com.pouchdb.pouchdroid.pouch.PouchDocumentMapper -> com.pouchdb.pouchdroid.pouch.PouchDocumentMapper:
    com.pouchdb.pouchdroid.pouch.PouchDocumentInterface fromJson(java.lang.String,java.lang.Class) -> fromJson
    java.lang.String toJson(com.pouchdb.pouchdroid.pouch.PouchDocumentInterface) -> toJson
    java.lang.String toJson(java.util.List) -> toJson
com.pouchdb.pouchdroid.pouch.PouchError -> com.pouchdb.pouchdroid.pouch.PouchError:
    int status -> status
    java.lang.String error -> error
    java.lang.String reason -> reason
    int getStatus() -> getStatus
    void setStatus(int) -> setStatus
    java.lang.String getError() -> getError
    void setError(java.lang.String) -> setError
    java.lang.String getReason() -> getReason
    void setReason(java.lang.String) -> setReason
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
com.pouchdb.pouchdroid.pouch.PouchInfo -> com.pouchdb.pouchdroid.pouch.PouchInfo:
    boolean ok -> ok
    java.lang.String id -> id
    java.lang.String rev -> rev
    boolean isOk() -> isOk
    void setOk(boolean) -> setOk
    java.lang.String getId() -> getId
    void setId(java.lang.String) -> setId
    java.lang.String getRev() -> getRev
    void setRev(java.lang.String) -> setRev
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
com.pouchdb.pouchdroid.pouch.PouchJavascriptInterface -> com.pouchdb.pouchdroid.pouch.PouchJavascriptInterface:
    com.pouchdb.pouchdroid.pouch.PouchJavascriptInterface INSTANCE -> INSTANCE
    com.pouchdb.pouchdroid.util.UtilLogger log -> log
    java.util.concurrent.atomic.AtomicInteger callbackIds -> callbackIds
    android.util.SparseArray callbacks -> callbacks
    org.codehaus.jackson.map.ObjectMapper objectMapper -> objectMapper
    void callback(int) -> callback
    void callback(int,java.lang.String) -> callback
    void callback(int,java.lang.String,java.lang.String) -> callback
    void callbackAndPossiblyThrow(int,java.lang.String,java.lang.String) -> callbackAndPossiblyThrow
    int addCallback(com.pouchdb.pouchdroid.pouch.PouchDB$Callback) -> addCallback
com.pouchdb.pouchdroid.pouch.ReplicateInfo -> com.pouchdb.pouchdroid.pouch.ReplicateInfo:
    boolean ok -> ok
    int docsRead -> docsRead
    int docsWritten -> docsWritten
    java.util.Date startTime -> startTime
    java.util.Date endTime -> endTime
    boolean isOk() -> isOk
    void setOk(boolean) -> setOk
    int getDocsRead() -> getDocsRead
    void setDocsRead(int) -> setDocsRead
    int getDocsWritten() -> getDocsWritten
    void setDocsWritten(int) -> setDocsWritten
    java.util.Date getStartTime() -> getStartTime
    void setStartTime(java.util.Date) -> setStartTime
    java.util.Date getEndTime() -> getEndTime
    void setEndTime(java.util.Date) -> setEndTime
    java.lang.String toString() -> toString
com.pouchdb.pouchdroid.sqlite.BasicSQLiteOpenHelper -> com.pouchdb.pouchdroid.sqlite.BasicSQLiteOpenHelper:
    android.database.sqlite.SQLiteDatabase db -> db
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    void post(com.pouchdb.pouchdroid.sqlite.BasicSQLiteOpenHelper$SQLiteTask) -> post
com.pouchdb.pouchdroid.sqlite.BasicSQLiteOpenHelper$SQLiteTask -> com.pouchdb.pouchdroid.sqlite.BasicSQLiteOpenHelper$SQLiteTask:
    void run(android.database.sqlite.SQLiteDatabase) -> run
com.pouchdb.pouchdroid.sqlite.JavascriptCallback -> com.pouchdb.pouchdroid.sqlite.JavascriptCallback:
    int callbackId -> callbackId
    java.lang.Object arg1 -> arg1
    java.lang.CharSequence extraJavascript -> extraJavascript
    java.lang.CharSequence getExtraJavascript() -> getExtraJavascript
    int getCallbackId() -> getCallbackId
    java.lang.Object getArg1() -> getArg1
    void setArg1(java.lang.Object) -> setArg1
    java.lang.String toString() -> toString
com.pouchdb.pouchdroid.sqlite.SQLiteJavascriptInterface -> com.pouchdb.pouchdroid.sqlite.SQLiteJavascriptInterface:
    com.pouchdb.pouchdroid.util.UtilLogger log -> log
    com.pouchdb.pouchdroid.PouchDroidRuntime runtime -> runtime
    java.util.Map dbs -> dbs
    org.codehaus.jackson.map.ObjectMapper objectMapper -> objectMapper
    java.util.PriorityQueue queue -> queue
    android.util.SparseArray transactionIdsToCallbackIds -> transactionIdsToCallbackIds
    java.lang.Integer currentTransactionId -> currentTransactionId
    void sendCallback(com.pouchdb.pouchdroid.sqlite.JavascriptCallback) -> sendCallback
    java.util.List getDbNames() -> getDbNames
    void open(java.lang.String,int) -> open
    void startTransaction(int,java.lang.String,int,int) -> startTransaction
    void endTransaction(int,java.lang.String,int,int,boolean) -> endTransaction
    void executeSql(int,int,java.lang.String,java.lang.String,java.lang.String,int,int) -> executeSql
    void execute(android.database.sqlite.SQLiteDatabase,com.pouchdb.pouchdroid.sqlite.WebSqlTask) -> execute
    void bindSelectArgs(android.database.sqlite.SQLiteStatement,java.util.List) -> bindSelectArgs
    org.codehaus.jackson.node.ObjectNode createSqlError(java.lang.String) -> createSqlError
    java.util.List getSelectArgs(java.lang.String) -> getSelectArgs
    org.codehaus.jackson.node.ObjectNode getRowsResultFromQuery(android.database.Cursor) -> getRowsResultFromQuery
    void putValueBasedOnType(android.database.Cursor,org.codehaus.jackson.node.ObjectNode,java.lang.String,int) -> putValueBasedOnType
    void processQueue() -> processQueue
    void perform(com.pouchdb.pouchdroid.sqlite.WebSqlTask) -> perform
    void endTransaction(android.database.sqlite.SQLiteDatabase,com.pouchdb.pouchdroid.sqlite.WebSqlTask) -> endTransaction
    void executeQuery(android.database.sqlite.SQLiteDatabase,com.pouchdb.pouchdroid.sqlite.WebSqlTask) -> executeQuery
    void beginTransaction(android.database.sqlite.SQLiteDatabase,com.pouchdb.pouchdroid.sqlite.WebSqlTask) -> beginTransaction
    void registerCallbackIds(int,int,int) -> registerCallbackIds
    java.lang.CharSequence createClearCallbacksJson(com.pouchdb.pouchdroid.sqlite.WebSqlTask) -> createClearCallbacksJson
    void access$0(com.pouchdb.pouchdroid.sqlite.SQLiteJavascriptInterface,android.database.sqlite.SQLiteDatabase,com.pouchdb.pouchdroid.sqlite.WebSqlTask) -> access$0
    void access$1(com.pouchdb.pouchdroid.sqlite.SQLiteJavascriptInterface,android.database.sqlite.SQLiteDatabase,com.pouchdb.pouchdroid.sqlite.WebSqlTask) -> access$1
    void access$2(com.pouchdb.pouchdroid.sqlite.SQLiteJavascriptInterface,android.database.sqlite.SQLiteDatabase,com.pouchdb.pouchdroid.sqlite.WebSqlTask) -> access$2
com.pouchdb.pouchdroid.sqlite.SQLiteJavascriptInterface$1 -> com.pouchdb.pouchdroid.sqlite.SQLiteJavascriptInterface$1:
    com.pouchdb.pouchdroid.sqlite.SQLiteJavascriptInterface this$0 -> this$0
com.pouchdb.pouchdroid.sqlite.SQLiteJavascriptInterface$2 -> com.pouchdb.pouchdroid.sqlite.SQLiteJavascriptInterface$2:
    com.pouchdb.pouchdroid.sqlite.SQLiteJavascriptInterface this$0 -> this$0
    com.pouchdb.pouchdroid.sqlite.WebSqlTask val$task -> val$task
    int[] $SWITCH_TABLE$com$nolanlawson$pouchdroid$sqlite$WebSqlTask$Type -> $SWITCH_TABLE$com$nolanlawson$pouchdroid$sqlite$WebSqlTask$Type
    void run(android.database.sqlite.SQLiteDatabase) -> run
    int[] $SWITCH_TABLE$com$nolanlawson$pouchdroid$sqlite$WebSqlTask$Type() -> $SWITCH_TABLE$com$nolanlawson$pouchdroid$sqlite$WebSqlTask$Type
com.pouchdb.pouchdroid.sqlite.WebSqlTask -> com.pouchdb.pouchdroid.sqlite.WebSqlTask:
    com.pouchdb.pouchdroid.sqlite.WebSqlTask$Type type -> type
    int transactionId -> transactionId
    int queryId -> queryId
    java.lang.String dbName -> dbName
    int successId -> successId
    int errorId -> errorId
    java.util.List arguments -> arguments
    com.pouchdb.pouchdroid.sqlite.WebSqlTask$Type getType() -> getType
    int getTransactionId() -> getTransactionId
    int getQueryId() -> getQueryId
    java.lang.String getDbName() -> getDbName
    int getSuccessId() -> getSuccessId
    int getErrorId() -> getErrorId
    java.util.List getArguments() -> getArguments
    int compareTo(com.pouchdb.pouchdroid.sqlite.WebSqlTask) -> compareTo
    java.lang.String toString() -> toString
    com.pouchdb.pouchdroid.sqlite.WebSqlTask forBeginTransaction(int,java.lang.String,int,int) -> forBeginTransaction
    com.pouchdb.pouchdroid.sqlite.WebSqlTask forEndTransaction(int,java.lang.String,int,int,boolean) -> forEndTransaction
    com.pouchdb.pouchdroid.sqlite.WebSqlTask forExecuteSql(int,int,java.lang.String,java.lang.String,java.lang.String,int,int) -> forExecuteSql
    int compareTo(java.lang.Object) -> compareTo
com.pouchdb.pouchdroid.sqlite.WebSqlTask$Type -> com.pouchdb.pouchdroid.sqlite.WebSqlTask$Type:
    com.pouchdb.pouchdroid.sqlite.WebSqlTask$Type EndTransaction -> EndTransaction
    com.pouchdb.pouchdroid.sqlite.WebSqlTask$Type ExecSql -> ExecSql
    com.pouchdb.pouchdroid.sqlite.WebSqlTask$Type BeginTransaction -> BeginTransaction
    com.pouchdb.pouchdroid.sqlite.WebSqlTask$Type[] ENUM$VALUES -> ENUM$VALUES
    com.pouchdb.pouchdroid.sqlite.WebSqlTask$Type[] values() -> values
    com.pouchdb.pouchdroid.sqlite.WebSqlTask$Type valueOf(java.lang.String) -> valueOf
com.pouchdb.pouchdroid.util.Base64Compat -> com.pouchdb.pouchdroid.util.Base64Compat:
    int DEFAULT -> DEFAULT
    int NO_PADDING -> NO_PADDING
    int NO_WRAP -> NO_WRAP
    int CRLF -> CRLF
    int URL_SAFE -> URL_SAFE
    int NO_CLOSE -> NO_CLOSE
    boolean $assertionsDisabled -> $assertionsDisabled
    byte[] decode(java.lang.String,int) -> decode
    byte[] decode(byte[],int) -> decode
    byte[] decode(byte[],int,int,int) -> decode
    java.lang.String encodeToString(byte[],int) -> encodeToString
    java.lang.String encodeToString(byte[],int,int,int) -> encodeToString
    byte[] encode(byte[],int) -> encode
    byte[] encode(byte[],int,int,int) -> encode
com.pouchdb.pouchdroid.util.Base64Compat$Coder -> com.pouchdb.pouchdroid.util.Base64Compat$Coder:
    byte[] output -> output
    int op -> op
    boolean process(byte[],int,int,boolean) -> process
    int maxOutputSize(int) -> maxOutputSize
com.pouchdb.pouchdroid.util.Base64Compat$Decoder -> com.pouchdb.pouchdroid.util.Base64Compat$Decoder:
    int[] DECODE -> DECODE
    int[] DECODE_WEBSAFE -> DECODE_WEBSAFE
    int SKIP -> SKIP
    int EQUALS -> EQUALS
    int state -> state
    int value -> value
    int[] alphabet -> alphabet
    int maxOutputSize(int) -> maxOutputSize
    boolean process(byte[],int,int,boolean) -> process
com.pouchdb.pouchdroid.util.Base64Compat$Encoder -> com.pouchdb.pouchdroid.util.Base64Compat$Encoder:
    int LINE_GROUPS -> LINE_GROUPS
    byte[] ENCODE -> ENCODE
    byte[] ENCODE_WEBSAFE -> ENCODE_WEBSAFE
    byte[] tail -> tail
    int tailLen -> tailLen
    int count -> count
    boolean do_padding -> do_padding
    boolean do_newline -> do_newline
    boolean do_cr -> do_cr
    byte[] alphabet -> alphabet
    boolean $assertionsDisabled -> $assertionsDisabled
    int maxOutputSize(int) -> maxOutputSize
    boolean process(byte[],int,int,boolean) -> process
com.pouchdb.pouchdroid.util.JsonUtil -> com.pouchdb.pouchdroid.util.JsonUtil:
    org.codehaus.jackson.map.ObjectMapper objectMapper -> objectMapper
    java.lang.String simpleMap(java.lang.String,java.lang.Object) -> simpleMap
    java.lang.String simpleMap(java.lang.String,java.lang.Object,java.lang.String,java.lang.Object) -> simpleMap
    java.lang.String simpleMap(java.lang.String,java.lang.Object,java.lang.String,java.lang.Object,java.lang.String,java.lang.Object) -> simpleMap
    java.lang.String simpleMap(java.util.Map) -> simpleMap
    java.lang.String simpleString(java.lang.String) -> simpleString
    java.lang.String simplePojo(java.lang.Object) -> simplePojo
com.pouchdb.pouchdroid.util.Maps -> com.pouchdb.pouchdroid.util.Maps:
    java.util.Map quickMap(java.lang.String,java.lang.Object) -> quickMap
    java.util.Map quickMap(java.lang.String,java.lang.Object,java.lang.String,java.lang.Object) -> quickMap
    java.util.Map quickMap(java.lang.String,java.lang.Object,java.lang.String,java.lang.Object,java.lang.String,java.lang.Object) -> quickMap
com.pouchdb.pouchdroid.util.ResourceUtil -> com.pouchdb.pouchdroid.util.ResourceUtil:
    com.pouchdb.pouchdroid.util.UtilLogger log -> log
    java.lang.String loadTextFile(android.content.Context,int) -> loadTextFile
com.pouchdb.pouchdroid.util.SqliteUtil -> com.pouchdb.pouchdroid.util.SqliteUtil:
    int FIELD_TYPE_NULL -> FIELD_TYPE_NULL
    int FIELD_TYPE_INTEGER -> FIELD_TYPE_INTEGER
    int FIELD_TYPE_FLOAT -> FIELD_TYPE_FLOAT
    int FIELD_TYPE_STRING -> FIELD_TYPE_STRING
    int FIELD_TYPE_BLOB -> FIELD_TYPE_BLOB
    java.util.regex.Pattern SHORT_NAME_PATTERN -> SHORT_NAME_PATTERN
    java.util.Map LOOKUP -> LOOKUP
    int getTypeForTypeName(java.lang.String) -> getTypeForTypeName
com.pouchdb.pouchdroid.util.UtilLogger -> com.pouchdb.pouchdroid.util.UtilLogger:
    boolean DEBUG_MODE -> DEBUG_MODE
    java.util.Set SILENCE_TAGS -> SILENCE_TAGS
    java.lang.String tag -> tag
    void i(java.lang.String,java.lang.Object[]) -> i
    void i(java.lang.Exception,java.lang.String,java.lang.Object[]) -> i
    void w(java.lang.Exception,java.lang.String,java.lang.Object[]) -> w
    void w(java.lang.String,java.lang.Object[]) -> w
    void e(java.lang.String,java.lang.Object[]) -> e
    void e(java.lang.Exception,java.lang.String,java.lang.Object[]) -> e
    void v(java.lang.String,java.lang.Object[]) -> v
    void v(java.lang.Exception,java.lang.String,java.lang.Object[]) -> v
    void d(java.lang.String,java.lang.Object[]) -> d
    void d(java.lang.Exception,java.lang.String,java.lang.Object[]) -> d
    void formatArgs(java.lang.Object[]) -> formatArgs
com.pouchdb.pouchdroid.xhr.XhrJavascriptInterface -> com.pouchdb.pouchdroid.xhr.XhrJavascriptInterface:
    com.pouchdb.pouchdroid.util.UtilLogger log -> log
    org.codehaus.jackson.map.ObjectMapper objectMapper -> objectMapper
    com.pouchdb.pouchdroid.PouchDroidRuntime runtime -> runtime
    java.util.Set aborted -> aborted
    void abort(java.lang.String) -> abort
    void send(java.lang.String) -> send
    void send(java.lang.String,java.lang.String) -> send
    void send(org.codehaus.jackson.JsonNode,int,java.lang.String) -> send
    void callback(int,java.lang.String,int,java.lang.String) -> callback
    java.lang.String readInput(java.io.InputStream) -> readInput
    org.apache.http.client.methods.HttpUriRequest createRequest(java.lang.String,java.lang.String) -> createRequest
    com.pouchdb.pouchdroid.util.UtilLogger access$0() -> access$0
    java.lang.String access$1(java.io.InputStream) -> access$1
    java.util.Set access$2(com.pouchdb.pouchdroid.xhr.XhrJavascriptInterface) -> access$2
    void access$3(com.pouchdb.pouchdroid.xhr.XhrJavascriptInterface,int,java.lang.String,int,java.lang.String) -> access$3
com.pouchdb.pouchdroid.xhr.XhrJavascriptInterface$1 -> com.pouchdb.pouchdroid.xhr.XhrJavascriptInterface$1:
    com.pouchdb.pouchdroid.xhr.XhrJavascriptInterface this$0 -> this$0
com.pouchdb.pouchdroid.xhr.XhrJavascriptInterface$2 -> com.pouchdb.pouchdroid.xhr.XhrJavascriptInterface$2:
    com.pouchdb.pouchdroid.xhr.XhrJavascriptInterface this$0 -> this$0
    int val$xhrId -> val$xhrId
    org.apache.http.client.HttpClient val$client -> val$client
    org.apache.http.client.methods.HttpUriRequest val$request -> val$request
    com.pouchdb.pouchdroid.xhr.XhrJavascriptInterface$SimpleHttpResponse doInBackground(java.lang.Void[]) -> doInBackground
    void onPostExecute(com.pouchdb.pouchdroid.xhr.XhrJavascriptInterface$SimpleHttpResponse) -> onPostExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.pouchdb.pouchdroid.xhr.XhrJavascriptInterface$SimpleHttpResponse -> com.pouchdb.pouchdroid.xhr.XhrJavascriptInterface$SimpleHttpResponse:
    java.lang.String body -> body
    int statusCode -> statusCode
org.codehaus.jackson.Base64Variant -> org.codehaus.jackson.Base64Variant:
    int[] _asciiToBase64 -> _asciiToBase64
    char[] _base64ToAsciiC -> _base64ToAsciiC
    byte[] _base64ToAsciiB -> _base64ToAsciiB
    java.lang.String _name -> _name
    boolean _usesPadding -> _usesPadding
    char _paddingChar -> _paddingChar
    int _maxLineLength -> _maxLineLength
    boolean usesPadding() -> usesPadding
    boolean usesPaddingChar(char) -> usesPaddingChar
    boolean usesPaddingChar(int) -> usesPaddingChar
    char getPaddingChar() -> getPaddingChar
    int getMaxLineLength() -> getMaxLineLength
    int decodeBase64Char(char) -> decodeBase64Char
    int encodeBase64Chunk(int,char[],int) -> encodeBase64Chunk
    void encodeBase64Chunk(java.lang.StringBuilder,int) -> encodeBase64Chunk
    int encodeBase64Partial(int,int,char[],int) -> encodeBase64Partial
    void encodeBase64Partial(java.lang.StringBuilder,int,int) -> encodeBase64Partial
    java.lang.String encode(byte[],boolean) -> encode
    java.lang.String toString() -> toString
org.codehaus.jackson.Base64Variants -> org.codehaus.jackson.Base64Variants:
    org.codehaus.jackson.Base64Variant MIME -> MIME
    org.codehaus.jackson.Base64Variant MIME_NO_LINEFEEDS -> MIME_NO_LINEFEEDS
    org.codehaus.jackson.Base64Variant PEM -> PEM
    org.codehaus.jackson.Base64Variant MODIFIED_FOR_URL -> MODIFIED_FOR_URL
    org.codehaus.jackson.Base64Variant getDefaultVariant() -> getDefaultVariant
org.codehaus.jackson.JsonFactory -> org.codehaus.jackson.JsonFactory:
    int DEFAULT_PARSER_FEATURE_FLAGS -> DEFAULT_PARSER_FEATURE_FLAGS
    int DEFAULT_GENERATOR_FEATURE_FLAGS -> DEFAULT_GENERATOR_FEATURE_FLAGS
    java.lang.ThreadLocal _recyclerRef -> _recyclerRef
    org.codehaus.jackson.sym.CharsToNameCanonicalizer _rootCharSymbols -> _rootCharSymbols
    org.codehaus.jackson.sym.BytesToNameCanonicalizer _rootByteSymbols -> _rootByteSymbols
    org.codehaus.jackson.ObjectCodec _objectCodec -> _objectCodec
    int _parserFeatures -> _parserFeatures
    int _generatorFeatures -> _generatorFeatures
    org.codehaus.jackson.io.CharacterEscapes _characterEscapes -> _characterEscapes
    org.codehaus.jackson.io.InputDecorator _inputDecorator -> _inputDecorator
    org.codehaus.jackson.io.OutputDecorator _outputDecorator -> _outputDecorator
    boolean isEnabled(org.codehaus.jackson.JsonParser$Feature) -> isEnabled
    org.codehaus.jackson.JsonFactory setCodec(org.codehaus.jackson.ObjectCodec) -> setCodec
    org.codehaus.jackson.ObjectCodec getCodec() -> getCodec
    org.codehaus.jackson.JsonParser createJsonParser(java.lang.String) -> createJsonParser
    org.codehaus.jackson.JsonGenerator createJsonGenerator(java.io.Writer) -> createJsonGenerator
    org.codehaus.jackson.JsonParser _createJsonParser(java.io.Reader,org.codehaus.jackson.io.IOContext) -> _createJsonParser
    org.codehaus.jackson.JsonGenerator _createJsonGenerator(java.io.Writer,org.codehaus.jackson.io.IOContext) -> _createJsonGenerator
    org.codehaus.jackson.io.IOContext _createContext(java.lang.Object,boolean) -> _createContext
    org.codehaus.jackson.util.BufferRecycler _getBufferRecycler() -> _getBufferRecycler
org.codehaus.jackson.JsonGenerationException -> org.codehaus.jackson.JsonGenerationException:
org.codehaus.jackson.JsonGenerator -> org.codehaus.jackson.JsonGenerator:
    org.codehaus.jackson.PrettyPrinter _cfgPrettyPrinter -> _cfgPrettyPrinter
    org.codehaus.jackson.JsonGenerator setPrettyPrinter(org.codehaus.jackson.PrettyPrinter) -> setPrettyPrinter
    org.codehaus.jackson.JsonGenerator useDefaultPrettyPrinter() -> useDefaultPrettyPrinter
    org.codehaus.jackson.JsonGenerator setHighestNonEscapedChar(int) -> setHighestNonEscapedChar
    org.codehaus.jackson.JsonGenerator setCharacterEscapes(org.codehaus.jackson.io.CharacterEscapes) -> setCharacterEscapes
    void writeStartArray() -> writeStartArray
    void writeEndArray() -> writeEndArray
    void writeStartObject() -> writeStartObject
    void writeEndObject() -> writeEndObject
    void writeFieldName(java.lang.String) -> writeFieldName
    void writeFieldName(org.codehaus.jackson.io.SerializedString) -> writeFieldName
    void writeFieldName(org.codehaus.jackson.SerializableString) -> writeFieldName
    void writeString(java.lang.String) -> writeString
    void writeString(char[],int,int) -> writeString
    void writeString(org.codehaus.jackson.SerializableString) -> writeString
    void writeRaw(java.lang.String) -> writeRaw
    void writeRaw(char[],int,int) -> writeRaw
    void writeRaw(char) -> writeRaw
    void writeRawValue(java.lang.String) -> writeRawValue
    void writeBinary(org.codehaus.jackson.Base64Variant,byte[],int,int) -> writeBinary
    void writeBinary(byte[]) -> writeBinary
    void writeNumber(int) -> writeNumber
    void writeNumber(long) -> writeNumber
    void writeNumber(java.math.BigInteger) -> writeNumber
    void writeNumber(double) -> writeNumber
    void writeNumber(float) -> writeNumber
    void writeNumber(java.math.BigDecimal) -> writeNumber
    void writeNumber(java.lang.String) -> writeNumber
    void writeBoolean(boolean) -> writeBoolean
    void writeNull() -> writeNull
    void writeObject(java.lang.Object) -> writeObject
    void writeStringField(java.lang.String,java.lang.String) -> writeStringField
    void writeArrayFieldStart(java.lang.String) -> writeArrayFieldStart
    void writeObjectFieldStart(java.lang.String) -> writeObjectFieldStart
    void flush() -> flush
    void close() -> close
org.codehaus.jackson.JsonGenerator$Feature -> org.codehaus.jackson.JsonGenerator$Feature:
    org.codehaus.jackson.JsonGenerator$Feature AUTO_CLOSE_TARGET -> AUTO_CLOSE_TARGET
    org.codehaus.jackson.JsonGenerator$Feature AUTO_CLOSE_JSON_CONTENT -> AUTO_CLOSE_JSON_CONTENT
    org.codehaus.jackson.JsonGenerator$Feature QUOTE_FIELD_NAMES -> QUOTE_FIELD_NAMES
    org.codehaus.jackson.JsonGenerator$Feature QUOTE_NON_NUMERIC_NUMBERS -> QUOTE_NON_NUMERIC_NUMBERS
    org.codehaus.jackson.JsonGenerator$Feature WRITE_NUMBERS_AS_STRINGS -> WRITE_NUMBERS_AS_STRINGS
    org.codehaus.jackson.JsonGenerator$Feature FLUSH_PASSED_TO_STREAM -> FLUSH_PASSED_TO_STREAM
    org.codehaus.jackson.JsonGenerator$Feature ESCAPE_NON_ASCII -> ESCAPE_NON_ASCII
    boolean _defaultState -> _defaultState
    int _mask -> _mask
    org.codehaus.jackson.JsonGenerator$Feature[] $VALUES -> $VALUES
    org.codehaus.jackson.JsonGenerator$Feature[] values() -> values
    org.codehaus.jackson.JsonGenerator$Feature valueOf(java.lang.String) -> valueOf
    int collectDefaults() -> collectDefaults
    boolean enabledByDefault() -> enabledByDefault
    int getMask() -> getMask
org.codehaus.jackson.JsonLocation -> org.codehaus.jackson.JsonLocation:
    org.codehaus.jackson.JsonLocation NA -> NA
    long _totalBytes -> _totalBytes
    long _totalChars -> _totalChars
    int _lineNr -> _lineNr
    int _columnNr -> _columnNr
    java.lang.Object _sourceRef -> _sourceRef
    long getByteOffset() -> getByteOffset
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
org.codehaus.jackson.JsonNode -> org.codehaus.jackson.JsonNode:
    java.util.List NO_NODES -> NO_NODES
    java.util.List NO_STRINGS -> NO_STRINGS
    boolean isArray() -> isArray
    boolean isObject() -> isObject
    boolean isPojo() -> isPojo
    boolean isNumber() -> isNumber
    boolean isBinary() -> isBinary
    org.codehaus.jackson.JsonToken asToken() -> asToken
    org.codehaus.jackson.JsonParser$NumberType getNumberType() -> getNumberType
    java.lang.String getTextValue() -> getTextValue
    byte[] getBinaryValue() -> getBinaryValue
    java.lang.Number getNumberValue() -> getNumberValue
    int getIntValue() -> getIntValue
    long getLongValue() -> getLongValue
    double getDoubleValue() -> getDoubleValue
    java.math.BigDecimal getDecimalValue() -> getDecimalValue
    java.math.BigInteger getBigIntegerValue() -> getBigIntegerValue
    org.codehaus.jackson.JsonNode get(java.lang.String) -> get
    java.lang.String asText() -> asText
    int asInt() -> asInt
    int asInt(int) -> asInt
    long asLong(long) -> asLong
    boolean asBoolean() -> asBoolean
    boolean asBoolean(boolean) -> asBoolean
    int size() -> size
    java.util.Iterator iterator() -> iterator
    java.util.Iterator getElements() -> getElements
    java.util.Iterator getFields() -> getFields
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
org.codehaus.jackson.JsonParseException -> org.codehaus.jackson.JsonParseException:
org.codehaus.jackson.JsonParser -> org.codehaus.jackson.JsonParser:
    int _features -> _features
    org.codehaus.jackson.JsonToken _currToken -> _currToken
    org.codehaus.jackson.JsonToken _lastClearedToken -> _lastClearedToken
    org.codehaus.jackson.ObjectCodec getCodec() -> getCodec
    void close() -> close
    boolean isEnabled(org.codehaus.jackson.JsonParser$Feature) -> isEnabled
    org.codehaus.jackson.JsonToken nextToken() -> nextToken
    org.codehaus.jackson.JsonToken nextValue() -> nextValue
    org.codehaus.jackson.JsonParser skipChildren() -> skipChildren
    org.codehaus.jackson.JsonToken getCurrentToken() -> getCurrentToken
    void clearCurrentToken() -> clearCurrentToken
    java.lang.String getCurrentName() -> getCurrentName
    org.codehaus.jackson.JsonLocation getTokenLocation() -> getTokenLocation
    org.codehaus.jackson.JsonLocation getCurrentLocation() -> getCurrentLocation
    boolean isExpectedStartArrayToken() -> isExpectedStartArrayToken
    java.lang.String getText() -> getText
    char[] getTextCharacters() -> getTextCharacters
    int getTextLength() -> getTextLength
    int getTextOffset() -> getTextOffset
    boolean hasTextCharacters() -> hasTextCharacters
    java.lang.Number getNumberValue() -> getNumberValue
    org.codehaus.jackson.JsonParser$NumberType getNumberType() -> getNumberType
    byte getByteValue() -> getByteValue
    short getShortValue() -> getShortValue
    int getIntValue() -> getIntValue
    long getLongValue() -> getLongValue
    java.math.BigInteger getBigIntegerValue() -> getBigIntegerValue
    float getFloatValue() -> getFloatValue
    double getDoubleValue() -> getDoubleValue
    java.math.BigDecimal getDecimalValue() -> getDecimalValue
    java.lang.Object getEmbeddedObject() -> getEmbeddedObject
    byte[] getBinaryValue(org.codehaus.jackson.Base64Variant) -> getBinaryValue
    int getValueAsInt() -> getValueAsInt
    int getValueAsInt(int) -> getValueAsInt
    long getValueAsLong() -> getValueAsLong
    long getValueAsLong(long) -> getValueAsLong
    org.codehaus.jackson.JsonParseException _constructError(java.lang.String) -> _constructError
org.codehaus.jackson.JsonParser$Feature -> org.codehaus.jackson.JsonParser$Feature:
    org.codehaus.jackson.JsonParser$Feature AUTO_CLOSE_SOURCE -> AUTO_CLOSE_SOURCE
    org.codehaus.jackson.JsonParser$Feature ALLOW_COMMENTS -> ALLOW_COMMENTS
    org.codehaus.jackson.JsonParser$Feature ALLOW_UNQUOTED_FIELD_NAMES -> ALLOW_UNQUOTED_FIELD_NAMES
    org.codehaus.jackson.JsonParser$Feature ALLOW_SINGLE_QUOTES -> ALLOW_SINGLE_QUOTES
    org.codehaus.jackson.JsonParser$Feature ALLOW_UNQUOTED_CONTROL_CHARS -> ALLOW_UNQUOTED_CONTROL_CHARS
    org.codehaus.jackson.JsonParser$Feature ALLOW_BACKSLASH_ESCAPING_ANY_CHARACTER -> ALLOW_BACKSLASH_ESCAPING_ANY_CHARACTER
    org.codehaus.jackson.JsonParser$Feature ALLOW_NUMERIC_LEADING_ZEROS -> ALLOW_NUMERIC_LEADING_ZEROS
    org.codehaus.jackson.JsonParser$Feature ALLOW_NON_NUMERIC_NUMBERS -> ALLOW_NON_NUMERIC_NUMBERS
    org.codehaus.jackson.JsonParser$Feature INTERN_FIELD_NAMES -> INTERN_FIELD_NAMES
    org.codehaus.jackson.JsonParser$Feature CANONICALIZE_FIELD_NAMES -> CANONICALIZE_FIELD_NAMES
    boolean _defaultState -> _defaultState
    org.codehaus.jackson.JsonParser$Feature[] $VALUES -> $VALUES
    org.codehaus.jackson.JsonParser$Feature[] values() -> values
    org.codehaus.jackson.JsonParser$Feature valueOf(java.lang.String) -> valueOf
    int collectDefaults() -> collectDefaults
    boolean enabledByDefault() -> enabledByDefault
    int getMask() -> getMask
org.codehaus.jackson.JsonParser$NumberType -> org.codehaus.jackson.JsonParser$NumberType:
    org.codehaus.jackson.JsonParser$NumberType INT -> INT
    org.codehaus.jackson.JsonParser$NumberType LONG -> LONG
    org.codehaus.jackson.JsonParser$NumberType BIG_INTEGER -> BIG_INTEGER
    org.codehaus.jackson.JsonParser$NumberType FLOAT -> FLOAT
    org.codehaus.jackson.JsonParser$NumberType DOUBLE -> DOUBLE
    org.codehaus.jackson.JsonParser$NumberType BIG_DECIMAL -> BIG_DECIMAL
    org.codehaus.jackson.JsonParser$NumberType[] $VALUES -> $VALUES
    org.codehaus.jackson.JsonParser$NumberType[] values() -> values
    org.codehaus.jackson.JsonParser$NumberType valueOf(java.lang.String) -> valueOf
org.codehaus.jackson.JsonProcessingException -> org.codehaus.jackson.JsonProcessingException:
    org.codehaus.jackson.JsonLocation mLocation -> mLocation
    org.codehaus.jackson.JsonLocation getLocation() -> getLocation
    java.lang.String getMessage() -> getMessage
    java.lang.String toString() -> toString
org.codehaus.jackson.JsonStreamContext -> org.codehaus.jackson.JsonStreamContext:
    int _type -> _type
    int _index -> _index
    boolean inArray() -> inArray
    boolean inRoot() -> inRoot
    boolean inObject() -> inObject
    java.lang.String getTypeDesc() -> getTypeDesc
    int getEntryCount() -> getEntryCount
    int getCurrentIndex() -> getCurrentIndex
org.codehaus.jackson.JsonToken -> org.codehaus.jackson.JsonToken:
    org.codehaus.jackson.JsonToken NOT_AVAILABLE -> NOT_AVAILABLE
    org.codehaus.jackson.JsonToken START_OBJECT -> START_OBJECT
    org.codehaus.jackson.JsonToken END_OBJECT -> END_OBJECT
    org.codehaus.jackson.JsonToken START_ARRAY -> START_ARRAY
    org.codehaus.jackson.JsonToken END_ARRAY -> END_ARRAY
    org.codehaus.jackson.JsonToken FIELD_NAME -> FIELD_NAME
    org.codehaus.jackson.JsonToken VALUE_EMBEDDED_OBJECT -> VALUE_EMBEDDED_OBJECT
    org.codehaus.jackson.JsonToken VALUE_STRING -> VALUE_STRING
    org.codehaus.jackson.JsonToken VALUE_NUMBER_INT -> VALUE_NUMBER_INT
    org.codehaus.jackson.JsonToken VALUE_NUMBER_FLOAT -> VALUE_NUMBER_FLOAT
    org.codehaus.jackson.JsonToken VALUE_TRUE -> VALUE_TRUE
    org.codehaus.jackson.JsonToken VALUE_FALSE -> VALUE_FALSE
    org.codehaus.jackson.JsonToken VALUE_NULL -> VALUE_NULL
    java.lang.String _serialized -> _serialized
    char[] _serializedChars -> _serializedChars
    byte[] _serializedBytes -> _serializedBytes
    org.codehaus.jackson.JsonToken[] $VALUES -> $VALUES
    org.codehaus.jackson.JsonToken[] values() -> values
    org.codehaus.jackson.JsonToken valueOf(java.lang.String) -> valueOf
    java.lang.String asString() -> asString
    char[] asCharArray() -> asCharArray
    boolean isNumeric() -> isNumeric
    boolean isScalarValue() -> isScalarValue
org.codehaus.jackson.ObjectCodec -> org.codehaus.jackson.ObjectCodec:
    void writeValue(org.codehaus.jackson.JsonGenerator,java.lang.Object) -> writeValue
org.codehaus.jackson.PrettyPrinter -> org.codehaus.jackson.PrettyPrinter:
    void writeRootValueSeparator(org.codehaus.jackson.JsonGenerator) -> writeRootValueSeparator
    void writeStartObject(org.codehaus.jackson.JsonGenerator) -> writeStartObject
    void writeEndObject(org.codehaus.jackson.JsonGenerator,int) -> writeEndObject
    void writeObjectEntrySeparator(org.codehaus.jackson.JsonGenerator) -> writeObjectEntrySeparator
    void writeObjectFieldValueSeparator(org.codehaus.jackson.JsonGenerator) -> writeObjectFieldValueSeparator
    void writeStartArray(org.codehaus.jackson.JsonGenerator) -> writeStartArray
    void writeEndArray(org.codehaus.jackson.JsonGenerator,int) -> writeEndArray
    void writeArrayValueSeparator(org.codehaus.jackson.JsonGenerator) -> writeArrayValueSeparator
    void beforeArrayValues(org.codehaus.jackson.JsonGenerator) -> beforeArrayValues
    void beforeObjectEntries(org.codehaus.jackson.JsonGenerator) -> beforeObjectEntries
org.codehaus.jackson.SerializableString -> org.codehaus.jackson.SerializableString:
    java.lang.String getValue() -> getValue
    char[] asQuotedChars() -> asQuotedChars
org.codehaus.jackson.annotate.JacksonAnnotation -> org.codehaus.jackson.annotate.JacksonAnnotation:
org.codehaus.jackson.annotate.JsonAnyGetter -> org.codehaus.jackson.annotate.JsonAnyGetter:
org.codehaus.jackson.annotate.JsonAnySetter -> org.codehaus.jackson.annotate.JsonAnySetter:
org.codehaus.jackson.annotate.JsonAutoDetect -> org.codehaus.jackson.annotate.JsonAutoDetect:
    org.codehaus.jackson.annotate.JsonMethod[] value() -> value
    org.codehaus.jackson.annotate.JsonAutoDetect$Visibility getterVisibility() -> getterVisibility
    org.codehaus.jackson.annotate.JsonAutoDetect$Visibility isGetterVisibility() -> isGetterVisibility
    org.codehaus.jackson.annotate.JsonAutoDetect$Visibility setterVisibility() -> setterVisibility
    org.codehaus.jackson.annotate.JsonAutoDetect$Visibility creatorVisibility() -> creatorVisibility
    org.codehaus.jackson.annotate.JsonAutoDetect$Visibility fieldVisibility() -> fieldVisibility
org.codehaus.jackson.annotate.JsonAutoDetect$1 -> org.codehaus.jackson.annotate.JsonAutoDetect$1:
    int[] $SwitchMap$org$codehaus$jackson$annotate$JsonAutoDetect$Visibility -> $SwitchMap$org$codehaus$jackson$annotate$JsonAutoDetect$Visibility
org.codehaus.jackson.annotate.JsonAutoDetect$Visibility -> org.codehaus.jackson.annotate.JsonAutoDetect$Visibility:
    org.codehaus.jackson.annotate.JsonAutoDetect$Visibility ANY -> ANY
    org.codehaus.jackson.annotate.JsonAutoDetect$Visibility NON_PRIVATE -> NON_PRIVATE
    org.codehaus.jackson.annotate.JsonAutoDetect$Visibility PROTECTED_AND_PUBLIC -> PROTECTED_AND_PUBLIC
    org.codehaus.jackson.annotate.JsonAutoDetect$Visibility PUBLIC_ONLY -> PUBLIC_ONLY
    org.codehaus.jackson.annotate.JsonAutoDetect$Visibility NONE -> NONE
    org.codehaus.jackson.annotate.JsonAutoDetect$Visibility DEFAULT -> DEFAULT
    org.codehaus.jackson.annotate.JsonAutoDetect$Visibility[] $VALUES -> $VALUES
    org.codehaus.jackson.annotate.JsonAutoDetect$Visibility[] values() -> values
    org.codehaus.jackson.annotate.JsonAutoDetect$Visibility valueOf(java.lang.String) -> valueOf
    boolean isVisible(java.lang.reflect.Member) -> isVisible
org.codehaus.jackson.annotate.JsonBackReference -> org.codehaus.jackson.annotate.JsonBackReference:
    java.lang.String value() -> value
org.codehaus.jackson.annotate.JsonCreator -> org.codehaus.jackson.annotate.JsonCreator:
org.codehaus.jackson.annotate.JsonGetter -> org.codehaus.jackson.annotate.JsonGetter:
    java.lang.String value() -> value
org.codehaus.jackson.annotate.JsonIgnore -> org.codehaus.jackson.annotate.JsonIgnore:
    boolean value() -> value
org.codehaus.jackson.annotate.JsonIgnoreProperties -> org.codehaus.jackson.annotate.JsonIgnoreProperties:
    java.lang.String[] value() -> value
    boolean ignoreUnknown() -> ignoreUnknown
org.codehaus.jackson.annotate.JsonIgnoreType -> org.codehaus.jackson.annotate.JsonIgnoreType:
    boolean value() -> value
org.codehaus.jackson.annotate.JsonManagedReference -> org.codehaus.jackson.annotate.JsonManagedReference:
    java.lang.String value() -> value
org.codehaus.jackson.annotate.JsonMethod -> org.codehaus.jackson.annotate.JsonMethod:
    org.codehaus.jackson.annotate.JsonMethod GETTER -> GETTER
    org.codehaus.jackson.annotate.JsonMethod SETTER -> SETTER
    org.codehaus.jackson.annotate.JsonMethod CREATOR -> CREATOR
    org.codehaus.jackson.annotate.JsonMethod FIELD -> FIELD
    org.codehaus.jackson.annotate.JsonMethod IS_GETTER -> IS_GETTER
    org.codehaus.jackson.annotate.JsonMethod NONE -> NONE
    org.codehaus.jackson.annotate.JsonMethod ALL -> ALL
    org.codehaus.jackson.annotate.JsonMethod[] $VALUES -> $VALUES
    org.codehaus.jackson.annotate.JsonMethod[] values() -> values
    org.codehaus.jackson.annotate.JsonMethod valueOf(java.lang.String) -> valueOf
org.codehaus.jackson.annotate.JsonProperty -> org.codehaus.jackson.annotate.JsonProperty:
    java.lang.String value() -> value
org.codehaus.jackson.annotate.JsonPropertyOrder -> org.codehaus.jackson.annotate.JsonPropertyOrder:
    java.lang.String[] value() -> value
    boolean alphabetic() -> alphabetic
org.codehaus.jackson.annotate.JsonRawValue -> org.codehaus.jackson.annotate.JsonRawValue:
    boolean value() -> value
org.codehaus.jackson.annotate.JsonSetter -> org.codehaus.jackson.annotate.JsonSetter:
    java.lang.String value() -> value
org.codehaus.jackson.annotate.JsonSubTypes -> org.codehaus.jackson.annotate.JsonSubTypes:
    org.codehaus.jackson.annotate.JsonSubTypes$Type[] value() -> value
org.codehaus.jackson.annotate.JsonSubTypes$Type -> org.codehaus.jackson.annotate.JsonSubTypes$Type:
    java.lang.Class value() -> value
    java.lang.String name() -> name
org.codehaus.jackson.annotate.JsonTypeInfo -> org.codehaus.jackson.annotate.JsonTypeInfo:
    org.codehaus.jackson.annotate.JsonTypeInfo$Id use() -> use
    org.codehaus.jackson.annotate.JsonTypeInfo$As include() -> include
    java.lang.String property() -> property
    java.lang.Class defaultImpl() -> defaultImpl
org.codehaus.jackson.annotate.JsonTypeInfo$As -> org.codehaus.jackson.annotate.JsonTypeInfo$As:
    org.codehaus.jackson.annotate.JsonTypeInfo$As PROPERTY -> PROPERTY
    org.codehaus.jackson.annotate.JsonTypeInfo$As WRAPPER_OBJECT -> WRAPPER_OBJECT
    org.codehaus.jackson.annotate.JsonTypeInfo$As WRAPPER_ARRAY -> WRAPPER_ARRAY
    org.codehaus.jackson.annotate.JsonTypeInfo$As EXTERNAL_PROPERTY -> EXTERNAL_PROPERTY
    org.codehaus.jackson.annotate.JsonTypeInfo$As[] $VALUES -> $VALUES
    org.codehaus.jackson.annotate.JsonTypeInfo$As[] values() -> values
    org.codehaus.jackson.annotate.JsonTypeInfo$As valueOf(java.lang.String) -> valueOf
org.codehaus.jackson.annotate.JsonTypeInfo$Id -> org.codehaus.jackson.annotate.JsonTypeInfo$Id:
    org.codehaus.jackson.annotate.JsonTypeInfo$Id NONE -> NONE
    org.codehaus.jackson.annotate.JsonTypeInfo$Id CLASS -> CLASS
    org.codehaus.jackson.annotate.JsonTypeInfo$Id MINIMAL_CLASS -> MINIMAL_CLASS
    org.codehaus.jackson.annotate.JsonTypeInfo$Id NAME -> NAME
    org.codehaus.jackson.annotate.JsonTypeInfo$Id CUSTOM -> CUSTOM
    java.lang.String _defaultPropertyName -> _defaultPropertyName
    org.codehaus.jackson.annotate.JsonTypeInfo$Id[] $VALUES -> $VALUES
    org.codehaus.jackson.annotate.JsonTypeInfo$Id[] values() -> values
    org.codehaus.jackson.annotate.JsonTypeInfo$Id valueOf(java.lang.String) -> valueOf
    java.lang.String getDefaultPropertyName() -> getDefaultPropertyName
org.codehaus.jackson.annotate.JsonTypeInfo$None -> org.codehaus.jackson.annotate.JsonTypeInfo$None:
org.codehaus.jackson.annotate.JsonTypeName -> org.codehaus.jackson.annotate.JsonTypeName:
    java.lang.String value() -> value
org.codehaus.jackson.annotate.JsonUnwrapped -> org.codehaus.jackson.annotate.JsonUnwrapped:
    boolean enabled() -> enabled
org.codehaus.jackson.annotate.JsonValue -> org.codehaus.jackson.annotate.JsonValue:
    boolean value() -> value
org.codehaus.jackson.annotate.JsonWriteNullProperties -> org.codehaus.jackson.annotate.JsonWriteNullProperties:
    boolean value() -> value
org.codehaus.jackson.impl.Indenter -> org.codehaus.jackson.impl.Indenter:
    void writeIndentation(org.codehaus.jackson.JsonGenerator,int) -> writeIndentation
    boolean isInline() -> isInline
org.codehaus.jackson.impl.JsonGeneratorBase -> org.codehaus.jackson.impl.JsonGeneratorBase:
    org.codehaus.jackson.ObjectCodec _objectCodec -> _objectCodec
    int _features -> _features
    boolean _cfgNumbersAsStrings -> _cfgNumbersAsStrings
    org.codehaus.jackson.impl.JsonWriteContext _writeContext -> _writeContext
    boolean _closed -> _closed
    boolean isEnabled(org.codehaus.jackson.JsonGenerator$Feature) -> isEnabled
    org.codehaus.jackson.JsonGenerator useDefaultPrettyPrinter() -> useDefaultPrettyPrinter
    org.codehaus.jackson.impl.JsonWriteContext getOutputContext() -> getOutputContext
    void writeStartArray() -> writeStartArray
    void _writeStartArray() -> _writeStartArray
    void writeEndArray() -> writeEndArray
    void _writeEndArray() -> _writeEndArray
    void writeStartObject() -> writeStartObject
    void _writeStartObject() -> _writeStartObject
    void writeEndObject() -> writeEndObject
    void _writeEndObject() -> _writeEndObject
    void writeRawValue(java.lang.String) -> writeRawValue
    void writeObject(java.lang.Object) -> writeObject
    void close() -> close
    void _verifyValueWrite(java.lang.String) -> _verifyValueWrite
    void _reportError(java.lang.String) -> _reportError
    void _cantHappen() -> _cantHappen
    void _writeSimpleObject(java.lang.Object) -> _writeSimpleObject
org.codehaus.jackson.impl.JsonParserBase -> org.codehaus.jackson.impl.JsonParserBase:
    org.codehaus.jackson.io.IOContext _ioContext -> _ioContext
    boolean _closed -> _closed
    int _inputPtr -> _inputPtr
    int _inputEnd -> _inputEnd
    long _currInputProcessed -> _currInputProcessed
    int _currInputRow -> _currInputRow
    int _currInputRowStart -> _currInputRowStart
    long _tokenInputTotal -> _tokenInputTotal
    int _tokenInputRow -> _tokenInputRow
    int _tokenInputCol -> _tokenInputCol
    org.codehaus.jackson.impl.JsonReadContext _parsingContext -> _parsingContext
    org.codehaus.jackson.JsonToken _nextToken -> _nextToken
    org.codehaus.jackson.util.TextBuffer _textBuffer -> _textBuffer
    char[] _nameCopyBuffer -> _nameCopyBuffer
    boolean _nameCopied -> _nameCopied
    org.codehaus.jackson.util.ByteArrayBuilder _byteArrayBuilder -> _byteArrayBuilder
    byte[] _binaryValue -> _binaryValue
    java.math.BigInteger BI_MIN_INT -> BI_MIN_INT
    java.math.BigInteger BI_MAX_INT -> BI_MAX_INT
    java.math.BigInteger BI_MIN_LONG -> BI_MIN_LONG
    java.math.BigInteger BI_MAX_LONG -> BI_MAX_LONG
    java.math.BigDecimal BD_MIN_LONG -> BD_MIN_LONG
    java.math.BigDecimal BD_MAX_LONG -> BD_MAX_LONG
    java.math.BigDecimal BD_MIN_INT -> BD_MIN_INT
    java.math.BigDecimal BD_MAX_INT -> BD_MAX_INT
    int _numTypesValid -> _numTypesValid
    int _numberInt -> _numberInt
    long _numberLong -> _numberLong
    double _numberDouble -> _numberDouble
    java.math.BigInteger _numberBigInt -> _numberBigInt
    java.math.BigDecimal _numberBigDecimal -> _numberBigDecimal
    boolean _numberNegative -> _numberNegative
    int _intLength -> _intLength
    int _fractLength -> _fractLength
    int _expLength -> _expLength
    java.lang.String getCurrentName() -> getCurrentName
    void close() -> close
    org.codehaus.jackson.JsonLocation getTokenLocation() -> getTokenLocation
    org.codehaus.jackson.JsonLocation getCurrentLocation() -> getCurrentLocation
    boolean hasTextCharacters() -> hasTextCharacters
    long getTokenCharacterOffset() -> getTokenCharacterOffset
    int getTokenLineNr() -> getTokenLineNr
    int getTokenColumnNr() -> getTokenColumnNr
    void loadMoreGuaranteed() -> loadMoreGuaranteed
    boolean loadMore() -> loadMore
    void _closeInput() -> _closeInput
    void _releaseBuffers() -> _releaseBuffers
    void _handleEOF() -> _handleEOF
    void _reportMismatchedEndMarker(int,char) -> _reportMismatchedEndMarker
    org.codehaus.jackson.util.ByteArrayBuilder _getByteArrayBuilder() -> _getByteArrayBuilder
    org.codehaus.jackson.JsonToken reset(boolean,int,int,int) -> reset
    org.codehaus.jackson.JsonToken resetInt(boolean,int) -> resetInt
    org.codehaus.jackson.JsonToken resetFloat(boolean,int,int,int) -> resetFloat
    org.codehaus.jackson.JsonToken resetAsNaN(java.lang.String,double) -> resetAsNaN
    java.lang.Number getNumberValue() -> getNumberValue
    org.codehaus.jackson.JsonParser$NumberType getNumberType() -> getNumberType
    int getIntValue() -> getIntValue
    long getLongValue() -> getLongValue
    java.math.BigInteger getBigIntegerValue() -> getBigIntegerValue
    float getFloatValue() -> getFloatValue
    double getDoubleValue() -> getDoubleValue
    java.math.BigDecimal getDecimalValue() -> getDecimalValue
    void _parseNumericValue(int) -> _parseNumericValue
    void _parseSlowFloatValue(int) -> _parseSlowFloatValue
    void _parseSlowIntValue(int,char[],int,int) -> _parseSlowIntValue
    void convertNumberToInt() -> convertNumberToInt
    void convertNumberToLong() -> convertNumberToLong
    void convertNumberToBigInteger() -> convertNumberToBigInteger
    void convertNumberToDouble() -> convertNumberToDouble
    void convertNumberToBigDecimal() -> convertNumberToBigDecimal
    void reportUnexpectedNumberChar(int,java.lang.String) -> reportUnexpectedNumberChar
    void reportInvalidNumber(java.lang.String) -> reportInvalidNumber
    void reportOverflowInt() -> reportOverflowInt
    void reportOverflowLong() -> reportOverflowLong
    char _decodeEscaped() -> _decodeEscaped
    int _decodeBase64Escape(org.codehaus.jackson.Base64Variant,char,int) -> _decodeBase64Escape
    java.lang.IllegalArgumentException reportInvalidBase64Char(org.codehaus.jackson.Base64Variant,int,int) -> reportInvalidBase64Char
    java.lang.IllegalArgumentException reportInvalidBase64Char(org.codehaus.jackson.Base64Variant,int,int,java.lang.String) -> reportInvalidBase64Char
org.codehaus.jackson.impl.JsonParserMinimalBase -> org.codehaus.jackson.impl.JsonParserMinimalBase:
    org.codehaus.jackson.JsonToken nextToken() -> nextToken
    org.codehaus.jackson.JsonParser skipChildren() -> skipChildren
    void _handleEOF() -> _handleEOF
    java.lang.String getText() -> getText
    int getValueAsInt(int) -> getValueAsInt
    long getValueAsLong(long) -> getValueAsLong
    void _decodeBase64(java.lang.String,org.codehaus.jackson.util.ByteArrayBuilder,org.codehaus.jackson.Base64Variant) -> _decodeBase64
    void _reportInvalidBase64(org.codehaus.jackson.Base64Variant,char,int,java.lang.String) -> _reportInvalidBase64
    void _reportBase64EOF() -> _reportBase64EOF
    void _reportUnexpectedChar(int,java.lang.String) -> _reportUnexpectedChar
    void _reportInvalidEOF() -> _reportInvalidEOF
    void _reportInvalidEOF(java.lang.String) -> _reportInvalidEOF
    void _reportInvalidEOFInValue() -> _reportInvalidEOFInValue
    void _throwInvalidSpace(int) -> _throwInvalidSpace
    void _throwUnquotedSpace(int,java.lang.String) -> _throwUnquotedSpace
    char _handleUnrecognizedCharacterEscape(char) -> _handleUnrecognizedCharacterEscape
    java.lang.String _getCharDesc(int) -> _getCharDesc
    void _reportError(java.lang.String) -> _reportError
    void _wrapError(java.lang.String,java.lang.Throwable) -> _wrapError
    void _throwInternal() -> _throwInternal
    org.codehaus.jackson.JsonParseException _constructError(java.lang.String,java.lang.Throwable) -> _constructError
org.codehaus.jackson.impl.JsonParserMinimalBase$1 -> org.codehaus.jackson.impl.JsonParserMinimalBase$1:
    int[] $SwitchMap$org$codehaus$jackson$JsonToken -> $SwitchMap$org$codehaus$jackson$JsonToken
org.codehaus.jackson.impl.JsonReadContext -> org.codehaus.jackson.impl.JsonReadContext:
    org.codehaus.jackson.impl.JsonReadContext _parent -> _parent
    int _lineNr -> _lineNr
    int _columnNr -> _columnNr
    java.lang.String _currentName -> _currentName
    org.codehaus.jackson.impl.JsonReadContext _child -> _child
    void reset(int,int,int) -> reset
    org.codehaus.jackson.impl.JsonReadContext createRootContext(int,int) -> createRootContext
    org.codehaus.jackson.impl.JsonReadContext createRootContext() -> createRootContext
    org.codehaus.jackson.impl.JsonReadContext createChildArrayContext(int,int) -> createChildArrayContext
    org.codehaus.jackson.impl.JsonReadContext createChildObjectContext(int,int) -> createChildObjectContext
    java.lang.String getCurrentName() -> getCurrentName
    org.codehaus.jackson.impl.JsonReadContext getParent() -> getParent
    org.codehaus.jackson.JsonLocation getStartLocation(java.lang.Object) -> getStartLocation
    boolean expectComma() -> expectComma
    void setCurrentName(java.lang.String) -> setCurrentName
    java.lang.String toString() -> toString
org.codehaus.jackson.impl.JsonWriteContext -> org.codehaus.jackson.impl.JsonWriteContext:
    org.codehaus.jackson.impl.JsonWriteContext _parent -> _parent
    java.lang.String _currentName -> _currentName
    org.codehaus.jackson.impl.JsonWriteContext _child -> _child
    org.codehaus.jackson.impl.JsonWriteContext createRootContext() -> createRootContext
    org.codehaus.jackson.impl.JsonWriteContext reset(int) -> reset
    org.codehaus.jackson.impl.JsonWriteContext createChildArrayContext() -> createChildArrayContext
    org.codehaus.jackson.impl.JsonWriteContext createChildObjectContext() -> createChildObjectContext
    org.codehaus.jackson.impl.JsonWriteContext getParent() -> getParent
    int writeFieldName(java.lang.String) -> writeFieldName
    int writeValue() -> writeValue
    void appendDesc(java.lang.StringBuilder) -> appendDesc
    java.lang.String toString() -> toString
org.codehaus.jackson.impl.ReaderBasedParser -> org.codehaus.jackson.impl.ReaderBasedParser:
    java.io.Reader _reader -> _reader
    char[] _inputBuffer -> _inputBuffer
    org.codehaus.jackson.ObjectCodec _objectCodec -> _objectCodec
    org.codehaus.jackson.sym.CharsToNameCanonicalizer _symbols -> _symbols
    boolean _tokenIncomplete -> _tokenIncomplete
    org.codehaus.jackson.ObjectCodec getCodec() -> getCodec
    boolean loadMore() -> loadMore
    char getNextChar(java.lang.String) -> getNextChar
    void _closeInput() -> _closeInput
    void _releaseBuffers() -> _releaseBuffers
    java.lang.String getText() -> getText
    java.lang.String _getText2(org.codehaus.jackson.JsonToken) -> _getText2
    char[] getTextCharacters() -> getTextCharacters
    int getTextLength() -> getTextLength
    int getTextOffset() -> getTextOffset
    byte[] getBinaryValue(org.codehaus.jackson.Base64Variant) -> getBinaryValue
    org.codehaus.jackson.JsonToken nextToken() -> nextToken
    org.codehaus.jackson.JsonToken _nextAfterName() -> _nextAfterName
    void close() -> close
    org.codehaus.jackson.JsonToken parseNumberText(int) -> parseNumberText
    org.codehaus.jackson.JsonToken parseNumberText2(boolean) -> parseNumberText2
    char _verifyNoLeadingZeroes() -> _verifyNoLeadingZeroes
    org.codehaus.jackson.JsonToken _handleInvalidNumberStart(int,boolean) -> _handleInvalidNumberStart
    java.lang.String _parseFieldName(int) -> _parseFieldName
    java.lang.String _parseFieldName2(int,int,int) -> _parseFieldName2
    java.lang.String _handleUnusualFieldName(int) -> _handleUnusualFieldName
    java.lang.String _parseApostropheFieldName() -> _parseApostropheFieldName
    org.codehaus.jackson.JsonToken _handleUnexpectedValue(int) -> _handleUnexpectedValue
    org.codehaus.jackson.JsonToken _handleApostropheValue() -> _handleApostropheValue
    java.lang.String _parseUnusualFieldName2(int,int,int[]) -> _parseUnusualFieldName2
    void _finishString() -> _finishString
    void _finishString2() -> _finishString2
    void _skipString() -> _skipString
    void _skipCR() -> _skipCR
    void _skipLF() -> _skipLF
    int _skipWS() -> _skipWS
    int _skipWSOrEnd() -> _skipWSOrEnd
    void _skipComment() -> _skipComment
    void _skipCComment() -> _skipCComment
    void _skipCppComment() -> _skipCppComment
    char _decodeEscaped() -> _decodeEscaped
    void _matchToken(java.lang.String,int) -> _matchToken
    byte[] _decodeBase64(org.codehaus.jackson.Base64Variant) -> _decodeBase64
    void _reportInvalidToken(java.lang.String,java.lang.String) -> _reportInvalidToken
org.codehaus.jackson.impl.ReaderBasedParser$1 -> org.codehaus.jackson.impl.ReaderBasedParser$1:
    int[] $SwitchMap$org$codehaus$jackson$JsonToken -> $SwitchMap$org$codehaus$jackson$JsonToken
org.codehaus.jackson.impl.WriterBasedGenerator -> org.codehaus.jackson.impl.WriterBasedGenerator:
    char[] HEX_CHARS -> HEX_CHARS
    int[] sOutputEscapes -> sOutputEscapes
    org.codehaus.jackson.io.IOContext _ioContext -> _ioContext
    java.io.Writer _writer -> _writer
    int[] _outputEscapes -> _outputEscapes
    int _maximumNonEscapedChar -> _maximumNonEscapedChar
    org.codehaus.jackson.io.CharacterEscapes _characterEscapes -> _characterEscapes
    org.codehaus.jackson.SerializableString _currentEscape -> _currentEscape
    char[] _outputBuffer -> _outputBuffer
    int _outputHead -> _outputHead
    int _outputTail -> _outputTail
    int _outputEnd -> _outputEnd
    char[] _entityBuffer -> _entityBuffer
    org.codehaus.jackson.JsonGenerator setHighestNonEscapedChar(int) -> setHighestNonEscapedChar
    org.codehaus.jackson.JsonGenerator setCharacterEscapes(org.codehaus.jackson.io.CharacterEscapes) -> setCharacterEscapes
    void writeFieldName(java.lang.String) -> writeFieldName
    void writeStringField(java.lang.String,java.lang.String) -> writeStringField
    void writeFieldName(org.codehaus.jackson.io.SerializedString) -> writeFieldName
    void writeFieldName(org.codehaus.jackson.SerializableString) -> writeFieldName
    void writeStartArray() -> writeStartArray
    void writeEndArray() -> writeEndArray
    void writeStartObject() -> writeStartObject
    void writeEndObject() -> writeEndObject
    void _writeFieldName(java.lang.String,boolean) -> _writeFieldName
    void _writeFieldName(org.codehaus.jackson.SerializableString,boolean) -> _writeFieldName
    void _writePPFieldName(java.lang.String,boolean) -> _writePPFieldName
    void _writePPFieldName(org.codehaus.jackson.SerializableString,boolean) -> _writePPFieldName
    void writeString(java.lang.String) -> writeString
    void writeString(char[],int,int) -> writeString
    void writeString(org.codehaus.jackson.SerializableString) -> writeString
    void writeRaw(java.lang.String) -> writeRaw
    void writeRaw(char[],int,int) -> writeRaw
    void writeRaw(char) -> writeRaw
    void writeRawLong(java.lang.String) -> writeRawLong
    void writeBinary(org.codehaus.jackson.Base64Variant,byte[],int,int) -> writeBinary
    void writeNumber(int) -> writeNumber
    void _writeQuotedInt(int) -> _writeQuotedInt
    void writeNumber(long) -> writeNumber
    void _writeQuotedLong(long) -> _writeQuotedLong
    void writeNumber(java.math.BigInteger) -> writeNumber
    void writeNumber(double) -> writeNumber
    void writeNumber(float) -> writeNumber
    void writeNumber(java.math.BigDecimal) -> writeNumber
    void writeNumber(java.lang.String) -> writeNumber
    void _writeQuotedRaw(java.lang.Object) -> _writeQuotedRaw
    void writeBoolean(boolean) -> writeBoolean
    void writeNull() -> writeNull
    void _verifyValueWrite(java.lang.String) -> _verifyValueWrite
    void _verifyPrettyValueWrite(java.lang.String,int) -> _verifyPrettyValueWrite
    void flush() -> flush
    void close() -> close
    void _releaseBuffers() -> _releaseBuffers
    void _writeString(java.lang.String) -> _writeString
    void _writeString2(int) -> _writeString2
    void _writeLongString(java.lang.String) -> _writeLongString
    void _writeSegment(int) -> _writeSegment
    void _writeString(char[],int,int) -> _writeString
    void _writeStringASCII(int,int) -> _writeStringASCII
    void _writeSegmentASCII(int,int) -> _writeSegmentASCII
    void _writeStringASCII(char[],int,int,int) -> _writeStringASCII
    void _writeStringCustom(int) -> _writeStringCustom
    void _writeSegmentCustom(int) -> _writeSegmentCustom
    void _writeStringCustom(char[],int,int) -> _writeStringCustom
    void _writeBinary(org.codehaus.jackson.Base64Variant,byte[],int,int) -> _writeBinary
    void _writeNull() -> _writeNull
    void _prependOrWriteCharacterEscape(char,int) -> _prependOrWriteCharacterEscape
    int _prependOrWriteCharacterEscape(char[],int,int,char,int) -> _prependOrWriteCharacterEscape
    void _appendCharacterEscape(char,int) -> _appendCharacterEscape
    char[] _allocateEntityBuffer() -> _allocateEntityBuffer
    void _flushBuffer() -> _flushBuffer
org.codehaus.jackson.io.CharacterEscapes -> org.codehaus.jackson.io.CharacterEscapes:
    int[] getEscapeCodesForAscii() -> getEscapeCodesForAscii
    org.codehaus.jackson.SerializableString getEscapeSequence(int) -> getEscapeSequence
org.codehaus.jackson.io.IOContext -> org.codehaus.jackson.io.IOContext:
    java.lang.Object _sourceRef -> _sourceRef
    boolean _managedResource -> _managedResource
    org.codehaus.jackson.util.BufferRecycler _bufferRecycler -> _bufferRecycler
    byte[] _readIOBuffer -> _readIOBuffer
    byte[] _writeEncodingBuffer -> _writeEncodingBuffer
    char[] _tokenCBuffer -> _tokenCBuffer
    char[] _concatCBuffer -> _concatCBuffer
    char[] _nameCopyBuffer -> _nameCopyBuffer
    java.lang.Object getSourceReference() -> getSourceReference
    boolean isResourceManaged() -> isResourceManaged
    org.codehaus.jackson.util.TextBuffer constructTextBuffer() -> constructTextBuffer
    char[] allocTokenBuffer() -> allocTokenBuffer
    char[] allocConcatBuffer() -> allocConcatBuffer
    char[] allocNameCopyBuffer(int) -> allocNameCopyBuffer
    void releaseTokenBuffer(char[]) -> releaseTokenBuffer
    void releaseConcatBuffer(char[]) -> releaseConcatBuffer
    void releaseNameCopyBuffer(char[]) -> releaseNameCopyBuffer
org.codehaus.jackson.io.InputDecorator -> org.codehaus.jackson.io.InputDecorator:
    java.io.Reader decorate(org.codehaus.jackson.io.IOContext,java.io.Reader) -> decorate
org.codehaus.jackson.io.JsonStringEncoder -> org.codehaus.jackson.io.JsonStringEncoder:
    char[] HEX_CHARS -> HEX_CHARS
    byte[] HEX_BYTES -> HEX_BYTES
    java.lang.ThreadLocal _threadEncoder -> _threadEncoder
    org.codehaus.jackson.util.TextBuffer _textBuffer -> _textBuffer
    char[] _quoteBuffer -> _quoteBuffer
    org.codehaus.jackson.io.JsonStringEncoder getInstance() -> getInstance
    char[] quoteAsString(java.lang.String) -> quoteAsString
    int _appendNumericEscape(int,char[]) -> _appendNumericEscape
    int _appendNamedEscape(int,char[]) -> _appendNamedEscape
org.codehaus.jackson.io.NumberInput -> org.codehaus.jackson.io.NumberInput:
    java.lang.String MIN_LONG_STR_NO_SIGN -> MIN_LONG_STR_NO_SIGN
    java.lang.String MAX_LONG_STR -> MAX_LONG_STR
    int parseInt(char[],int,int) -> parseInt
    int parseInt(java.lang.String) -> parseInt
    long parseLong(char[],int,int) -> parseLong
    long parseLong(java.lang.String) -> parseLong
    boolean inLongRange(char[],int,int,boolean) -> inLongRange
    boolean inLongRange(java.lang.String,boolean) -> inLongRange
    int parseAsInt(java.lang.String,int) -> parseAsInt
    long parseAsLong(java.lang.String,long) -> parseAsLong
    double parseDouble(java.lang.String) -> parseDouble
org.codehaus.jackson.io.NumberOutput -> org.codehaus.jackson.io.NumberOutput:
    int MILLION -> MILLION
    int BILLION -> BILLION
    long TEN_BILLION_L -> TEN_BILLION_L
    long THOUSAND_L -> THOUSAND_L
    long MIN_INT_AS_LONG -> MIN_INT_AS_LONG
    long MAX_INT_AS_LONG -> MAX_INT_AS_LONG
    java.lang.String SMALLEST_LONG -> SMALLEST_LONG
    char[] LEADING_TRIPLETS -> LEADING_TRIPLETS
    char[] FULL_TRIPLETS -> FULL_TRIPLETS
    byte[] FULL_TRIPLETS_B -> FULL_TRIPLETS_B
    java.lang.String[] sSmallIntStrs -> sSmallIntStrs
    java.lang.String[] sSmallIntStrs2 -> sSmallIntStrs2
    int outputInt(int,char[],int) -> outputInt
    int outputLong(long,char[],int) -> outputLong
    java.lang.String toString(int) -> toString
    java.lang.String toString(long) -> toString
    java.lang.String toString(double) -> toString
    int outputLeadingTriplet(int,char[],int) -> outputLeadingTriplet
    int outputFullTriplet(int,char[],int) -> outputFullTriplet
    int calcLongStrLength(long) -> calcLongStrLength
org.codehaus.jackson.io.OutputDecorator -> org.codehaus.jackson.io.OutputDecorator:
    java.io.Writer decorate(org.codehaus.jackson.io.IOContext,java.io.Writer) -> decorate
org.codehaus.jackson.io.SegmentedStringWriter -> org.codehaus.jackson.io.SegmentedStringWriter:
    org.codehaus.jackson.util.TextBuffer _buffer -> _buffer
    java.io.Writer append(char) -> append
    java.io.Writer append(java.lang.CharSequence) -> append
    java.io.Writer append(java.lang.CharSequence,int,int) -> append
    void close() -> close
    void flush() -> flush
    void write(char[]) -> write
    void write(char[],int,int) -> write
    void write(int) -> write
    void write(java.lang.String) -> write
    void write(java.lang.String,int,int) -> write
    java.lang.String getAndClear() -> getAndClear
    java.lang.Appendable append(char) -> append
    java.lang.Appendable append(java.lang.CharSequence,int,int) -> append
    java.lang.Appendable append(java.lang.CharSequence) -> append
org.codehaus.jackson.io.SerializedString -> org.codehaus.jackson.io.SerializedString:
    java.lang.String _value -> _value
    char[] _quotedChars -> _quotedChars
    java.lang.String getValue() -> getValue
    char[] asQuotedChars() -> asQuotedChars
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
org.codehaus.jackson.map.AbstractTypeResolver -> org.codehaus.jackson.map.AbstractTypeResolver:
    org.codehaus.jackson.type.JavaType findTypeMapping(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType) -> findTypeMapping
    org.codehaus.jackson.type.JavaType resolveAbstractType(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType) -> resolveAbstractType
org.codehaus.jackson.map.AnnotationIntrospector -> org.codehaus.jackson.map.AnnotationIntrospector:
    org.codehaus.jackson.map.AnnotationIntrospector nopInstance() -> nopInstance
    boolean isHandled(java.lang.annotation.Annotation) -> isHandled
    java.lang.Boolean findCachability(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findCachability
    java.lang.String findRootName(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findRootName
    java.lang.String[] findPropertiesToIgnore(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findPropertiesToIgnore
    java.lang.Boolean findIgnoreUnknownProperties(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findIgnoreUnknownProperties
    java.lang.Boolean isIgnorableType(org.codehaus.jackson.map.introspect.AnnotatedClass) -> isIgnorableType
    java.lang.Object findFilterId(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findFilterId
    org.codehaus.jackson.map.introspect.VisibilityChecker findAutoDetectVisibility(org.codehaus.jackson.map.introspect.AnnotatedClass,org.codehaus.jackson.map.introspect.VisibilityChecker) -> findAutoDetectVisibility
    org.codehaus.jackson.map.jsontype.TypeResolverBuilder findTypeResolver(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.introspect.AnnotatedClass,org.codehaus.jackson.type.JavaType) -> findTypeResolver
    org.codehaus.jackson.map.jsontype.TypeResolverBuilder findPropertyTypeResolver(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.introspect.AnnotatedMember,org.codehaus.jackson.type.JavaType) -> findPropertyTypeResolver
    org.codehaus.jackson.map.jsontype.TypeResolverBuilder findPropertyContentTypeResolver(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.introspect.AnnotatedMember,org.codehaus.jackson.type.JavaType) -> findPropertyContentTypeResolver
    java.util.List findSubtypes(org.codehaus.jackson.map.introspect.Annotated) -> findSubtypes
    java.lang.String findTypeName(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findTypeName
    org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty findReferenceType(org.codehaus.jackson.map.introspect.AnnotatedMember) -> findReferenceType
    java.lang.Boolean shouldUnwrapProperty(org.codehaus.jackson.map.introspect.AnnotatedMember) -> shouldUnwrapProperty
    boolean hasIgnoreMarker(org.codehaus.jackson.map.introspect.AnnotatedMember) -> hasIgnoreMarker
    java.lang.Object findInjectableValueId(org.codehaus.jackson.map.introspect.AnnotatedMember) -> findInjectableValueId
    boolean isIgnorableMethod(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> isIgnorableMethod
    boolean isIgnorableConstructor(org.codehaus.jackson.map.introspect.AnnotatedConstructor) -> isIgnorableConstructor
    boolean isIgnorableField(org.codehaus.jackson.map.introspect.AnnotatedField) -> isIgnorableField
    java.lang.Object findSerializer(org.codehaus.jackson.map.introspect.Annotated) -> findSerializer
    java.lang.Class findKeySerializer(org.codehaus.jackson.map.introspect.Annotated) -> findKeySerializer
    java.lang.Class findContentSerializer(org.codehaus.jackson.map.introspect.Annotated) -> findContentSerializer
    org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion findSerializationInclusion(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion) -> findSerializationInclusion
    java.lang.Class findSerializationType(org.codehaus.jackson.map.introspect.Annotated) -> findSerializationType
    java.lang.Class findSerializationKeyType(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType) -> findSerializationKeyType
    java.lang.Class findSerializationContentType(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType) -> findSerializationContentType
    org.codehaus.jackson.map.annotate.JsonSerialize$Typing findSerializationTyping(org.codehaus.jackson.map.introspect.Annotated) -> findSerializationTyping
    java.lang.Class[] findSerializationViews(org.codehaus.jackson.map.introspect.Annotated) -> findSerializationViews
    java.lang.String[] findSerializationPropertyOrder(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findSerializationPropertyOrder
    java.lang.Boolean findSerializationSortAlphabetically(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findSerializationSortAlphabetically
    java.lang.String findGettablePropertyName(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> findGettablePropertyName
    boolean hasAsValueAnnotation(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> hasAsValueAnnotation
    java.lang.String findEnumValue(java.lang.Enum) -> findEnumValue
    java.lang.String findSerializablePropertyName(org.codehaus.jackson.map.introspect.AnnotatedField) -> findSerializablePropertyName
    java.lang.Object findDeserializer(org.codehaus.jackson.map.introspect.Annotated) -> findDeserializer
    java.lang.Class findKeyDeserializer(org.codehaus.jackson.map.introspect.Annotated) -> findKeyDeserializer
    java.lang.Class findContentDeserializer(org.codehaus.jackson.map.introspect.Annotated) -> findContentDeserializer
    java.lang.Class findDeserializationType(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType,java.lang.String) -> findDeserializationType
    java.lang.Class findDeserializationKeyType(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType,java.lang.String) -> findDeserializationKeyType
    java.lang.Class findDeserializationContentType(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType,java.lang.String) -> findDeserializationContentType
    java.lang.Object findValueInstantiator(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findValueInstantiator
    java.lang.String findSettablePropertyName(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> findSettablePropertyName
    boolean hasAnySetterAnnotation(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> hasAnySetterAnnotation
    boolean hasAnyGetterAnnotation(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> hasAnyGetterAnnotation
    boolean hasCreatorAnnotation(org.codehaus.jackson.map.introspect.Annotated) -> hasCreatorAnnotation
    java.lang.String findDeserializablePropertyName(org.codehaus.jackson.map.introspect.AnnotatedField) -> findDeserializablePropertyName
    java.lang.String findPropertyNameForParam(org.codehaus.jackson.map.introspect.AnnotatedParameter) -> findPropertyNameForParam
org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty -> org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty:
    org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty$Type _type -> _type
    java.lang.String _name -> _name
    org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty managed(java.lang.String) -> managed
    org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty back(java.lang.String) -> back
    java.lang.String getName() -> getName
    boolean isManagedReference() -> isManagedReference
    boolean isBackReference() -> isBackReference
org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty$Type -> org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty$Type:
    org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty$Type MANAGED_REFERENCE -> MANAGED_REFERENCE
    org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty$Type BACK_REFERENCE -> BACK_REFERENCE
    org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty$Type[] $VALUES -> $VALUES
    org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty$Type[] values() -> values
    org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty$Type valueOf(java.lang.String) -> valueOf
org.codehaus.jackson.map.BeanDescription -> org.codehaus.jackson.map.BeanDescription:
    org.codehaus.jackson.type.JavaType _type -> _type
    org.codehaus.jackson.type.JavaType getType() -> getType
    java.lang.Class getBeanClass() -> getBeanClass
    org.codehaus.jackson.map.introspect.AnnotatedClass getClassInfo() -> getClassInfo
org.codehaus.jackson.map.BeanProperty -> org.codehaus.jackson.map.BeanProperty:
    org.codehaus.jackson.type.JavaType getType() -> getType
    org.codehaus.jackson.map.introspect.AnnotatedMember getMember() -> getMember
org.codehaus.jackson.map.BeanProperty$Std -> org.codehaus.jackson.map.BeanProperty$Std:
    java.lang.String _name -> _name
    org.codehaus.jackson.type.JavaType _type -> _type
    org.codehaus.jackson.map.introspect.AnnotatedMember _member -> _member
    org.codehaus.jackson.map.util.Annotations _contextAnnotations -> _contextAnnotations
    org.codehaus.jackson.map.BeanProperty$Std withType(org.codehaus.jackson.type.JavaType) -> withType
    java.lang.String getName() -> getName
    org.codehaus.jackson.type.JavaType getType() -> getType
    org.codehaus.jackson.map.introspect.AnnotatedMember getMember() -> getMember
org.codehaus.jackson.map.BeanPropertyDefinition -> org.codehaus.jackson.map.BeanPropertyDefinition:
    java.lang.String getName() -> getName
    boolean isExplicitlyIncluded() -> isExplicitlyIncluded
    boolean hasGetter() -> hasGetter
    boolean hasSetter() -> hasSetter
    boolean hasField() -> hasField
    boolean hasConstructorParameter() -> hasConstructorParameter
    boolean couldDeserialize() -> couldDeserialize
    org.codehaus.jackson.map.introspect.AnnotatedMethod getGetter() -> getGetter
    org.codehaus.jackson.map.introspect.AnnotatedMethod getSetter() -> getSetter
    org.codehaus.jackson.map.introspect.AnnotatedField getField() -> getField
    org.codehaus.jackson.map.introspect.AnnotatedMember getAccessor() -> getAccessor
    org.codehaus.jackson.map.introspect.AnnotatedMember getMutator() -> getMutator
org.codehaus.jackson.map.ClassIntrospector -> org.codehaus.jackson.map.ClassIntrospector:
    org.codehaus.jackson.map.BeanDescription forSerialization(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.ClassIntrospector$MixInResolver) -> forSerialization
    org.codehaus.jackson.map.BeanDescription forDeserialization(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.ClassIntrospector$MixInResolver) -> forDeserialization
    org.codehaus.jackson.map.BeanDescription forCreation(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.ClassIntrospector$MixInResolver) -> forCreation
    org.codehaus.jackson.map.BeanDescription forClassAnnotations(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.ClassIntrospector$MixInResolver) -> forClassAnnotations
org.codehaus.jackson.map.ClassIntrospector$MixInResolver -> org.codehaus.jackson.map.ClassIntrospector$MixInResolver:
    java.lang.Class findMixInClassFor(java.lang.Class) -> findMixInClassFor
org.codehaus.jackson.map.ContextualDeserializer -> org.codehaus.jackson.map.ContextualDeserializer:
    org.codehaus.jackson.map.JsonDeserializer createContextual(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.BeanProperty) -> createContextual
org.codehaus.jackson.map.ContextualKeyDeserializer -> org.codehaus.jackson.map.ContextualKeyDeserializer:
    org.codehaus.jackson.map.KeyDeserializer createContextual(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.BeanProperty) -> createContextual
org.codehaus.jackson.map.ContextualSerializer -> org.codehaus.jackson.map.ContextualSerializer:
    org.codehaus.jackson.map.JsonSerializer createContextual(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.BeanProperty) -> createContextual
org.codehaus.jackson.map.DeserializationConfig -> org.codehaus.jackson.map.DeserializationConfig:
    org.codehaus.jackson.map.util.LinkedNode _problemHandlers -> _problemHandlers
    org.codehaus.jackson.node.JsonNodeFactory _nodeFactory -> _nodeFactory
    boolean _sortPropertiesAlphabetically -> _sortPropertiesAlphabetically
    org.codehaus.jackson.map.DeserializationConfig passSerializationFeatures(int) -> passSerializationFeatures
    org.codehaus.jackson.map.DeserializationConfig createUnshared(org.codehaus.jackson.map.jsontype.SubtypeResolver) -> createUnshared
    org.codehaus.jackson.map.AnnotationIntrospector getAnnotationIntrospector() -> getAnnotationIntrospector
    org.codehaus.jackson.map.BeanDescription introspectClassAnnotations(org.codehaus.jackson.type.JavaType) -> introspectClassAnnotations
    boolean isAnnotationProcessingEnabled() -> isAnnotationProcessingEnabled
    boolean canOverrideAccessModifiers() -> canOverrideAccessModifiers
    boolean shouldSortPropertiesAlphabetically() -> shouldSortPropertiesAlphabetically
    org.codehaus.jackson.map.introspect.VisibilityChecker getDefaultVisibilityChecker() -> getDefaultVisibilityChecker
    boolean isEnabled(org.codehaus.jackson.map.DeserializationConfig$Feature) -> isEnabled
    org.codehaus.jackson.map.util.LinkedNode getProblemHandlers() -> getProblemHandlers
    org.codehaus.jackson.Base64Variant getBase64Variant() -> getBase64Variant
    org.codehaus.jackson.node.JsonNodeFactory getNodeFactory() -> getNodeFactory
    org.codehaus.jackson.map.BeanDescription introspect(org.codehaus.jackson.type.JavaType) -> introspect
    org.codehaus.jackson.map.BeanDescription introspectForCreation(org.codehaus.jackson.type.JavaType) -> introspectForCreation
    org.codehaus.jackson.map.JsonDeserializer deserializerInstance(org.codehaus.jackson.map.introspect.Annotated,java.lang.Class) -> deserializerInstance
    org.codehaus.jackson.map.KeyDeserializer keyDeserializerInstance(org.codehaus.jackson.map.introspect.Annotated,java.lang.Class) -> keyDeserializerInstance
    org.codehaus.jackson.map.deser.ValueInstantiator valueInstantiatorInstance(org.codehaus.jackson.map.introspect.Annotated,java.lang.Class) -> valueInstantiatorInstance
org.codehaus.jackson.map.DeserializationConfig$Feature -> org.codehaus.jackson.map.DeserializationConfig$Feature:
    org.codehaus.jackson.map.DeserializationConfig$Feature USE_ANNOTATIONS -> USE_ANNOTATIONS
    org.codehaus.jackson.map.DeserializationConfig$Feature AUTO_DETECT_SETTERS -> AUTO_DETECT_SETTERS
    org.codehaus.jackson.map.DeserializationConfig$Feature AUTO_DETECT_CREATORS -> AUTO_DETECT_CREATORS
    org.codehaus.jackson.map.DeserializationConfig$Feature AUTO_DETECT_FIELDS -> AUTO_DETECT_FIELDS
    org.codehaus.jackson.map.DeserializationConfig$Feature USE_GETTERS_AS_SETTERS -> USE_GETTERS_AS_SETTERS
    org.codehaus.jackson.map.DeserializationConfig$Feature CAN_OVERRIDE_ACCESS_MODIFIERS -> CAN_OVERRIDE_ACCESS_MODIFIERS
    org.codehaus.jackson.map.DeserializationConfig$Feature USE_BIG_DECIMAL_FOR_FLOATS -> USE_BIG_DECIMAL_FOR_FLOATS
    org.codehaus.jackson.map.DeserializationConfig$Feature USE_BIG_INTEGER_FOR_INTS -> USE_BIG_INTEGER_FOR_INTS
    org.codehaus.jackson.map.DeserializationConfig$Feature USE_JAVA_ARRAY_FOR_JSON_ARRAY -> USE_JAVA_ARRAY_FOR_JSON_ARRAY
    org.codehaus.jackson.map.DeserializationConfig$Feature READ_ENUMS_USING_TO_STRING -> READ_ENUMS_USING_TO_STRING
    org.codehaus.jackson.map.DeserializationConfig$Feature FAIL_ON_UNKNOWN_PROPERTIES -> FAIL_ON_UNKNOWN_PROPERTIES
    org.codehaus.jackson.map.DeserializationConfig$Feature FAIL_ON_NULL_FOR_PRIMITIVES -> FAIL_ON_NULL_FOR_PRIMITIVES
    org.codehaus.jackson.map.DeserializationConfig$Feature FAIL_ON_NUMBERS_FOR_ENUMS -> FAIL_ON_NUMBERS_FOR_ENUMS
    org.codehaus.jackson.map.DeserializationConfig$Feature WRAP_EXCEPTIONS -> WRAP_EXCEPTIONS
    org.codehaus.jackson.map.DeserializationConfig$Feature ACCEPT_SINGLE_VALUE_AS_ARRAY -> ACCEPT_SINGLE_VALUE_AS_ARRAY
    org.codehaus.jackson.map.DeserializationConfig$Feature UNWRAP_ROOT_VALUE -> UNWRAP_ROOT_VALUE
    org.codehaus.jackson.map.DeserializationConfig$Feature ACCEPT_EMPTY_STRING_AS_NULL_OBJECT -> ACCEPT_EMPTY_STRING_AS_NULL_OBJECT
    boolean _defaultState -> _defaultState
    org.codehaus.jackson.map.DeserializationConfig$Feature[] $VALUES -> $VALUES
    org.codehaus.jackson.map.DeserializationConfig$Feature[] values() -> values
    org.codehaus.jackson.map.DeserializationConfig$Feature valueOf(java.lang.String) -> valueOf
    boolean enabledByDefault() -> enabledByDefault
    int getMask() -> getMask
org.codehaus.jackson.map.DeserializationContext -> org.codehaus.jackson.map.DeserializationContext:
    org.codehaus.jackson.map.DeserializationConfig _config -> _config
    int _featureFlags -> _featureFlags
    org.codehaus.jackson.map.DeserializationConfig getConfig() -> getConfig
    org.codehaus.jackson.map.DeserializerProvider getDeserializerProvider() -> getDeserializerProvider
    boolean isEnabled(org.codehaus.jackson.map.DeserializationConfig$Feature) -> isEnabled
    org.codehaus.jackson.Base64Variant getBase64Variant() -> getBase64Variant
    org.codehaus.jackson.JsonParser getParser() -> getParser
    org.codehaus.jackson.node.JsonNodeFactory getNodeFactory() -> getNodeFactory
    org.codehaus.jackson.type.JavaType constructType(java.lang.Class) -> constructType
    org.codehaus.jackson.map.type.TypeFactory getTypeFactory() -> getTypeFactory
    java.lang.Object findInjectableValue(java.lang.Object,org.codehaus.jackson.map.BeanProperty,java.lang.Object) -> findInjectableValue
    org.codehaus.jackson.map.util.ObjectBuffer leaseObjectBuffer() -> leaseObjectBuffer
    void returnObjectBuffer(org.codehaus.jackson.map.util.ObjectBuffer) -> returnObjectBuffer
    org.codehaus.jackson.map.util.ArrayBuilders getArrayBuilders() -> getArrayBuilders
    java.util.Date parseDate(java.lang.String) -> parseDate
    java.util.Calendar constructCalendar(java.util.Date) -> constructCalendar
    boolean handleUnknownProperty(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.JsonDeserializer,java.lang.Object,java.lang.String) -> handleUnknownProperty
    org.codehaus.jackson.map.JsonMappingException mappingException(java.lang.Class) -> mappingException
    org.codehaus.jackson.map.JsonMappingException mappingException(java.lang.Class,org.codehaus.jackson.JsonToken) -> mappingException
    org.codehaus.jackson.map.JsonMappingException mappingException(java.lang.String) -> mappingException
    org.codehaus.jackson.map.JsonMappingException instantiationException(java.lang.Class,java.lang.Throwable) -> instantiationException
    org.codehaus.jackson.map.JsonMappingException instantiationException(java.lang.Class,java.lang.String) -> instantiationException
    org.codehaus.jackson.map.JsonMappingException weirdStringException(java.lang.Class,java.lang.String) -> weirdStringException
    org.codehaus.jackson.map.JsonMappingException weirdNumberException(java.lang.Class,java.lang.String) -> weirdNumberException
    org.codehaus.jackson.map.JsonMappingException weirdKeyException(java.lang.Class,java.lang.String,java.lang.String) -> weirdKeyException
    org.codehaus.jackson.map.JsonMappingException wrongTokenException(org.codehaus.jackson.JsonParser,org.codehaus.jackson.JsonToken,java.lang.String) -> wrongTokenException
    org.codehaus.jackson.map.JsonMappingException unknownFieldException(java.lang.Object,java.lang.String) -> unknownFieldException
    org.codehaus.jackson.map.JsonMappingException unknownTypeException(org.codehaus.jackson.type.JavaType,java.lang.String) -> unknownTypeException
org.codehaus.jackson.map.DeserializationProblemHandler -> org.codehaus.jackson.map.DeserializationProblemHandler:
    boolean handleUnknownProperty(org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.JsonDeserializer,java.lang.Object,java.lang.String) -> handleUnknownProperty
org.codehaus.jackson.map.DeserializerFactory -> org.codehaus.jackson.map.DeserializerFactory:
    org.codehaus.jackson.map.Deserializers[] NO_DESERIALIZERS -> NO_DESERIALIZERS
    org.codehaus.jackson.map.JsonDeserializer createBeanDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> createBeanDeserializer
    org.codehaus.jackson.map.JsonDeserializer createArrayDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.type.ArrayType,org.codehaus.jackson.map.BeanProperty) -> createArrayDeserializer
    org.codehaus.jackson.map.JsonDeserializer createCollectionDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.type.CollectionType,org.codehaus.jackson.map.BeanProperty) -> createCollectionDeserializer
    org.codehaus.jackson.map.JsonDeserializer createCollectionLikeDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.type.CollectionLikeType,org.codehaus.jackson.map.BeanProperty) -> createCollectionLikeDeserializer
    org.codehaus.jackson.map.JsonDeserializer createEnumDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> createEnumDeserializer
    org.codehaus.jackson.map.JsonDeserializer createMapDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.type.MapType,org.codehaus.jackson.map.BeanProperty) -> createMapDeserializer
    org.codehaus.jackson.map.JsonDeserializer createMapLikeDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.type.MapLikeType,org.codehaus.jackson.map.BeanProperty) -> createMapLikeDeserializer
    org.codehaus.jackson.map.JsonDeserializer createTreeDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> createTreeDeserializer
    org.codehaus.jackson.map.KeyDeserializer createKeyDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> createKeyDeserializer
    org.codehaus.jackson.map.TypeDeserializer findTypeDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> findTypeDeserializer
org.codehaus.jackson.map.DeserializerFactory$Config -> org.codehaus.jackson.map.DeserializerFactory$Config:
    java.lang.Iterable deserializers() -> deserializers
    java.lang.Iterable keyDeserializers() -> keyDeserializers
    java.lang.Iterable deserializerModifiers() -> deserializerModifiers
    java.lang.Iterable abstractTypeResolvers() -> abstractTypeResolvers
    java.lang.Iterable valueInstantiators() -> valueInstantiators
    boolean hasKeyDeserializers() -> hasKeyDeserializers
    boolean hasDeserializerModifiers() -> hasDeserializerModifiers
    boolean hasAbstractTypeResolvers() -> hasAbstractTypeResolvers
    boolean hasValueInstantiators() -> hasValueInstantiators
org.codehaus.jackson.map.DeserializerProvider -> org.codehaus.jackson.map.DeserializerProvider:
    org.codehaus.jackson.map.JsonDeserializer findValueDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> findValueDeserializer
    org.codehaus.jackson.map.JsonDeserializer findTypedValueDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> findTypedValueDeserializer
    org.codehaus.jackson.map.KeyDeserializer findKeyDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> findKeyDeserializer
    org.codehaus.jackson.io.SerializedString findExpectedRootName(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType) -> findExpectedRootName
org.codehaus.jackson.map.Deserializers -> org.codehaus.jackson.map.Deserializers:
    org.codehaus.jackson.map.JsonDeserializer findArrayDeserializer(org.codehaus.jackson.map.type.ArrayType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.JsonDeserializer) -> findArrayDeserializer
    org.codehaus.jackson.map.JsonDeserializer findCollectionDeserializer(org.codehaus.jackson.map.type.CollectionType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.JsonDeserializer) -> findCollectionDeserializer
    org.codehaus.jackson.map.JsonDeserializer findCollectionLikeDeserializer(org.codehaus.jackson.map.type.CollectionLikeType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.JsonDeserializer) -> findCollectionLikeDeserializer
    org.codehaus.jackson.map.JsonDeserializer findEnumDeserializer(java.lang.Class,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty) -> findEnumDeserializer
    org.codehaus.jackson.map.JsonDeserializer findMapDeserializer(org.codehaus.jackson.map.type.MapType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.KeyDeserializer,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.JsonDeserializer) -> findMapDeserializer
    org.codehaus.jackson.map.JsonDeserializer findMapLikeDeserializer(org.codehaus.jackson.map.type.MapLikeType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.KeyDeserializer,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.JsonDeserializer) -> findMapLikeDeserializer
    org.codehaus.jackson.map.JsonDeserializer findTreeNodeDeserializer(java.lang.Class,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.BeanProperty) -> findTreeNodeDeserializer
    org.codehaus.jackson.map.JsonDeserializer findBeanDeserializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty) -> findBeanDeserializer
org.codehaus.jackson.map.HandlerInstantiator -> org.codehaus.jackson.map.HandlerInstantiator:
    org.codehaus.jackson.map.JsonDeserializer deserializerInstance(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.Annotated,java.lang.Class) -> deserializerInstance
    org.codehaus.jackson.map.KeyDeserializer keyDeserializerInstance(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.Annotated,java.lang.Class) -> keyDeserializerInstance
    org.codehaus.jackson.map.JsonSerializer serializerInstance(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.Annotated,java.lang.Class) -> serializerInstance
    org.codehaus.jackson.map.jsontype.TypeResolverBuilder typeResolverBuilderInstance(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.introspect.Annotated,java.lang.Class) -> typeResolverBuilderInstance
    org.codehaus.jackson.map.jsontype.TypeIdResolver typeIdResolverInstance(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.introspect.Annotated,java.lang.Class) -> typeIdResolverInstance
    org.codehaus.jackson.map.deser.ValueInstantiator valueInstantiatorInstance(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.introspect.Annotated,java.lang.Class) -> valueInstantiatorInstance
org.codehaus.jackson.map.InjectableValues -> org.codehaus.jackson.map.InjectableValues:
    java.lang.Object findInjectableValue(java.lang.Object,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.BeanProperty,java.lang.Object) -> findInjectableValue
org.codehaus.jackson.map.JsonDeserializer -> org.codehaus.jackson.map.JsonDeserializer:
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object) -> deserialize
    java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer) -> deserializeWithType
    org.codehaus.jackson.map.JsonDeserializer unwrappingDeserializer() -> unwrappingDeserializer
    java.lang.Object getNullValue() -> getNullValue
    java.lang.Object getEmptyValue() -> getEmptyValue
org.codehaus.jackson.map.JsonDeserializer$None -> org.codehaus.jackson.map.JsonDeserializer$None:
org.codehaus.jackson.map.JsonMappingException -> org.codehaus.jackson.map.JsonMappingException:
    java.util.LinkedList _path -> _path
    org.codehaus.jackson.map.JsonMappingException from(org.codehaus.jackson.JsonParser,java.lang.String) -> from
    org.codehaus.jackson.map.JsonMappingException from(org.codehaus.jackson.JsonParser,java.lang.String,java.lang.Throwable) -> from
    org.codehaus.jackson.map.JsonMappingException wrapWithPath(java.lang.Throwable,java.lang.Object,java.lang.String) -> wrapWithPath
    org.codehaus.jackson.map.JsonMappingException wrapWithPath(java.lang.Throwable,java.lang.Object,int) -> wrapWithPath
    org.codehaus.jackson.map.JsonMappingException wrapWithPath(java.lang.Throwable,org.codehaus.jackson.map.JsonMappingException$Reference) -> wrapWithPath
    void prependPath(java.lang.Object,java.lang.String) -> prependPath
    void prependPath(org.codehaus.jackson.map.JsonMappingException$Reference) -> prependPath
    java.lang.String getMessage() -> getMessage
    java.lang.String toString() -> toString
    void _appendPathDesc(java.lang.StringBuilder) -> _appendPathDesc
org.codehaus.jackson.map.JsonMappingException$Reference -> org.codehaus.jackson.map.JsonMappingException$Reference:
    java.lang.Object _from -> _from
    java.lang.String _fieldName -> _fieldName
    int _index -> _index
    java.lang.String toString() -> toString
org.codehaus.jackson.map.JsonSerializable -> org.codehaus.jackson.map.JsonSerializable:
    void serialize(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.JsonSerializableWithType -> org.codehaus.jackson.map.JsonSerializableWithType:
    void serializeWithType(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
org.codehaus.jackson.map.JsonSerializer -> org.codehaus.jackson.map.JsonSerializer:
    org.codehaus.jackson.map.JsonSerializer unwrappingSerializer() -> unwrappingSerializer
    boolean isUnwrappingSerializer() -> isUnwrappingSerializer
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
    java.lang.Class handledType() -> handledType
org.codehaus.jackson.map.JsonSerializer$None -> org.codehaus.jackson.map.JsonSerializer$None:
org.codehaus.jackson.map.KeyDeserializer -> org.codehaus.jackson.map.KeyDeserializer:
    java.lang.Object deserializeKey(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> deserializeKey
org.codehaus.jackson.map.KeyDeserializer$None -> org.codehaus.jackson.map.KeyDeserializer$None:
org.codehaus.jackson.map.KeyDeserializers -> org.codehaus.jackson.map.KeyDeserializers:
    org.codehaus.jackson.map.KeyDeserializer findKeyDeserializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty) -> findKeyDeserializer
org.codehaus.jackson.map.MapperConfig -> org.codehaus.jackson.map.MapperConfig:
    java.text.DateFormat DEFAULT_DATE_FORMAT -> DEFAULT_DATE_FORMAT
    org.codehaus.jackson.map.MapperConfig$Base _base -> _base
    java.util.HashMap _mixInAnnotations -> _mixInAnnotations
    boolean _mixInAnnotationsShared -> _mixInAnnotationsShared
    org.codehaus.jackson.map.jsontype.SubtypeResolver _subtypeResolver -> _subtypeResolver
    boolean isAnnotationProcessingEnabled() -> isAnnotationProcessingEnabled
    boolean canOverrideAccessModifiers() -> canOverrideAccessModifiers
    boolean shouldSortPropertiesAlphabetically() -> shouldSortPropertiesAlphabetically
    org.codehaus.jackson.map.ClassIntrospector getClassIntrospector() -> getClassIntrospector
    org.codehaus.jackson.map.AnnotationIntrospector getAnnotationIntrospector() -> getAnnotationIntrospector
    org.codehaus.jackson.map.introspect.VisibilityChecker getDefaultVisibilityChecker() -> getDefaultVisibilityChecker
    org.codehaus.jackson.map.PropertyNamingStrategy getPropertyNamingStrategy() -> getPropertyNamingStrategy
    org.codehaus.jackson.map.HandlerInstantiator getHandlerInstantiator() -> getHandlerInstantiator
    java.lang.Class findMixInClassFor(java.lang.Class) -> findMixInClassFor
    org.codehaus.jackson.map.jsontype.TypeResolverBuilder getDefaultTyper(org.codehaus.jackson.type.JavaType) -> getDefaultTyper
    org.codehaus.jackson.map.jsontype.SubtypeResolver getSubtypeResolver() -> getSubtypeResolver
    org.codehaus.jackson.map.type.TypeFactory getTypeFactory() -> getTypeFactory
    org.codehaus.jackson.type.JavaType constructType(java.lang.Class) -> constructType
    org.codehaus.jackson.type.JavaType constructSpecializedType(org.codehaus.jackson.type.JavaType,java.lang.Class) -> constructSpecializedType
    java.text.DateFormat getDateFormat() -> getDateFormat
    org.codehaus.jackson.map.BeanDescription introspectClassAnnotations(java.lang.Class) -> introspectClassAnnotations
    org.codehaus.jackson.map.BeanDescription introspectClassAnnotations(org.codehaus.jackson.type.JavaType) -> introspectClassAnnotations
    org.codehaus.jackson.map.jsontype.TypeResolverBuilder typeResolverBuilderInstance(org.codehaus.jackson.map.introspect.Annotated,java.lang.Class) -> typeResolverBuilderInstance
    org.codehaus.jackson.map.jsontype.TypeIdResolver typeIdResolverInstance(org.codehaus.jackson.map.introspect.Annotated,java.lang.Class) -> typeIdResolverInstance
org.codehaus.jackson.map.MapperConfig$Base -> org.codehaus.jackson.map.MapperConfig$Base:
    org.codehaus.jackson.map.ClassIntrospector _classIntrospector -> _classIntrospector
    org.codehaus.jackson.map.AnnotationIntrospector _annotationIntrospector -> _annotationIntrospector
    org.codehaus.jackson.map.introspect.VisibilityChecker _visibilityChecker -> _visibilityChecker
    org.codehaus.jackson.map.PropertyNamingStrategy _propertyNamingStrategy -> _propertyNamingStrategy
    org.codehaus.jackson.map.type.TypeFactory _typeFactory -> _typeFactory
    org.codehaus.jackson.map.jsontype.TypeResolverBuilder _typeResolverBuilder -> _typeResolverBuilder
    java.text.DateFormat _dateFormat -> _dateFormat
    org.codehaus.jackson.map.HandlerInstantiator _handlerInstantiator -> _handlerInstantiator
    org.codehaus.jackson.map.ClassIntrospector getClassIntrospector() -> getClassIntrospector
    org.codehaus.jackson.map.AnnotationIntrospector getAnnotationIntrospector() -> getAnnotationIntrospector
    org.codehaus.jackson.map.introspect.VisibilityChecker getVisibilityChecker() -> getVisibilityChecker
    org.codehaus.jackson.map.PropertyNamingStrategy getPropertyNamingStrategy() -> getPropertyNamingStrategy
    org.codehaus.jackson.map.type.TypeFactory getTypeFactory() -> getTypeFactory
    org.codehaus.jackson.map.jsontype.TypeResolverBuilder getTypeResolverBuilder() -> getTypeResolverBuilder
    java.text.DateFormat getDateFormat() -> getDateFormat
    org.codehaus.jackson.map.HandlerInstantiator getHandlerInstantiator() -> getHandlerInstantiator
org.codehaus.jackson.map.MapperConfig$ConfigFeature -> org.codehaus.jackson.map.MapperConfig$ConfigFeature:
    boolean enabledByDefault() -> enabledByDefault
    int getMask() -> getMask
org.codehaus.jackson.map.MapperConfig$Impl -> org.codehaus.jackson.map.MapperConfig$Impl:
    int _featureFlags -> _featureFlags
    int collectFeatureDefaults(java.lang.Class) -> collectFeatureDefaults
org.codehaus.jackson.map.MappingJsonFactory -> org.codehaus.jackson.map.MappingJsonFactory:
    org.codehaus.jackson.map.ObjectMapper getCodec() -> getCodec
    org.codehaus.jackson.ObjectCodec getCodec() -> getCodec
org.codehaus.jackson.map.ObjectMapper -> org.codehaus.jackson.map.ObjectMapper:
    org.codehaus.jackson.type.JavaType JSON_NODE_TYPE -> JSON_NODE_TYPE
    org.codehaus.jackson.map.ClassIntrospector DEFAULT_INTROSPECTOR -> DEFAULT_INTROSPECTOR
    org.codehaus.jackson.map.AnnotationIntrospector DEFAULT_ANNOTATION_INTROSPECTOR -> DEFAULT_ANNOTATION_INTROSPECTOR
    org.codehaus.jackson.map.introspect.VisibilityChecker STD_VISIBILITY_CHECKER -> STD_VISIBILITY_CHECKER
    org.codehaus.jackson.JsonFactory _jsonFactory -> _jsonFactory
    org.codehaus.jackson.map.jsontype.SubtypeResolver _subtypeResolver -> _subtypeResolver
    org.codehaus.jackson.map.type.TypeFactory _typeFactory -> _typeFactory
    org.codehaus.jackson.map.InjectableValues _injectableValues -> _injectableValues
    org.codehaus.jackson.map.SerializationConfig _serializationConfig -> _serializationConfig
    org.codehaus.jackson.map.SerializerProvider _serializerProvider -> _serializerProvider
    org.codehaus.jackson.map.SerializerFactory _serializerFactory -> _serializerFactory
    org.codehaus.jackson.map.DeserializationConfig _deserializationConfig -> _deserializationConfig
    org.codehaus.jackson.map.DeserializerProvider _deserializerProvider -> _deserializerProvider
    java.util.concurrent.ConcurrentHashMap _rootDeserializers -> _rootDeserializers
    org.codehaus.jackson.map.SerializationConfig copySerializationConfig() -> copySerializationConfig
    org.codehaus.jackson.map.DeserializationConfig copyDeserializationConfig() -> copyDeserializationConfig
    org.codehaus.jackson.map.type.TypeFactory getTypeFactory() -> getTypeFactory
    org.codehaus.jackson.JsonNode readTree(java.lang.String) -> readTree
    void writeValue(org.codehaus.jackson.JsonGenerator,java.lang.Object) -> writeValue
    org.codehaus.jackson.node.ObjectNode createObjectNode() -> createObjectNode
    org.codehaus.jackson.node.ArrayNode createArrayNode() -> createArrayNode
    org.codehaus.jackson.JsonParser treeAsTokens(org.codehaus.jackson.JsonNode) -> treeAsTokens
    java.lang.Object readValue(java.lang.String,java.lang.Class) -> readValue
    java.lang.Object readValue(java.lang.String,org.codehaus.jackson.type.TypeReference) -> readValue
    java.lang.Object readValue(java.lang.String,org.codehaus.jackson.type.JavaType) -> readValue
    java.lang.Object readValue(org.codehaus.jackson.JsonNode,org.codehaus.jackson.type.TypeReference) -> readValue
    java.lang.String writeValueAsString(java.lang.Object) -> writeValueAsString
    void _configAndWriteValue(org.codehaus.jackson.JsonGenerator,java.lang.Object) -> _configAndWriteValue
    void _configAndWriteCloseable(org.codehaus.jackson.JsonGenerator,java.lang.Object,org.codehaus.jackson.map.SerializationConfig) -> _configAndWriteCloseable
    void _writeCloseableValue(org.codehaus.jackson.JsonGenerator,java.lang.Object,org.codehaus.jackson.map.SerializationConfig) -> _writeCloseableValue
    java.lang.Object _readValue(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType) -> _readValue
    java.lang.Object _readMapAndClose(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType) -> _readMapAndClose
    org.codehaus.jackson.JsonToken _initForReading(org.codehaus.jackson.JsonParser) -> _initForReading
    java.lang.Object _unwrapAndDeserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.JsonDeserializer) -> _unwrapAndDeserialize
    org.codehaus.jackson.map.JsonDeserializer _findRootDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType) -> _findRootDeserializer
    org.codehaus.jackson.map.DeserializationContext _createDeserializationContext(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationConfig) -> _createDeserializationContext
org.codehaus.jackson.map.PropertyNamingStrategy -> org.codehaus.jackson.map.PropertyNamingStrategy:
    org.codehaus.jackson.map.PropertyNamingStrategy CAMEL_CASE_TO_LOWER_CASE_WITH_UNDERSCORES -> CAMEL_CASE_TO_LOWER_CASE_WITH_UNDERSCORES
    java.lang.String nameForField(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.introspect.AnnotatedField,java.lang.String) -> nameForField
    java.lang.String nameForGetterMethod(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.introspect.AnnotatedMethod,java.lang.String) -> nameForGetterMethod
    java.lang.String nameForSetterMethod(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.introspect.AnnotatedMethod,java.lang.String) -> nameForSetterMethod
    java.lang.String nameForConstructorParameter(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.introspect.AnnotatedParameter,java.lang.String) -> nameForConstructorParameter
org.codehaus.jackson.map.PropertyNamingStrategy$LowerCaseWithUnderscoresStrategy -> org.codehaus.jackson.map.PropertyNamingStrategy$LowerCaseWithUnderscoresStrategy:
    java.lang.String translate(java.lang.String) -> translate
org.codehaus.jackson.map.PropertyNamingStrategy$PropertyNamingStrategyBase -> org.codehaus.jackson.map.PropertyNamingStrategy$PropertyNamingStrategyBase:
    java.lang.String nameForField(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.introspect.AnnotatedField,java.lang.String) -> nameForField
    java.lang.String nameForGetterMethod(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.introspect.AnnotatedMethod,java.lang.String) -> nameForGetterMethod
    java.lang.String nameForSetterMethod(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.introspect.AnnotatedMethod,java.lang.String) -> nameForSetterMethod
    java.lang.String nameForConstructorParameter(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.introspect.AnnotatedParameter,java.lang.String) -> nameForConstructorParameter
    java.lang.String translate(java.lang.String) -> translate
org.codehaus.jackson.map.ResolvableDeserializer -> org.codehaus.jackson.map.ResolvableDeserializer:
    void resolve(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider) -> resolve
org.codehaus.jackson.map.ResolvableSerializer -> org.codehaus.jackson.map.ResolvableSerializer:
    void resolve(org.codehaus.jackson.map.SerializerProvider) -> resolve
org.codehaus.jackson.map.SerializationConfig -> org.codehaus.jackson.map.SerializationConfig:
    org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion _serializationInclusion -> _serializationInclusion
    java.lang.Class _serializationView -> _serializationView
    org.codehaus.jackson.map.ser.FilterProvider _filterProvider -> _filterProvider
    org.codehaus.jackson.map.SerializationConfig createUnshared(org.codehaus.jackson.map.jsontype.SubtypeResolver) -> createUnshared
    org.codehaus.jackson.map.AnnotationIntrospector getAnnotationIntrospector() -> getAnnotationIntrospector
    org.codehaus.jackson.map.BeanDescription introspectClassAnnotations(org.codehaus.jackson.type.JavaType) -> introspectClassAnnotations
    boolean isAnnotationProcessingEnabled() -> isAnnotationProcessingEnabled
    boolean canOverrideAccessModifiers() -> canOverrideAccessModifiers
    boolean shouldSortPropertiesAlphabetically() -> shouldSortPropertiesAlphabetically
    org.codehaus.jackson.map.introspect.VisibilityChecker getDefaultVisibilityChecker() -> getDefaultVisibilityChecker
    boolean isEnabled(org.codehaus.jackson.map.SerializationConfig$Feature) -> isEnabled
    java.lang.Class getSerializationView() -> getSerializationView
    org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion getSerializationInclusion() -> getSerializationInclusion
    org.codehaus.jackson.map.ser.FilterProvider getFilterProvider() -> getFilterProvider
    org.codehaus.jackson.map.BeanDescription introspect(org.codehaus.jackson.type.JavaType) -> introspect
    org.codehaus.jackson.map.JsonSerializer serializerInstance(org.codehaus.jackson.map.introspect.Annotated,java.lang.Class) -> serializerInstance
    java.lang.String toString() -> toString
org.codehaus.jackson.map.SerializationConfig$Feature -> org.codehaus.jackson.map.SerializationConfig$Feature:
    org.codehaus.jackson.map.SerializationConfig$Feature USE_ANNOTATIONS -> USE_ANNOTATIONS
    org.codehaus.jackson.map.SerializationConfig$Feature AUTO_DETECT_GETTERS -> AUTO_DETECT_GETTERS
    org.codehaus.jackson.map.SerializationConfig$Feature AUTO_DETECT_IS_GETTERS -> AUTO_DETECT_IS_GETTERS
    org.codehaus.jackson.map.SerializationConfig$Feature AUTO_DETECT_FIELDS -> AUTO_DETECT_FIELDS
    org.codehaus.jackson.map.SerializationConfig$Feature CAN_OVERRIDE_ACCESS_MODIFIERS -> CAN_OVERRIDE_ACCESS_MODIFIERS
    org.codehaus.jackson.map.SerializationConfig$Feature REQUIRE_SETTERS_FOR_GETTERS -> REQUIRE_SETTERS_FOR_GETTERS
    org.codehaus.jackson.map.SerializationConfig$Feature WRITE_NULL_PROPERTIES -> WRITE_NULL_PROPERTIES
    org.codehaus.jackson.map.SerializationConfig$Feature USE_STATIC_TYPING -> USE_STATIC_TYPING
    org.codehaus.jackson.map.SerializationConfig$Feature DEFAULT_VIEW_INCLUSION -> DEFAULT_VIEW_INCLUSION
    org.codehaus.jackson.map.SerializationConfig$Feature WRAP_ROOT_VALUE -> WRAP_ROOT_VALUE
    org.codehaus.jackson.map.SerializationConfig$Feature INDENT_OUTPUT -> INDENT_OUTPUT
    org.codehaus.jackson.map.SerializationConfig$Feature SORT_PROPERTIES_ALPHABETICALLY -> SORT_PROPERTIES_ALPHABETICALLY
    org.codehaus.jackson.map.SerializationConfig$Feature FAIL_ON_EMPTY_BEANS -> FAIL_ON_EMPTY_BEANS
    org.codehaus.jackson.map.SerializationConfig$Feature WRAP_EXCEPTIONS -> WRAP_EXCEPTIONS
    org.codehaus.jackson.map.SerializationConfig$Feature CLOSE_CLOSEABLE -> CLOSE_CLOSEABLE
    org.codehaus.jackson.map.SerializationConfig$Feature FLUSH_AFTER_WRITE_VALUE -> FLUSH_AFTER_WRITE_VALUE
    org.codehaus.jackson.map.SerializationConfig$Feature WRITE_DATES_AS_TIMESTAMPS -> WRITE_DATES_AS_TIMESTAMPS
    org.codehaus.jackson.map.SerializationConfig$Feature WRITE_DATE_KEYS_AS_TIMESTAMPS -> WRITE_DATE_KEYS_AS_TIMESTAMPS
    org.codehaus.jackson.map.SerializationConfig$Feature WRITE_CHAR_ARRAYS_AS_JSON_ARRAYS -> WRITE_CHAR_ARRAYS_AS_JSON_ARRAYS
    org.codehaus.jackson.map.SerializationConfig$Feature WRITE_ENUMS_USING_TO_STRING -> WRITE_ENUMS_USING_TO_STRING
    org.codehaus.jackson.map.SerializationConfig$Feature WRITE_ENUMS_USING_INDEX -> WRITE_ENUMS_USING_INDEX
    org.codehaus.jackson.map.SerializationConfig$Feature WRITE_NULL_MAP_VALUES -> WRITE_NULL_MAP_VALUES
    org.codehaus.jackson.map.SerializationConfig$Feature WRITE_EMPTY_JSON_ARRAYS -> WRITE_EMPTY_JSON_ARRAYS
    boolean _defaultState -> _defaultState
    org.codehaus.jackson.map.SerializationConfig$Feature[] $VALUES -> $VALUES
    org.codehaus.jackson.map.SerializationConfig$Feature[] values() -> values
    org.codehaus.jackson.map.SerializationConfig$Feature valueOf(java.lang.String) -> valueOf
    boolean enabledByDefault() -> enabledByDefault
    int getMask() -> getMask
org.codehaus.jackson.map.SerializerFactory -> org.codehaus.jackson.map.SerializerFactory:
    org.codehaus.jackson.map.JsonSerializer createSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> createSerializer
    org.codehaus.jackson.map.TypeSerializer createTypeSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> createTypeSerializer
    org.codehaus.jackson.map.JsonSerializer createKeySerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> createKeySerializer
org.codehaus.jackson.map.SerializerFactory$Config -> org.codehaus.jackson.map.SerializerFactory$Config:
    boolean hasKeySerializers() -> hasKeySerializers
    boolean hasSerializerModifiers() -> hasSerializerModifiers
    java.lang.Iterable serializers() -> serializers
    java.lang.Iterable keySerializers() -> keySerializers
    java.lang.Iterable serializerModifiers() -> serializerModifiers
org.codehaus.jackson.map.SerializerProvider -> org.codehaus.jackson.map.SerializerProvider:
    org.codehaus.jackson.type.JavaType TYPE_OBJECT -> TYPE_OBJECT
    org.codehaus.jackson.map.SerializationConfig _config -> _config
    java.lang.Class _serializationView -> _serializationView
    void serializeValue(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.JsonGenerator,java.lang.Object,org.codehaus.jackson.map.SerializerFactory) -> serializeValue
    boolean isEnabled(org.codehaus.jackson.map.SerializationConfig$Feature) -> isEnabled
    java.lang.Class getSerializationView() -> getSerializationView
    org.codehaus.jackson.map.ser.FilterProvider getFilterProvider() -> getFilterProvider
    org.codehaus.jackson.type.JavaType constructType(java.lang.reflect.Type) -> constructType
    org.codehaus.jackson.type.JavaType constructSpecializedType(org.codehaus.jackson.type.JavaType,java.lang.Class) -> constructSpecializedType
    org.codehaus.jackson.map.JsonSerializer findValueSerializer(java.lang.Class,org.codehaus.jackson.map.BeanProperty) -> findValueSerializer
    org.codehaus.jackson.map.JsonSerializer findValueSerializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> findValueSerializer
    org.codehaus.jackson.map.JsonSerializer findTypedValueSerializer(java.lang.Class,boolean,org.codehaus.jackson.map.BeanProperty) -> findTypedValueSerializer
    org.codehaus.jackson.map.JsonSerializer findTypedValueSerializer(org.codehaus.jackson.type.JavaType,boolean,org.codehaus.jackson.map.BeanProperty) -> findTypedValueSerializer
    org.codehaus.jackson.map.JsonSerializer findKeySerializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> findKeySerializer
    org.codehaus.jackson.map.JsonSerializer getNullKeySerializer() -> getNullKeySerializer
    org.codehaus.jackson.map.JsonSerializer getNullValueSerializer() -> getNullValueSerializer
    void defaultSerializeValue(java.lang.Object,org.codehaus.jackson.JsonGenerator) -> defaultSerializeValue
    void defaultSerializeDateValue(long,org.codehaus.jackson.JsonGenerator) -> defaultSerializeDateValue
    void defaultSerializeDateValue(java.util.Date,org.codehaus.jackson.JsonGenerator) -> defaultSerializeDateValue
    void defaultSerializeDateKey(long,org.codehaus.jackson.JsonGenerator) -> defaultSerializeDateKey
    void defaultSerializeDateKey(java.util.Date,org.codehaus.jackson.JsonGenerator) -> defaultSerializeDateKey
    void defaultSerializeNull(org.codehaus.jackson.JsonGenerator) -> defaultSerializeNull
org.codehaus.jackson.map.Serializers -> org.codehaus.jackson.map.Serializers:
    org.codehaus.jackson.map.JsonSerializer findSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty) -> findSerializer
    org.codehaus.jackson.map.JsonSerializer findCollectionSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.type.CollectionType,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.JsonSerializer) -> findCollectionSerializer
    org.codehaus.jackson.map.JsonSerializer findCollectionLikeSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.type.CollectionLikeType,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.JsonSerializer) -> findCollectionLikeSerializer
    org.codehaus.jackson.map.JsonSerializer findMapSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.type.MapType,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.JsonSerializer,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.JsonSerializer) -> findMapSerializer
    org.codehaus.jackson.map.JsonSerializer findMapLikeSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.type.MapLikeType,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.JsonSerializer,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.JsonSerializer) -> findMapLikeSerializer
org.codehaus.jackson.map.TypeDeserializer -> org.codehaus.jackson.map.TypeDeserializer:
    org.codehaus.jackson.annotate.JsonTypeInfo$As getTypeInclusion() -> getTypeInclusion
    java.lang.String getPropertyName() -> getPropertyName
    java.lang.Object deserializeTypedFromObject(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserializeTypedFromObject
    java.lang.Object deserializeTypedFromArray(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserializeTypedFromArray
    java.lang.Object deserializeTypedFromScalar(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserializeTypedFromScalar
    java.lang.Object deserializeTypedFromAny(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserializeTypedFromAny
org.codehaus.jackson.map.TypeSerializer -> org.codehaus.jackson.map.TypeSerializer:
    void writeTypePrefixForScalar(java.lang.Object,org.codehaus.jackson.JsonGenerator) -> writeTypePrefixForScalar
    void writeTypePrefixForObject(java.lang.Object,org.codehaus.jackson.JsonGenerator) -> writeTypePrefixForObject
    void writeTypePrefixForArray(java.lang.Object,org.codehaus.jackson.JsonGenerator) -> writeTypePrefixForArray
    void writeTypeSuffixForScalar(java.lang.Object,org.codehaus.jackson.JsonGenerator) -> writeTypeSuffixForScalar
    void writeTypeSuffixForObject(java.lang.Object,org.codehaus.jackson.JsonGenerator) -> writeTypeSuffixForObject
    void writeTypeSuffixForArray(java.lang.Object,org.codehaus.jackson.JsonGenerator) -> writeTypeSuffixForArray
    void writeTypePrefixForScalar(java.lang.Object,org.codehaus.jackson.JsonGenerator,java.lang.Class) -> writeTypePrefixForScalar
org.codehaus.jackson.map.annotate.JacksonInject -> org.codehaus.jackson.map.annotate.JacksonInject:
    java.lang.String value() -> value
org.codehaus.jackson.map.annotate.JacksonStdImpl -> org.codehaus.jackson.map.annotate.JacksonStdImpl:
org.codehaus.jackson.map.annotate.JsonCachable -> org.codehaus.jackson.map.annotate.JsonCachable:
    boolean value() -> value
org.codehaus.jackson.map.annotate.JsonDeserialize -> org.codehaus.jackson.map.annotate.JsonDeserialize:
    java.lang.Class using() -> using
    java.lang.Class contentUsing() -> contentUsing
    java.lang.Class keyUsing() -> keyUsing
    java.lang.Class as() -> as
    java.lang.Class keyAs() -> keyAs
    java.lang.Class contentAs() -> contentAs
org.codehaus.jackson.map.annotate.JsonFilter -> org.codehaus.jackson.map.annotate.JsonFilter:
    java.lang.String value() -> value
org.codehaus.jackson.map.annotate.JsonRootName -> org.codehaus.jackson.map.annotate.JsonRootName:
    java.lang.String value() -> value
org.codehaus.jackson.map.annotate.JsonSerialize -> org.codehaus.jackson.map.annotate.JsonSerialize:
    java.lang.Class using() -> using
    java.lang.Class contentUsing() -> contentUsing
    java.lang.Class keyUsing() -> keyUsing
    java.lang.Class as() -> as
    java.lang.Class keyAs() -> keyAs
    java.lang.Class contentAs() -> contentAs
    org.codehaus.jackson.map.annotate.JsonSerialize$Typing typing() -> typing
    org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion include() -> include
org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion -> org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion:
    org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion ALWAYS -> ALWAYS
    org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion NON_NULL -> NON_NULL
    org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion NON_DEFAULT -> NON_DEFAULT
    org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion NON_EMPTY -> NON_EMPTY
    org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion[] $VALUES -> $VALUES
    org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion[] values() -> values
    org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion valueOf(java.lang.String) -> valueOf
org.codehaus.jackson.map.annotate.JsonSerialize$Typing -> org.codehaus.jackson.map.annotate.JsonSerialize$Typing:
    org.codehaus.jackson.map.annotate.JsonSerialize$Typing DYNAMIC -> DYNAMIC
    org.codehaus.jackson.map.annotate.JsonSerialize$Typing STATIC -> STATIC
    org.codehaus.jackson.map.annotate.JsonSerialize$Typing[] $VALUES -> $VALUES
    org.codehaus.jackson.map.annotate.JsonSerialize$Typing[] values() -> values
    org.codehaus.jackson.map.annotate.JsonSerialize$Typing valueOf(java.lang.String) -> valueOf
org.codehaus.jackson.map.annotate.JsonTypeIdResolver -> org.codehaus.jackson.map.annotate.JsonTypeIdResolver:
    java.lang.Class value() -> value
org.codehaus.jackson.map.annotate.JsonTypeResolver -> org.codehaus.jackson.map.annotate.JsonTypeResolver:
    java.lang.Class value() -> value
org.codehaus.jackson.map.annotate.JsonValueInstantiator -> org.codehaus.jackson.map.annotate.JsonValueInstantiator:
    java.lang.Class value() -> value
org.codehaus.jackson.map.annotate.JsonView -> org.codehaus.jackson.map.annotate.JsonView:
    java.lang.Class[] value() -> value
org.codehaus.jackson.map.annotate.NoClass -> org.codehaus.jackson.map.annotate.NoClass:
org.codehaus.jackson.map.deser.AbstractDeserializer -> org.codehaus.jackson.map.deser.AbstractDeserializer:
    org.codehaus.jackson.type.JavaType _baseType -> _baseType
    boolean _acceptString -> _acceptString
    boolean _acceptBoolean -> _acceptBoolean
    boolean _acceptInt -> _acceptInt
    boolean _acceptDouble -> _acceptDouble
    java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer) -> deserializeWithType
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object _deserializeIfNatural(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> _deserializeIfNatural
org.codehaus.jackson.map.deser.AbstractDeserializer$1 -> org.codehaus.jackson.map.deser.AbstractDeserializer$1:
    int[] $SwitchMap$org$codehaus$jackson$JsonToken -> $SwitchMap$org$codehaus$jackson$JsonToken
org.codehaus.jackson.map.deser.BasicDeserializerFactory -> org.codehaus.jackson.map.deser.BasicDeserializerFactory:
    java.util.HashMap _simpleDeserializers -> _simpleDeserializers
    java.util.HashMap _keyDeserializers -> _keyDeserializers
    java.util.HashMap _mapFallbacks -> _mapFallbacks
    java.util.HashMap _collectionFallbacks -> _collectionFallbacks
    java.util.HashMap _arrayDeserializers -> _arrayDeserializers
    org.codehaus.jackson.map.ext.OptionalHandlerFactory optionalHandlers -> optionalHandlers
    org.codehaus.jackson.map.JsonDeserializer _findCustomArrayDeserializer(org.codehaus.jackson.map.type.ArrayType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.JsonDeserializer) -> _findCustomArrayDeserializer
    org.codehaus.jackson.map.JsonDeserializer _findCustomCollectionDeserializer(org.codehaus.jackson.map.type.CollectionType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.JsonDeserializer) -> _findCustomCollectionDeserializer
    org.codehaus.jackson.map.JsonDeserializer _findCustomCollectionLikeDeserializer(org.codehaus.jackson.map.type.CollectionLikeType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.JsonDeserializer) -> _findCustomCollectionLikeDeserializer
    org.codehaus.jackson.map.JsonDeserializer _findCustomEnumDeserializer(java.lang.Class,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty) -> _findCustomEnumDeserializer
    org.codehaus.jackson.map.JsonDeserializer _findCustomMapDeserializer(org.codehaus.jackson.map.type.MapType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.KeyDeserializer,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.JsonDeserializer) -> _findCustomMapDeserializer
    org.codehaus.jackson.map.JsonDeserializer _findCustomMapLikeDeserializer(org.codehaus.jackson.map.type.MapLikeType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.KeyDeserializer,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.JsonDeserializer) -> _findCustomMapLikeDeserializer
    org.codehaus.jackson.map.JsonDeserializer _findCustomTreeNodeDeserializer(java.lang.Class,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.BeanProperty) -> _findCustomTreeNodeDeserializer
    org.codehaus.jackson.map.deser.ValueInstantiator findValueInstantiator(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription) -> findValueInstantiator
    org.codehaus.jackson.type.JavaType mapAbstractType(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType) -> mapAbstractType
    org.codehaus.jackson.map.JsonDeserializer createArrayDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.type.ArrayType,org.codehaus.jackson.map.BeanProperty) -> createArrayDeserializer
    org.codehaus.jackson.map.JsonDeserializer createCollectionDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.type.CollectionType,org.codehaus.jackson.map.BeanProperty) -> createCollectionDeserializer
    org.codehaus.jackson.map.JsonDeserializer createCollectionLikeDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.type.CollectionLikeType,org.codehaus.jackson.map.BeanProperty) -> createCollectionLikeDeserializer
    org.codehaus.jackson.map.JsonDeserializer createMapDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.type.MapType,org.codehaus.jackson.map.BeanProperty) -> createMapDeserializer
    org.codehaus.jackson.map.JsonDeserializer createMapLikeDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.type.MapLikeType,org.codehaus.jackson.map.BeanProperty) -> createMapLikeDeserializer
    org.codehaus.jackson.map.JsonDeserializer createEnumDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> createEnumDeserializer
    org.codehaus.jackson.map.JsonDeserializer createTreeDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> createTreeDeserializer
    org.codehaus.jackson.map.JsonDeserializer findStdBeanDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> findStdBeanDeserializer
    org.codehaus.jackson.map.TypeDeserializer findTypeDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> findTypeDeserializer
    org.codehaus.jackson.map.TypeDeserializer findPropertyTypeDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.introspect.AnnotatedMember,org.codehaus.jackson.map.BeanProperty) -> findPropertyTypeDeserializer
    org.codehaus.jackson.map.TypeDeserializer findPropertyContentTypeDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.introspect.AnnotatedMember,org.codehaus.jackson.map.BeanProperty) -> findPropertyContentTypeDeserializer
    org.codehaus.jackson.map.JsonDeserializer findDeserializerFromAnnotation(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.map.BeanProperty) -> findDeserializerFromAnnotation
    org.codehaus.jackson.map.JsonDeserializer _constructDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.map.BeanProperty,java.lang.Object) -> _constructDeserializer
    org.codehaus.jackson.type.JavaType modifyTypeByAnnotation(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType,java.lang.String) -> modifyTypeByAnnotation
    org.codehaus.jackson.type.JavaType resolveType(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.introspect.AnnotatedMember,org.codehaus.jackson.map.BeanProperty) -> resolveType
    org.codehaus.jackson.map.util.EnumResolver constructEnumResolver(java.lang.Class,org.codehaus.jackson.map.DeserializationConfig) -> constructEnumResolver
org.codehaus.jackson.map.deser.BeanDeserializer -> org.codehaus.jackson.map.deser.BeanDeserializer:
    org.codehaus.jackson.map.introspect.AnnotatedClass _forClass -> _forClass
    org.codehaus.jackson.type.JavaType _beanType -> _beanType
    org.codehaus.jackson.map.BeanProperty _property -> _property
    org.codehaus.jackson.map.deser.ValueInstantiator _valueInstantiator -> _valueInstantiator
    org.codehaus.jackson.map.JsonDeserializer _delegateDeserializer -> _delegateDeserializer
    org.codehaus.jackson.map.deser.impl.PropertyBasedCreator _propertyBasedCreator -> _propertyBasedCreator
    boolean _nonStandardCreation -> _nonStandardCreation
    org.codehaus.jackson.map.deser.impl.BeanPropertyMap _beanProperties -> _beanProperties
    org.codehaus.jackson.map.deser.impl.ValueInjector[] _injectables -> _injectables
    org.codehaus.jackson.map.deser.SettableAnyProperty _anySetter -> _anySetter
    java.util.HashSet _ignorableProps -> _ignorableProps
    boolean _ignoreAllUnknown -> _ignoreAllUnknown
    java.util.Map _backRefs -> _backRefs
    java.util.HashMap _subDeserializers -> _subDeserializers
    org.codehaus.jackson.map.deser.impl.UnwrappedPropertyHandler _unwrappedPropertyHandler -> _unwrappedPropertyHandler
    org.codehaus.jackson.map.deser.impl.ExternalTypeHandler _externalTypeIdHandler -> _externalTypeIdHandler
    org.codehaus.jackson.map.JsonDeserializer unwrappingDeserializer() -> unwrappingDeserializer
    java.lang.Class getBeanClass() -> getBeanClass
    org.codehaus.jackson.map.deser.SettableBeanProperty findBackReference(java.lang.String) -> findBackReference
    org.codehaus.jackson.map.deser.ValueInstantiator getValueInstantiator() -> getValueInstantiator
    void resolve(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider) -> resolve
    org.codehaus.jackson.map.deser.SettableBeanProperty _resolveManagedReferenceProperty(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.deser.SettableBeanProperty) -> _resolveManagedReferenceProperty
    org.codehaus.jackson.map.deser.SettableBeanProperty _resolveUnwrappedProperty(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.deser.SettableBeanProperty) -> _resolveUnwrappedProperty
    org.codehaus.jackson.map.deser.SettableBeanProperty _resolveInnerClassValuedProperty(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.deser.SettableBeanProperty) -> _resolveInnerClassValuedProperty
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object) -> deserialize
    java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer) -> deserializeWithType
    java.lang.Object deserializeFromObject(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserializeFromObject
    void _handleUnknown(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object,java.lang.String) -> _handleUnknown
    java.lang.Object deserializeFromObjectUsingNonDefault(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserializeFromObjectUsingNonDefault
    java.lang.Object deserializeFromString(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserializeFromString
    java.lang.Object deserializeFromNumber(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserializeFromNumber
    java.lang.Object deserializeFromDouble(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserializeFromDouble
    java.lang.Object deserializeFromBoolean(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserializeFromBoolean
    java.lang.Object deserializeFromArray(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserializeFromArray
    java.lang.Object _deserializeUsingPropertyBased(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> _deserializeUsingPropertyBased
    java.lang.Object handlePolymorphic(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object,org.codehaus.jackson.util.TokenBuffer) -> handlePolymorphic
    java.lang.Object deserializeWithUnwrapped(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserializeWithUnwrapped
    java.lang.Object deserializeWithUnwrapped(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object) -> deserializeWithUnwrapped
    java.lang.Object deserializeUsingPropertyBasedWithUnwrapped(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserializeUsingPropertyBasedWithUnwrapped
    java.lang.Object deserializeWithExternalTypeId(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserializeWithExternalTypeId
    java.lang.Object deserializeWithExternalTypeId(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object) -> deserializeWithExternalTypeId
    java.lang.Object deserializeUsingPropertyBasedWithExternalTypeId(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserializeUsingPropertyBasedWithExternalTypeId
    void injectValues(org.codehaus.jackson.map.DeserializationContext,java.lang.Object) -> injectValues
    void handleUnknownProperty(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object,java.lang.String) -> handleUnknownProperty
    java.lang.Object handleUnknownProperties(org.codehaus.jackson.map.DeserializationContext,java.lang.Object,org.codehaus.jackson.util.TokenBuffer) -> handleUnknownProperties
    org.codehaus.jackson.map.JsonDeserializer _findSubclassDeserializer(org.codehaus.jackson.map.DeserializationContext,java.lang.Object,org.codehaus.jackson.util.TokenBuffer) -> _findSubclassDeserializer
    void wrapAndThrow(java.lang.Throwable,java.lang.Object,java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> wrapAndThrow
    void wrapInstantiationProblem(java.lang.Throwable,org.codehaus.jackson.map.DeserializationContext) -> wrapInstantiationProblem
org.codehaus.jackson.map.deser.BeanDeserializer$1 -> org.codehaus.jackson.map.deser.BeanDeserializer$1:
    int[] $SwitchMap$org$codehaus$jackson$JsonToken -> $SwitchMap$org$codehaus$jackson$JsonToken
    int[] $SwitchMap$org$codehaus$jackson$JsonParser$NumberType -> $SwitchMap$org$codehaus$jackson$JsonParser$NumberType
org.codehaus.jackson.map.deser.BeanDeserializerBuilder -> org.codehaus.jackson.map.deser.BeanDeserializerBuilder:
    org.codehaus.jackson.map.introspect.BasicBeanDescription _beanDesc -> _beanDesc
    java.util.HashMap _properties -> _properties
    java.util.List _injectables -> _injectables
    java.util.HashMap _backRefProperties -> _backRefProperties
    java.util.HashSet _ignorableProps -> _ignorableProps
    org.codehaus.jackson.map.deser.ValueInstantiator _valueInstantiator -> _valueInstantiator
    org.codehaus.jackson.map.deser.SettableAnyProperty _anySetter -> _anySetter
    boolean _ignoreAllUnknown -> _ignoreAllUnknown
    void addOrReplaceProperty(org.codehaus.jackson.map.deser.SettableBeanProperty,boolean) -> addOrReplaceProperty
    void addProperty(org.codehaus.jackson.map.deser.SettableBeanProperty) -> addProperty
    void addBackReferenceProperty(java.lang.String,org.codehaus.jackson.map.deser.SettableBeanProperty) -> addBackReferenceProperty
    void addInjectable(java.lang.String,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.util.Annotations,org.codehaus.jackson.map.introspect.AnnotatedMember,java.lang.Object) -> addInjectable
    void addIgnorable(java.lang.String) -> addIgnorable
    void addCreatorProperty(org.codehaus.jackson.map.BeanPropertyDefinition) -> addCreatorProperty
    void setAnySetter(org.codehaus.jackson.map.deser.SettableAnyProperty) -> setAnySetter
    void setIgnoreUnknownProperties(boolean) -> setIgnoreUnknownProperties
    void setValueInstantiator(org.codehaus.jackson.map.deser.ValueInstantiator) -> setValueInstantiator
    boolean hasProperty(java.lang.String) -> hasProperty
    org.codehaus.jackson.map.JsonDeserializer build(org.codehaus.jackson.map.BeanProperty) -> build
org.codehaus.jackson.map.deser.BeanDeserializerFactory -> org.codehaus.jackson.map.deser.BeanDeserializerFactory:
    java.lang.Class[] INIT_CAUSE_PARAMS -> INIT_CAUSE_PARAMS
    org.codehaus.jackson.map.deser.BeanDeserializerFactory instance -> instance
    org.codehaus.jackson.map.DeserializerFactory$Config _factoryConfig -> _factoryConfig
    org.codehaus.jackson.map.KeyDeserializer createKeyDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> createKeyDeserializer
    org.codehaus.jackson.map.KeyDeserializer _createEnumKeyDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> _createEnumKeyDeserializer
    org.codehaus.jackson.map.JsonDeserializer _findCustomArrayDeserializer(org.codehaus.jackson.map.type.ArrayType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.JsonDeserializer) -> _findCustomArrayDeserializer
    org.codehaus.jackson.map.JsonDeserializer _findCustomCollectionDeserializer(org.codehaus.jackson.map.type.CollectionType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.JsonDeserializer) -> _findCustomCollectionDeserializer
    org.codehaus.jackson.map.JsonDeserializer _findCustomCollectionLikeDeserializer(org.codehaus.jackson.map.type.CollectionLikeType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.JsonDeserializer) -> _findCustomCollectionLikeDeserializer
    org.codehaus.jackson.map.JsonDeserializer _findCustomEnumDeserializer(java.lang.Class,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty) -> _findCustomEnumDeserializer
    org.codehaus.jackson.map.JsonDeserializer _findCustomMapDeserializer(org.codehaus.jackson.map.type.MapType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.KeyDeserializer,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.JsonDeserializer) -> _findCustomMapDeserializer
    org.codehaus.jackson.map.JsonDeserializer _findCustomMapLikeDeserializer(org.codehaus.jackson.map.type.MapLikeType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.KeyDeserializer,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.JsonDeserializer) -> _findCustomMapLikeDeserializer
    org.codehaus.jackson.map.JsonDeserializer _findCustomTreeNodeDeserializer(java.lang.Class,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.BeanProperty) -> _findCustomTreeNodeDeserializer
    org.codehaus.jackson.map.JsonDeserializer _findCustomBeanDeserializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty) -> _findCustomBeanDeserializer
    org.codehaus.jackson.type.JavaType mapAbstractType(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType) -> mapAbstractType
    org.codehaus.jackson.map.deser.ValueInstantiator findValueInstantiator(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription) -> findValueInstantiator
    org.codehaus.jackson.map.JsonDeserializer createBeanDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> createBeanDeserializer
    org.codehaus.jackson.type.JavaType _mapAbstractType2(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType) -> _mapAbstractType2
    org.codehaus.jackson.type.JavaType materializeAbstractType(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription) -> materializeAbstractType
    org.codehaus.jackson.map.JsonDeserializer buildBeanDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty) -> buildBeanDeserializer
    org.codehaus.jackson.map.JsonDeserializer buildThrowableDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty) -> buildThrowableDeserializer
    org.codehaus.jackson.map.deser.BeanDeserializerBuilder constructBeanDeserializerBuilder(org.codehaus.jackson.map.introspect.BasicBeanDescription) -> constructBeanDeserializerBuilder
    org.codehaus.jackson.map.deser.ValueInstantiator constructDefaultValueInstantiator(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription) -> constructDefaultValueInstantiator
    void _addDeserializerConstructors(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.introspect.VisibilityChecker,org.codehaus.jackson.map.AnnotationIntrospector,org.codehaus.jackson.map.deser.impl.CreatorCollector) -> _addDeserializerConstructors
    boolean _handleSingleArgumentConstructor(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.introspect.VisibilityChecker,org.codehaus.jackson.map.AnnotationIntrospector,org.codehaus.jackson.map.deser.impl.CreatorCollector,org.codehaus.jackson.map.introspect.AnnotatedConstructor,boolean,boolean) -> _handleSingleArgumentConstructor
    void _addDeserializerFactoryMethods(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.introspect.VisibilityChecker,org.codehaus.jackson.map.AnnotationIntrospector,org.codehaus.jackson.map.deser.impl.CreatorCollector) -> _addDeserializerFactoryMethods
    boolean _handleSingleArgumentFactory(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.introspect.VisibilityChecker,org.codehaus.jackson.map.AnnotationIntrospector,org.codehaus.jackson.map.deser.impl.CreatorCollector,org.codehaus.jackson.map.introspect.AnnotatedMethod,boolean) -> _handleSingleArgumentFactory
    org.codehaus.jackson.map.deser.impl.CreatorProperty constructCreatorProperty(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,java.lang.String,int,org.codehaus.jackson.map.introspect.AnnotatedParameter,java.lang.Object) -> constructCreatorProperty
    void addBeanProps(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.deser.BeanDeserializerBuilder) -> addBeanProps
    void addReferenceProperties(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.deser.BeanDeserializerBuilder) -> addReferenceProperties
    void addInjectables(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.deser.BeanDeserializerBuilder) -> addInjectables
    org.codehaus.jackson.map.deser.SettableAnyProperty constructAnySetter(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.introspect.AnnotatedMethod) -> constructAnySetter
    org.codehaus.jackson.map.deser.SettableBeanProperty constructSettableProperty(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,java.lang.String,org.codehaus.jackson.map.introspect.AnnotatedMethod) -> constructSettableProperty
    org.codehaus.jackson.map.deser.SettableBeanProperty constructSettableProperty(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,java.lang.String,org.codehaus.jackson.map.introspect.AnnotatedField) -> constructSettableProperty
    org.codehaus.jackson.map.deser.SettableBeanProperty constructSetterlessProperty(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,java.lang.String,org.codehaus.jackson.map.introspect.AnnotatedMethod) -> constructSetterlessProperty
    boolean isPotentialBeanType(java.lang.Class) -> isPotentialBeanType
    boolean isIgnorableType(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,java.lang.Class,java.util.Map) -> isIgnorableType
    org.codehaus.jackson.map.Deserializers[] access$000() -> access$000
org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl -> org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl:
    org.codehaus.jackson.map.KeyDeserializers[] NO_KEY_DESERIALIZERS -> NO_KEY_DESERIALIZERS
    org.codehaus.jackson.map.deser.BeanDeserializerModifier[] NO_MODIFIERS -> NO_MODIFIERS
    org.codehaus.jackson.map.AbstractTypeResolver[] NO_ABSTRACT_TYPE_RESOLVERS -> NO_ABSTRACT_TYPE_RESOLVERS
    org.codehaus.jackson.map.deser.ValueInstantiators[] NO_VALUE_INSTANTIATORS -> NO_VALUE_INSTANTIATORS
    org.codehaus.jackson.map.Deserializers[] _additionalDeserializers -> _additionalDeserializers
    org.codehaus.jackson.map.KeyDeserializers[] _additionalKeyDeserializers -> _additionalKeyDeserializers
    org.codehaus.jackson.map.deser.BeanDeserializerModifier[] _modifiers -> _modifiers
    org.codehaus.jackson.map.AbstractTypeResolver[] _abstractTypeResolvers -> _abstractTypeResolvers
    org.codehaus.jackson.map.deser.ValueInstantiators[] _valueInstantiators -> _valueInstantiators
    boolean hasKeyDeserializers() -> hasKeyDeserializers
    boolean hasDeserializerModifiers() -> hasDeserializerModifiers
    boolean hasAbstractTypeResolvers() -> hasAbstractTypeResolvers
    boolean hasValueInstantiators() -> hasValueInstantiators
    java.lang.Iterable deserializers() -> deserializers
    java.lang.Iterable keyDeserializers() -> keyDeserializers
    java.lang.Iterable deserializerModifiers() -> deserializerModifiers
    java.lang.Iterable abstractTypeResolvers() -> abstractTypeResolvers
    java.lang.Iterable valueInstantiators() -> valueInstantiators
org.codehaus.jackson.map.deser.BeanDeserializerModifier -> org.codehaus.jackson.map.deser.BeanDeserializerModifier:
    org.codehaus.jackson.map.deser.BeanDeserializerBuilder updateBuilder(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.deser.BeanDeserializerBuilder) -> updateBuilder
    org.codehaus.jackson.map.JsonDeserializer modifyDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.JsonDeserializer) -> modifyDeserializer
org.codehaus.jackson.map.deser.SettableAnyProperty -> org.codehaus.jackson.map.deser.SettableAnyProperty:
    org.codehaus.jackson.map.BeanProperty _property -> _property
    java.lang.reflect.Method _setter -> _setter
    org.codehaus.jackson.type.JavaType _type -> _type
    org.codehaus.jackson.map.JsonDeserializer _valueDeserializer -> _valueDeserializer
    org.codehaus.jackson.map.deser.SettableAnyProperty withValueDeserializer(org.codehaus.jackson.map.JsonDeserializer) -> withValueDeserializer
    org.codehaus.jackson.map.BeanProperty getProperty() -> getProperty
    boolean hasValueDeserializer() -> hasValueDeserializer
    org.codehaus.jackson.type.JavaType getType() -> getType
    void deserializeAndSet(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object,java.lang.String) -> deserializeAndSet
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    void set(java.lang.Object,java.lang.String,java.lang.Object) -> set
    void _throwAsIOE(java.lang.Exception,java.lang.String,java.lang.Object) -> _throwAsIOE
    java.lang.String getClassName() -> getClassName
    java.lang.String toString() -> toString
org.codehaus.jackson.map.deser.SettableBeanProperty -> org.codehaus.jackson.map.deser.SettableBeanProperty:
    java.lang.String _propName -> _propName
    org.codehaus.jackson.type.JavaType _type -> _type
    org.codehaus.jackson.map.util.Annotations _contextAnnotations -> _contextAnnotations
    org.codehaus.jackson.map.JsonDeserializer _valueDeserializer -> _valueDeserializer
    org.codehaus.jackson.map.TypeDeserializer _valueTypeDeserializer -> _valueTypeDeserializer
    org.codehaus.jackson.map.deser.SettableBeanProperty$NullProvider _nullProvider -> _nullProvider
    java.lang.String _managedReferenceName -> _managedReferenceName
    int _propertyIndex -> _propertyIndex
    org.codehaus.jackson.map.deser.SettableBeanProperty withValueDeserializer(org.codehaus.jackson.map.JsonDeserializer) -> withValueDeserializer
    void setManagedReferenceName(java.lang.String) -> setManagedReferenceName
    void assignIndex(int) -> assignIndex
    java.lang.String getName() -> getName
    org.codehaus.jackson.type.JavaType getType() -> getType
    org.codehaus.jackson.map.introspect.AnnotatedMember getMember() -> getMember
    java.lang.String getPropertyName() -> getPropertyName
    java.lang.String getManagedReferenceName() -> getManagedReferenceName
    boolean hasValueDeserializer() -> hasValueDeserializer
    boolean hasValueTypeDeserializer() -> hasValueTypeDeserializer
    org.codehaus.jackson.map.JsonDeserializer getValueDeserializer() -> getValueDeserializer
    org.codehaus.jackson.map.TypeDeserializer getValueTypeDeserializer() -> getValueTypeDeserializer
    int getPropertyIndex() -> getPropertyIndex
    java.lang.Object getInjectableValueId() -> getInjectableValueId
    void deserializeAndSet(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object) -> deserializeAndSet
    void set(java.lang.Object,java.lang.Object) -> set
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    void _throwAsIOE(java.lang.Exception,java.lang.Object) -> _throwAsIOE
    java.io.IOException _throwAsIOE(java.lang.Exception) -> _throwAsIOE
    java.lang.String toString() -> toString
org.codehaus.jackson.map.deser.SettableBeanProperty$FieldProperty -> org.codehaus.jackson.map.deser.SettableBeanProperty$FieldProperty:
    org.codehaus.jackson.map.introspect.AnnotatedField _annotated -> _annotated
    java.lang.reflect.Field _field -> _field
    org.codehaus.jackson.map.deser.SettableBeanProperty$FieldProperty withValueDeserializer(org.codehaus.jackson.map.JsonDeserializer) -> withValueDeserializer
    org.codehaus.jackson.map.introspect.AnnotatedMember getMember() -> getMember
    void deserializeAndSet(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object) -> deserializeAndSet
    void set(java.lang.Object,java.lang.Object) -> set
    org.codehaus.jackson.map.deser.SettableBeanProperty withValueDeserializer(org.codehaus.jackson.map.JsonDeserializer) -> withValueDeserializer
org.codehaus.jackson.map.deser.SettableBeanProperty$InnerClassProperty -> org.codehaus.jackson.map.deser.SettableBeanProperty$InnerClassProperty:
    org.codehaus.jackson.map.deser.SettableBeanProperty _delegate -> _delegate
    java.lang.reflect.Constructor _creator -> _creator
    org.codehaus.jackson.map.deser.SettableBeanProperty$InnerClassProperty withValueDeserializer(org.codehaus.jackson.map.JsonDeserializer) -> withValueDeserializer
    org.codehaus.jackson.map.introspect.AnnotatedMember getMember() -> getMember
    void deserializeAndSet(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object) -> deserializeAndSet
    void set(java.lang.Object,java.lang.Object) -> set
    org.codehaus.jackson.map.deser.SettableBeanProperty withValueDeserializer(org.codehaus.jackson.map.JsonDeserializer) -> withValueDeserializer
org.codehaus.jackson.map.deser.SettableBeanProperty$ManagedReferenceProperty -> org.codehaus.jackson.map.deser.SettableBeanProperty$ManagedReferenceProperty:
    java.lang.String _referenceName -> _referenceName
    boolean _isContainer -> _isContainer
    org.codehaus.jackson.map.deser.SettableBeanProperty _managedProperty -> _managedProperty
    org.codehaus.jackson.map.deser.SettableBeanProperty _backProperty -> _backProperty
    org.codehaus.jackson.map.deser.SettableBeanProperty$ManagedReferenceProperty withValueDeserializer(org.codehaus.jackson.map.JsonDeserializer) -> withValueDeserializer
    org.codehaus.jackson.map.introspect.AnnotatedMember getMember() -> getMember
    void deserializeAndSet(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object) -> deserializeAndSet
    void set(java.lang.Object,java.lang.Object) -> set
    org.codehaus.jackson.map.deser.SettableBeanProperty withValueDeserializer(org.codehaus.jackson.map.JsonDeserializer) -> withValueDeserializer
org.codehaus.jackson.map.deser.SettableBeanProperty$MethodProperty -> org.codehaus.jackson.map.deser.SettableBeanProperty$MethodProperty:
    org.codehaus.jackson.map.introspect.AnnotatedMethod _annotated -> _annotated
    java.lang.reflect.Method _setter -> _setter
    org.codehaus.jackson.map.deser.SettableBeanProperty$MethodProperty withValueDeserializer(org.codehaus.jackson.map.JsonDeserializer) -> withValueDeserializer
    org.codehaus.jackson.map.introspect.AnnotatedMember getMember() -> getMember
    void deserializeAndSet(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object) -> deserializeAndSet
    void set(java.lang.Object,java.lang.Object) -> set
    org.codehaus.jackson.map.deser.SettableBeanProperty withValueDeserializer(org.codehaus.jackson.map.JsonDeserializer) -> withValueDeserializer
org.codehaus.jackson.map.deser.SettableBeanProperty$NullProvider -> org.codehaus.jackson.map.deser.SettableBeanProperty$NullProvider:
    java.lang.Object _nullValue -> _nullValue
    boolean _isPrimitive -> _isPrimitive
    java.lang.Class _rawType -> _rawType
    java.lang.Object nullValue(org.codehaus.jackson.map.DeserializationContext) -> nullValue
org.codehaus.jackson.map.deser.SettableBeanProperty$SetterlessProperty -> org.codehaus.jackson.map.deser.SettableBeanProperty$SetterlessProperty:
    org.codehaus.jackson.map.introspect.AnnotatedMethod _annotated -> _annotated
    java.lang.reflect.Method _getter -> _getter
    org.codehaus.jackson.map.deser.SettableBeanProperty$SetterlessProperty withValueDeserializer(org.codehaus.jackson.map.JsonDeserializer) -> withValueDeserializer
    org.codehaus.jackson.map.introspect.AnnotatedMember getMember() -> getMember
    void deserializeAndSet(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object) -> deserializeAndSet
    void set(java.lang.Object,java.lang.Object) -> set
    org.codehaus.jackson.map.deser.SettableBeanProperty withValueDeserializer(org.codehaus.jackson.map.JsonDeserializer) -> withValueDeserializer
org.codehaus.jackson.map.deser.StdDeserializationContext -> org.codehaus.jackson.map.deser.StdDeserializationContext:
    org.codehaus.jackson.JsonParser _parser -> _parser
    org.codehaus.jackson.map.DeserializerProvider _deserProvider -> _deserProvider
    org.codehaus.jackson.map.InjectableValues _injectableValues -> _injectableValues
    org.codehaus.jackson.map.util.ArrayBuilders _arrayBuilders -> _arrayBuilders
    org.codehaus.jackson.map.util.ObjectBuffer _objectBuffer -> _objectBuffer
    java.text.DateFormat _dateFormat -> _dateFormat
    org.codehaus.jackson.map.DeserializerProvider getDeserializerProvider() -> getDeserializerProvider
    org.codehaus.jackson.JsonParser getParser() -> getParser
    java.lang.Object findInjectableValue(java.lang.Object,org.codehaus.jackson.map.BeanProperty,java.lang.Object) -> findInjectableValue
    org.codehaus.jackson.map.util.ObjectBuffer leaseObjectBuffer() -> leaseObjectBuffer
    void returnObjectBuffer(org.codehaus.jackson.map.util.ObjectBuffer) -> returnObjectBuffer
    org.codehaus.jackson.map.util.ArrayBuilders getArrayBuilders() -> getArrayBuilders
    java.util.Date parseDate(java.lang.String) -> parseDate
    java.util.Calendar constructCalendar(java.util.Date) -> constructCalendar
    boolean handleUnknownProperty(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.JsonDeserializer,java.lang.Object,java.lang.String) -> handleUnknownProperty
    org.codehaus.jackson.map.JsonMappingException mappingException(java.lang.Class) -> mappingException
    org.codehaus.jackson.map.JsonMappingException mappingException(java.lang.Class,org.codehaus.jackson.JsonToken) -> mappingException
    org.codehaus.jackson.map.JsonMappingException instantiationException(java.lang.Class,java.lang.Throwable) -> instantiationException
    org.codehaus.jackson.map.JsonMappingException instantiationException(java.lang.Class,java.lang.String) -> instantiationException
    org.codehaus.jackson.map.JsonMappingException weirdStringException(java.lang.Class,java.lang.String) -> weirdStringException
    org.codehaus.jackson.map.JsonMappingException weirdNumberException(java.lang.Class,java.lang.String) -> weirdNumberException
    org.codehaus.jackson.map.JsonMappingException weirdKeyException(java.lang.Class,java.lang.String,java.lang.String) -> weirdKeyException
    org.codehaus.jackson.map.JsonMappingException wrongTokenException(org.codehaus.jackson.JsonParser,org.codehaus.jackson.JsonToken,java.lang.String) -> wrongTokenException
    org.codehaus.jackson.map.JsonMappingException unknownFieldException(java.lang.Object,java.lang.String) -> unknownFieldException
    org.codehaus.jackson.map.JsonMappingException unknownTypeException(org.codehaus.jackson.type.JavaType,java.lang.String) -> unknownTypeException
    java.text.DateFormat getDateFormat() -> getDateFormat
    java.lang.String _calcName(java.lang.Class) -> _calcName
    java.lang.String _valueDesc() -> _valueDesc
    java.lang.String _desc(java.lang.String) -> _desc
org.codehaus.jackson.map.deser.StdDeserializerProvider -> org.codehaus.jackson.map.deser.StdDeserializerProvider:
    java.util.concurrent.ConcurrentHashMap _cachedDeserializers -> _cachedDeserializers
    java.util.HashMap _incompleteDeserializers -> _incompleteDeserializers
    org.codehaus.jackson.map.util.RootNameLookup _rootNames -> _rootNames
    org.codehaus.jackson.map.DeserializerFactory _factory -> _factory
    org.codehaus.jackson.io.SerializedString findExpectedRootName(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType) -> findExpectedRootName
    org.codehaus.jackson.map.JsonDeserializer findValueDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> findValueDeserializer
    org.codehaus.jackson.map.JsonDeserializer findTypedValueDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> findTypedValueDeserializer
    org.codehaus.jackson.map.KeyDeserializer findKeyDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> findKeyDeserializer
    org.codehaus.jackson.map.JsonDeserializer _findCachedDeserializer(org.codehaus.jackson.type.JavaType) -> _findCachedDeserializer
    org.codehaus.jackson.map.JsonDeserializer _createAndCacheValueDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> _createAndCacheValueDeserializer
    org.codehaus.jackson.map.JsonDeserializer _createAndCache2(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> _createAndCache2
    org.codehaus.jackson.map.JsonDeserializer _createDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> _createDeserializer
    void _resolveDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.ResolvableDeserializer) -> _resolveDeserializer
    org.codehaus.jackson.map.JsonDeserializer _handleUnknownValueDeserializer(org.codehaus.jackson.type.JavaType) -> _handleUnknownValueDeserializer
    org.codehaus.jackson.map.KeyDeserializer _handleUnknownKeyDeserializer(org.codehaus.jackson.type.JavaType) -> _handleUnknownKeyDeserializer
org.codehaus.jackson.map.deser.StdDeserializerProvider$WrappedDeserializer -> org.codehaus.jackson.map.deser.StdDeserializerProvider$WrappedDeserializer:
    org.codehaus.jackson.map.TypeDeserializer _typeDeserializer -> _typeDeserializer
    org.codehaus.jackson.map.JsonDeserializer _deserializer -> _deserializer
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer) -> deserializeWithType
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object) -> deserialize
org.codehaus.jackson.map.deser.StdDeserializers -> org.codehaus.jackson.map.deser.StdDeserializers:
    java.util.HashMap _deserializers -> _deserializers
    java.util.HashMap constructAll() -> constructAll
    void add(org.codehaus.jackson.map.deser.std.StdDeserializer) -> add
    void add(org.codehaus.jackson.map.deser.std.StdDeserializer,java.lang.Class) -> add
org.codehaus.jackson.map.deser.ValueInstantiator -> org.codehaus.jackson.map.deser.ValueInstantiator:
    java.lang.String getValueTypeDesc() -> getValueTypeDesc
    boolean canInstantiate() -> canInstantiate
    boolean canCreateFromString() -> canCreateFromString
    boolean canCreateFromInt() -> canCreateFromInt
    boolean canCreateFromLong() -> canCreateFromLong
    boolean canCreateFromDouble() -> canCreateFromDouble
    boolean canCreateFromBoolean() -> canCreateFromBoolean
    boolean canCreateUsingDefault() -> canCreateUsingDefault
    boolean canCreateUsingDelegate() -> canCreateUsingDelegate
    boolean canCreateFromObjectWith() -> canCreateFromObjectWith
    org.codehaus.jackson.map.deser.SettableBeanProperty[] getFromObjectArguments() -> getFromObjectArguments
    org.codehaus.jackson.type.JavaType getDelegateType() -> getDelegateType
    java.lang.Object createUsingDefault() -> createUsingDefault
    java.lang.Object createFromObjectWith(java.lang.Object[]) -> createFromObjectWith
    java.lang.Object createUsingDelegate(java.lang.Object) -> createUsingDelegate
    java.lang.Object createFromString(java.lang.String) -> createFromString
    java.lang.Object createFromInt(int) -> createFromInt
    java.lang.Object createFromLong(long) -> createFromLong
    java.lang.Object createFromDouble(double) -> createFromDouble
    java.lang.Object createFromBoolean(boolean) -> createFromBoolean
    org.codehaus.jackson.map.introspect.AnnotatedWithParams getDefaultCreator() -> getDefaultCreator
    org.codehaus.jackson.map.introspect.AnnotatedWithParams getDelegateCreator() -> getDelegateCreator
org.codehaus.jackson.map.deser.ValueInstantiators -> org.codehaus.jackson.map.deser.ValueInstantiators:
    org.codehaus.jackson.map.deser.ValueInstantiator findValueInstantiator(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.deser.ValueInstantiator) -> findValueInstantiator
org.codehaus.jackson.map.deser.impl.BeanPropertyMap -> org.codehaus.jackson.map.deser.impl.BeanPropertyMap:
    org.codehaus.jackson.map.deser.impl.BeanPropertyMap$Bucket[] _buckets -> _buckets
    int _hashMask -> _hashMask
    int _size -> _size
    void assignIndexes() -> assignIndexes
    int findSize(int) -> findSize
    int size() -> size
    java.util.Iterator allProperties() -> allProperties
    org.codehaus.jackson.map.deser.SettableBeanProperty find(java.lang.String) -> find
    void replace(org.codehaus.jackson.map.deser.SettableBeanProperty) -> replace
    void remove(org.codehaus.jackson.map.deser.SettableBeanProperty) -> remove
    org.codehaus.jackson.map.deser.SettableBeanProperty _findWithEquals(java.lang.String,int) -> _findWithEquals
org.codehaus.jackson.map.deser.impl.BeanPropertyMap$Bucket -> org.codehaus.jackson.map.deser.impl.BeanPropertyMap$Bucket:
    org.codehaus.jackson.map.deser.impl.BeanPropertyMap$Bucket next -> next
    java.lang.String key -> key
    org.codehaus.jackson.map.deser.SettableBeanProperty value -> value
org.codehaus.jackson.map.deser.impl.BeanPropertyMap$IteratorImpl -> org.codehaus.jackson.map.deser.impl.BeanPropertyMap$IteratorImpl:
    org.codehaus.jackson.map.deser.impl.BeanPropertyMap$Bucket[] _buckets -> _buckets
    org.codehaus.jackson.map.deser.impl.BeanPropertyMap$Bucket _currentBucket -> _currentBucket
    int _nextBucketIndex -> _nextBucketIndex
    boolean hasNext() -> hasNext
    org.codehaus.jackson.map.deser.SettableBeanProperty next() -> next
    void remove() -> remove
    java.lang.Object next() -> next
org.codehaus.jackson.map.deser.impl.CreatorCollector -> org.codehaus.jackson.map.deser.impl.CreatorCollector:
    org.codehaus.jackson.map.introspect.BasicBeanDescription _beanDesc -> _beanDesc
    boolean _canFixAccess -> _canFixAccess
    org.codehaus.jackson.map.introspect.AnnotatedConstructor _defaultConstructor -> _defaultConstructor
    org.codehaus.jackson.map.introspect.AnnotatedWithParams _stringCreator -> _stringCreator
    org.codehaus.jackson.map.introspect.AnnotatedWithParams _intCreator -> _intCreator
    org.codehaus.jackson.map.introspect.AnnotatedWithParams _longCreator -> _longCreator
    org.codehaus.jackson.map.introspect.AnnotatedWithParams _doubleCreator -> _doubleCreator
    org.codehaus.jackson.map.introspect.AnnotatedWithParams _booleanCreator -> _booleanCreator
    org.codehaus.jackson.map.introspect.AnnotatedWithParams _delegateCreator -> _delegateCreator
    org.codehaus.jackson.map.introspect.AnnotatedWithParams _propertyBasedCreator -> _propertyBasedCreator
    org.codehaus.jackson.map.deser.impl.CreatorProperty[] _propertyBasedArgs -> _propertyBasedArgs
    org.codehaus.jackson.map.deser.ValueInstantiator constructValueInstantiator(org.codehaus.jackson.map.DeserializationConfig) -> constructValueInstantiator
    void setDefaultConstructor(org.codehaus.jackson.map.introspect.AnnotatedConstructor) -> setDefaultConstructor
    void addStringCreator(org.codehaus.jackson.map.introspect.AnnotatedWithParams) -> addStringCreator
    void addIntCreator(org.codehaus.jackson.map.introspect.AnnotatedWithParams) -> addIntCreator
    void addLongCreator(org.codehaus.jackson.map.introspect.AnnotatedWithParams) -> addLongCreator
    void addDoubleCreator(org.codehaus.jackson.map.introspect.AnnotatedWithParams) -> addDoubleCreator
    void addBooleanCreator(org.codehaus.jackson.map.introspect.AnnotatedWithParams) -> addBooleanCreator
    void addDelegatingCreator(org.codehaus.jackson.map.introspect.AnnotatedWithParams) -> addDelegatingCreator
    void addPropertyCreator(org.codehaus.jackson.map.introspect.AnnotatedWithParams,org.codehaus.jackson.map.deser.impl.CreatorProperty[]) -> addPropertyCreator
    org.codehaus.jackson.map.introspect.AnnotatedWithParams verifyNonDup(org.codehaus.jackson.map.introspect.AnnotatedWithParams,org.codehaus.jackson.map.introspect.AnnotatedWithParams,java.lang.String) -> verifyNonDup
org.codehaus.jackson.map.deser.impl.CreatorProperty -> org.codehaus.jackson.map.deser.impl.CreatorProperty:
    org.codehaus.jackson.map.introspect.AnnotatedParameter _annotated -> _annotated
    java.lang.Object _injectableValueId -> _injectableValueId
    org.codehaus.jackson.map.deser.impl.CreatorProperty withValueDeserializer(org.codehaus.jackson.map.JsonDeserializer) -> withValueDeserializer
    org.codehaus.jackson.map.introspect.AnnotatedMember getMember() -> getMember
    void deserializeAndSet(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object) -> deserializeAndSet
    void set(java.lang.Object,java.lang.Object) -> set
    java.lang.Object getInjectableValueId() -> getInjectableValueId
    org.codehaus.jackson.map.deser.SettableBeanProperty withValueDeserializer(org.codehaus.jackson.map.JsonDeserializer) -> withValueDeserializer
org.codehaus.jackson.map.deser.impl.ExternalTypeHandler -> org.codehaus.jackson.map.deser.impl.ExternalTypeHandler:
    org.codehaus.jackson.map.deser.impl.ExternalTypeHandler$ExtTypedProperty[] _properties -> _properties
    java.util.HashMap _nameToPropertyIndex -> _nameToPropertyIndex
    java.lang.String[] _typeIds -> _typeIds
    org.codehaus.jackson.util.TokenBuffer[] _tokens -> _tokens
    org.codehaus.jackson.map.deser.impl.ExternalTypeHandler start() -> start
    boolean handleTypePropertyValue(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.String,java.lang.Object) -> handleTypePropertyValue
    boolean handleToken(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.String,java.lang.Object) -> handleToken
    java.lang.Object complete(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object) -> complete
    void _deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object,int) -> _deserialize
org.codehaus.jackson.map.deser.impl.ExternalTypeHandler$Builder -> org.codehaus.jackson.map.deser.impl.ExternalTypeHandler$Builder:
    java.util.ArrayList _properties -> _properties
    java.util.HashMap _nameToPropertyIndex -> _nameToPropertyIndex
    void addExternal(org.codehaus.jackson.map.deser.SettableBeanProperty,java.lang.String) -> addExternal
    org.codehaus.jackson.map.deser.impl.ExternalTypeHandler build() -> build
org.codehaus.jackson.map.deser.impl.ExternalTypeHandler$ExtTypedProperty -> org.codehaus.jackson.map.deser.impl.ExternalTypeHandler$ExtTypedProperty:
    org.codehaus.jackson.map.deser.SettableBeanProperty _property -> _property
    java.lang.String _typePropertyName -> _typePropertyName
    boolean hasTypePropertyName(java.lang.String) -> hasTypePropertyName
    java.lang.String getTypePropertyName() -> getTypePropertyName
    org.codehaus.jackson.map.deser.SettableBeanProperty getProperty() -> getProperty
org.codehaus.jackson.map.deser.impl.PropertyBasedCreator -> org.codehaus.jackson.map.deser.impl.PropertyBasedCreator:
    org.codehaus.jackson.map.deser.ValueInstantiator _valueInstantiator -> _valueInstantiator
    java.util.HashMap _properties -> _properties
    int _propertyCount -> _propertyCount
    java.lang.Object[] _defaultValues -> _defaultValues
    org.codehaus.jackson.map.deser.SettableBeanProperty[] _propertiesWithInjectables -> _propertiesWithInjectables
    java.util.Collection getCreatorProperties() -> getCreatorProperties
    org.codehaus.jackson.map.deser.SettableBeanProperty findCreatorProperty(java.lang.String) -> findCreatorProperty
    void assignDeserializer(org.codehaus.jackson.map.deser.SettableBeanProperty,org.codehaus.jackson.map.JsonDeserializer) -> assignDeserializer
    org.codehaus.jackson.map.deser.impl.PropertyValueBuffer startBuilding(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> startBuilding
    java.lang.Object build(org.codehaus.jackson.map.deser.impl.PropertyValueBuffer) -> build
org.codehaus.jackson.map.deser.impl.PropertyValue -> org.codehaus.jackson.map.deser.impl.PropertyValue:
    org.codehaus.jackson.map.deser.impl.PropertyValue next -> next
    java.lang.Object value -> value
    void assign(java.lang.Object) -> assign
org.codehaus.jackson.map.deser.impl.PropertyValue$Any -> org.codehaus.jackson.map.deser.impl.PropertyValue$Any:
    org.codehaus.jackson.map.deser.SettableAnyProperty _property -> _property
    java.lang.String _propertyName -> _propertyName
    void assign(java.lang.Object) -> assign
org.codehaus.jackson.map.deser.impl.PropertyValue$Map -> org.codehaus.jackson.map.deser.impl.PropertyValue$Map:
    java.lang.Object _key -> _key
    void assign(java.lang.Object) -> assign
org.codehaus.jackson.map.deser.impl.PropertyValue$Regular -> org.codehaus.jackson.map.deser.impl.PropertyValue$Regular:
    org.codehaus.jackson.map.deser.SettableBeanProperty _property -> _property
    void assign(java.lang.Object) -> assign
org.codehaus.jackson.map.deser.impl.PropertyValueBuffer -> org.codehaus.jackson.map.deser.impl.PropertyValueBuffer:
    org.codehaus.jackson.JsonParser _parser -> _parser
    org.codehaus.jackson.map.DeserializationContext _context -> _context
    java.lang.Object[] _creatorParameters -> _creatorParameters
    int _paramsNeeded -> _paramsNeeded
    org.codehaus.jackson.map.deser.impl.PropertyValue _buffered -> _buffered
    void inject(org.codehaus.jackson.map.deser.SettableBeanProperty[]) -> inject
    java.lang.Object[] getParameters(java.lang.Object[]) -> getParameters
    org.codehaus.jackson.map.deser.impl.PropertyValue buffered() -> buffered
    boolean assignParameter(int,java.lang.Object) -> assignParameter
    void bufferProperty(org.codehaus.jackson.map.deser.SettableBeanProperty,java.lang.Object) -> bufferProperty
    void bufferAnyProperty(org.codehaus.jackson.map.deser.SettableAnyProperty,java.lang.String,java.lang.Object) -> bufferAnyProperty
    void bufferMapProperty(java.lang.Object,java.lang.Object) -> bufferMapProperty
org.codehaus.jackson.map.deser.impl.UnwrappedPropertyHandler -> org.codehaus.jackson.map.deser.impl.UnwrappedPropertyHandler:
    java.util.ArrayList _properties -> _properties
    void addProperty(org.codehaus.jackson.map.deser.SettableBeanProperty) -> addProperty
    java.lang.Object processUnwrapped(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object,org.codehaus.jackson.util.TokenBuffer) -> processUnwrapped
org.codehaus.jackson.map.deser.impl.ValueInjector -> org.codehaus.jackson.map.deser.impl.ValueInjector:
    java.lang.Object _valueId -> _valueId
    java.lang.Object findValue(org.codehaus.jackson.map.DeserializationContext,java.lang.Object) -> findValue
    void inject(org.codehaus.jackson.map.DeserializationContext,java.lang.Object) -> inject
org.codehaus.jackson.map.deser.std.AtomicBooleanDeserializer -> org.codehaus.jackson.map.deser.std.AtomicBooleanDeserializer:
    java.util.concurrent.atomic.AtomicBoolean deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.AtomicReferenceDeserializer -> org.codehaus.jackson.map.deser.std.AtomicReferenceDeserializer:
    org.codehaus.jackson.type.JavaType _referencedType -> _referencedType
    org.codehaus.jackson.map.BeanProperty _property -> _property
    org.codehaus.jackson.map.JsonDeserializer _valueDeserializer -> _valueDeserializer
    java.util.concurrent.atomic.AtomicReference deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    void resolve(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider) -> resolve
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.BaseNodeDeserializer -> org.codehaus.jackson.map.deser.std.BaseNodeDeserializer:
    java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer) -> deserializeWithType
    void _handleDuplicateField(java.lang.String,org.codehaus.jackson.node.ObjectNode,org.codehaus.jackson.JsonNode,org.codehaus.jackson.JsonNode) -> _handleDuplicateField
    org.codehaus.jackson.node.ObjectNode deserializeObject(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.node.JsonNodeFactory) -> deserializeObject
    org.codehaus.jackson.node.ArrayNode deserializeArray(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.node.JsonNodeFactory) -> deserializeArray
    org.codehaus.jackson.JsonNode deserializeAny(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.node.JsonNodeFactory) -> deserializeAny
org.codehaus.jackson.map.deser.std.BaseNodeDeserializer$1 -> org.codehaus.jackson.map.deser.std.BaseNodeDeserializer$1:
    int[] $SwitchMap$org$codehaus$jackson$JsonToken -> $SwitchMap$org$codehaus$jackson$JsonToken
org.codehaus.jackson.map.deser.std.CalendarDeserializer -> org.codehaus.jackson.map.deser.std.CalendarDeserializer:
    java.lang.Class _calendarClass -> _calendarClass
    java.util.Calendar deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.ClassDeserializer -> org.codehaus.jackson.map.deser.std.ClassDeserializer:
    java.lang.Class deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.CollectionDeserializer -> org.codehaus.jackson.map.deser.std.CollectionDeserializer:
    org.codehaus.jackson.type.JavaType _collectionType -> _collectionType
    org.codehaus.jackson.map.JsonDeserializer _valueDeserializer -> _valueDeserializer
    org.codehaus.jackson.map.TypeDeserializer _valueTypeDeserializer -> _valueTypeDeserializer
    org.codehaus.jackson.map.deser.ValueInstantiator _valueInstantiator -> _valueInstantiator
    org.codehaus.jackson.map.JsonDeserializer _delegateDeserializer -> _delegateDeserializer
    void resolve(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider) -> resolve
    org.codehaus.jackson.map.JsonDeserializer getContentDeserializer() -> getContentDeserializer
    java.util.Collection deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.util.Collection deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.util.Collection) -> deserialize
    java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer) -> deserializeWithType
    java.util.Collection handleNonArray(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.util.Collection) -> handleNonArray
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object) -> deserialize
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.ContainerDeserializerBase -> org.codehaus.jackson.map.deser.std.ContainerDeserializerBase:
    org.codehaus.jackson.map.JsonDeserializer getContentDeserializer() -> getContentDeserializer
org.codehaus.jackson.map.deser.std.DateDeserializer -> org.codehaus.jackson.map.deser.std.DateDeserializer:
    java.util.Date deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.EnumDeserializer -> org.codehaus.jackson.map.deser.std.EnumDeserializer:
    org.codehaus.jackson.map.util.EnumResolver _resolver -> _resolver
    org.codehaus.jackson.map.JsonDeserializer deserializerForCreator(org.codehaus.jackson.map.DeserializationConfig,java.lang.Class,org.codehaus.jackson.map.introspect.AnnotatedMethod) -> deserializerForCreator
    java.lang.Enum deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.EnumDeserializer$FactoryBasedDeserializer -> org.codehaus.jackson.map.deser.std.EnumDeserializer$FactoryBasedDeserializer:
    java.lang.Class _enumClass -> _enumClass
    java.lang.Class _inputType -> _inputType
    java.lang.reflect.Method _factory -> _factory
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.EnumMapDeserializer -> org.codehaus.jackson.map.deser.std.EnumMapDeserializer:
    java.lang.Class _enumClass -> _enumClass
    org.codehaus.jackson.map.JsonDeserializer _keyDeserializer -> _keyDeserializer
    org.codehaus.jackson.map.JsonDeserializer _valueDeserializer -> _valueDeserializer
    java.util.EnumMap deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer) -> deserializeWithType
    java.util.EnumMap constructMap() -> constructMap
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.EnumSetDeserializer -> org.codehaus.jackson.map.deser.std.EnumSetDeserializer:
    java.lang.Class _enumClass -> _enumClass
    org.codehaus.jackson.map.JsonDeserializer _enumDeserializer -> _enumDeserializer
    java.util.EnumSet deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer) -> deserializeWithType
    java.util.EnumSet constructSet() -> constructSet
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.FromStringDeserializer -> org.codehaus.jackson.map.deser.std.FromStringDeserializer:
    java.lang.Iterable all() -> all
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _deserialize
    java.lang.Object _deserializeEmbedded(java.lang.Object,org.codehaus.jackson.map.DeserializationContext) -> _deserializeEmbedded
org.codehaus.jackson.map.deser.std.FromStringDeserializer$CharsetDeserializer -> org.codehaus.jackson.map.deser.std.FromStringDeserializer$CharsetDeserializer:
    java.nio.charset.Charset _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _deserialize
    java.lang.Object _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _deserialize
org.codehaus.jackson.map.deser.std.FromStringDeserializer$CurrencyDeserializer -> org.codehaus.jackson.map.deser.std.FromStringDeserializer$CurrencyDeserializer:
    java.util.Currency _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _deserialize
    java.lang.Object _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _deserialize
org.codehaus.jackson.map.deser.std.FromStringDeserializer$InetAddressDeserializer -> org.codehaus.jackson.map.deser.std.FromStringDeserializer$InetAddressDeserializer:
    java.net.InetAddress _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _deserialize
    java.lang.Object _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _deserialize
org.codehaus.jackson.map.deser.std.FromStringDeserializer$LocaleDeserializer -> org.codehaus.jackson.map.deser.std.FromStringDeserializer$LocaleDeserializer:
    java.util.Locale _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _deserialize
    java.lang.Object _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _deserialize
org.codehaus.jackson.map.deser.std.FromStringDeserializer$PatternDeserializer -> org.codehaus.jackson.map.deser.std.FromStringDeserializer$PatternDeserializer:
    java.util.regex.Pattern _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _deserialize
    java.lang.Object _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _deserialize
org.codehaus.jackson.map.deser.std.FromStringDeserializer$TimeZoneDeserializer -> org.codehaus.jackson.map.deser.std.FromStringDeserializer$TimeZoneDeserializer:
    java.util.TimeZone _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _deserialize
    java.lang.Object _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _deserialize
org.codehaus.jackson.map.deser.std.FromStringDeserializer$URIDeserializer -> org.codehaus.jackson.map.deser.std.FromStringDeserializer$URIDeserializer:
    java.net.URI _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _deserialize
    java.lang.Object _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _deserialize
org.codehaus.jackson.map.deser.std.FromStringDeserializer$URLDeserializer -> org.codehaus.jackson.map.deser.std.FromStringDeserializer$URLDeserializer:
    java.net.URL _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _deserialize
    java.lang.Object _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _deserialize
org.codehaus.jackson.map.deser.std.FromStringDeserializer$UUIDDeserializer -> org.codehaus.jackson.map.deser.std.FromStringDeserializer$UUIDDeserializer:
    java.util.UUID _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _deserialize
    java.util.UUID _deserializeEmbedded(java.lang.Object,org.codehaus.jackson.map.DeserializationContext) -> _deserializeEmbedded
    java.lang.Object _deserializeEmbedded(java.lang.Object,org.codehaus.jackson.map.DeserializationContext) -> _deserializeEmbedded
    java.lang.Object _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _deserialize
org.codehaus.jackson.map.deser.std.JavaTypeDeserializer -> org.codehaus.jackson.map.deser.std.JavaTypeDeserializer:
    org.codehaus.jackson.type.JavaType deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.JsonNodeDeserializer -> org.codehaus.jackson.map.deser.std.JsonNodeDeserializer:
    org.codehaus.jackson.map.deser.std.JsonNodeDeserializer instance -> instance
    org.codehaus.jackson.map.JsonDeserializer getDeserializer(java.lang.Class) -> getDeserializer
    org.codehaus.jackson.JsonNode deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer) -> deserializeWithType
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.JsonNodeDeserializer$1 -> org.codehaus.jackson.map.deser.std.JsonNodeDeserializer$1:
    int[] $SwitchMap$org$codehaus$jackson$JsonToken -> $SwitchMap$org$codehaus$jackson$JsonToken
org.codehaus.jackson.map.deser.std.JsonNodeDeserializer$ArrayDeserializer -> org.codehaus.jackson.map.deser.std.JsonNodeDeserializer$ArrayDeserializer:
    org.codehaus.jackson.map.deser.std.JsonNodeDeserializer$ArrayDeserializer _instance -> _instance
    org.codehaus.jackson.map.deser.std.JsonNodeDeserializer$ArrayDeserializer getInstance() -> getInstance
    org.codehaus.jackson.node.ArrayNode deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.JsonNodeDeserializer$ObjectDeserializer -> org.codehaus.jackson.map.deser.std.JsonNodeDeserializer$ObjectDeserializer:
    org.codehaus.jackson.map.deser.std.JsonNodeDeserializer$ObjectDeserializer _instance -> _instance
    org.codehaus.jackson.map.deser.std.JsonNodeDeserializer$ObjectDeserializer getInstance() -> getInstance
    org.codehaus.jackson.node.ObjectNode deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.MapDeserializer -> org.codehaus.jackson.map.deser.std.MapDeserializer:
    org.codehaus.jackson.type.JavaType _mapType -> _mapType
    org.codehaus.jackson.map.KeyDeserializer _keyDeserializer -> _keyDeserializer
    org.codehaus.jackson.map.JsonDeserializer _valueDeserializer -> _valueDeserializer
    org.codehaus.jackson.map.TypeDeserializer _valueTypeDeserializer -> _valueTypeDeserializer
    org.codehaus.jackson.map.deser.ValueInstantiator _valueInstantiator -> _valueInstantiator
    boolean _hasDefaultCreator -> _hasDefaultCreator
    org.codehaus.jackson.map.deser.impl.PropertyBasedCreator _propertyBasedCreator -> _propertyBasedCreator
    org.codehaus.jackson.map.JsonDeserializer _delegateDeserializer -> _delegateDeserializer
    java.util.HashSet _ignorableProperties -> _ignorableProperties
    void setIgnorableProperties(java.lang.String[]) -> setIgnorableProperties
    void resolve(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider) -> resolve
    org.codehaus.jackson.map.JsonDeserializer getContentDeserializer() -> getContentDeserializer
    java.util.Map deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.util.Map deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.util.Map) -> deserialize
    java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer) -> deserializeWithType
    java.lang.Class getMapClass() -> getMapClass
    void _readAndBind(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.util.Map) -> _readAndBind
    java.util.Map _deserializeUsingCreator(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> _deserializeUsingCreator
    void wrapAndThrow(java.lang.Throwable,java.lang.Object) -> wrapAndThrow
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object) -> deserialize
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.ObjectArrayDeserializer -> org.codehaus.jackson.map.deser.std.ObjectArrayDeserializer:
    org.codehaus.jackson.type.JavaType _arrayType -> _arrayType
    boolean _untyped -> _untyped
    java.lang.Class _elementClass -> _elementClass
    org.codehaus.jackson.map.JsonDeserializer _elementDeserializer -> _elementDeserializer
    org.codehaus.jackson.map.TypeDeserializer _elementTypeDeserializer -> _elementTypeDeserializer
    org.codehaus.jackson.map.JsonDeserializer getContentDeserializer() -> getContentDeserializer
    java.lang.Object[] deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object[] deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer) -> deserializeWithType
    java.lang.Byte[] deserializeFromBase64(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserializeFromBase64
    java.lang.Object[] handleNonArray(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> handleNonArray
    java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer) -> deserializeWithType
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers -> org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers:
    java.util.HashMap _allDeserializers -> _allDeserializers
    org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers instance -> instance
    java.util.HashMap getAll() -> getAll
    void add(java.lang.Class,org.codehaus.jackson.map.JsonDeserializer) -> add
org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$Base -> org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$Base:
    java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer) -> deserializeWithType
org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$BooleanDeser -> org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$BooleanDeser:
    boolean[] deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    boolean[] handleNonArray(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> handleNonArray
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$ByteDeser -> org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$ByteDeser:
    byte[] deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    byte[] handleNonArray(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> handleNonArray
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$CharDeser -> org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$CharDeser:
    char[] deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$DoubleDeser -> org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$DoubleDeser:
    double[] deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    double[] handleNonArray(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> handleNonArray
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$FloatDeser -> org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$FloatDeser:
    float[] deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    float[] handleNonArray(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> handleNonArray
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$IntDeser -> org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$IntDeser:
    int[] deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    int[] handleNonArray(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> handleNonArray
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$LongDeser -> org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$LongDeser:
    long[] deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    long[] handleNonArray(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> handleNonArray
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$ShortDeser -> org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$ShortDeser:
    short[] deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    short[] handleNonArray(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> handleNonArray
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$StringDeser -> org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$StringDeser:
    java.lang.String[] deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.String[] handleNonArray(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> handleNonArray
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.StdDeserializer -> org.codehaus.jackson.map.deser.std.StdDeserializer:
    java.lang.Class _valueClass -> _valueClass
    java.lang.Class getValueClass() -> getValueClass
    boolean isDefaultSerializer(org.codehaus.jackson.map.JsonDeserializer) -> isDefaultSerializer
    java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer) -> deserializeWithType
    boolean _parseBooleanPrimitive(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> _parseBooleanPrimitive
    java.lang.Boolean _parseBoolean(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> _parseBoolean
    boolean _parseBooleanFromNumber(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> _parseBooleanFromNumber
    java.lang.Byte _parseByte(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> _parseByte
    java.lang.Short _parseShort(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> _parseShort
    short _parseShortPrimitive(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> _parseShortPrimitive
    int _parseIntPrimitive(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> _parseIntPrimitive
    java.lang.Integer _parseInteger(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> _parseInteger
    java.lang.Long _parseLong(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> _parseLong
    long _parseLongPrimitive(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> _parseLongPrimitive
    java.lang.Float _parseFloat(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> _parseFloat
    float _parseFloatPrimitive(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> _parseFloatPrimitive
    java.lang.Double _parseDouble(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> _parseDouble
    double _parseDoublePrimitive(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> _parseDoublePrimitive
    java.util.Date _parseDate(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> _parseDate
    double parseDouble(java.lang.String) -> parseDouble
    org.codehaus.jackson.map.JsonDeserializer findDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> findDeserializer
    void handleUnknownProperty(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object,java.lang.String) -> handleUnknownProperty
    void reportUnknownProperty(org.codehaus.jackson.map.DeserializationContext,java.lang.Object,java.lang.String) -> reportUnknownProperty
org.codehaus.jackson.map.deser.std.StdDeserializer$1 -> org.codehaus.jackson.map.deser.std.StdDeserializer$1:
    int[] $SwitchMap$org$codehaus$jackson$JsonToken -> $SwitchMap$org$codehaus$jackson$JsonToken
    int[] $SwitchMap$org$codehaus$jackson$JsonParser$NumberType -> $SwitchMap$org$codehaus$jackson$JsonParser$NumberType
org.codehaus.jackson.map.deser.std.StdDeserializer$BigDecimalDeserializer -> org.codehaus.jackson.map.deser.std.StdDeserializer$BigDecimalDeserializer:
    java.math.BigDecimal deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.StdDeserializer$BigIntegerDeserializer -> org.codehaus.jackson.map.deser.std.StdDeserializer$BigIntegerDeserializer:
    java.math.BigInteger deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.StdDeserializer$BooleanDeserializer -> org.codehaus.jackson.map.deser.std.StdDeserializer$BooleanDeserializer:
    java.lang.Boolean deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Boolean deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer) -> deserializeWithType
    java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer) -> deserializeWithType
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.StdDeserializer$ByteDeserializer -> org.codehaus.jackson.map.deser.std.StdDeserializer$ByteDeserializer:
    java.lang.Byte deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.StdDeserializer$CharacterDeserializer -> org.codehaus.jackson.map.deser.std.StdDeserializer$CharacterDeserializer:
    java.lang.Character deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.StdDeserializer$DoubleDeserializer -> org.codehaus.jackson.map.deser.std.StdDeserializer$DoubleDeserializer:
    java.lang.Double deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Double deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer) -> deserializeWithType
    java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer) -> deserializeWithType
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.StdDeserializer$FloatDeserializer -> org.codehaus.jackson.map.deser.std.StdDeserializer$FloatDeserializer:
    java.lang.Float deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.StdDeserializer$IntegerDeserializer -> org.codehaus.jackson.map.deser.std.StdDeserializer$IntegerDeserializer:
    java.lang.Integer deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Integer deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer) -> deserializeWithType
    java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer) -> deserializeWithType
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.StdDeserializer$LongDeserializer -> org.codehaus.jackson.map.deser.std.StdDeserializer$LongDeserializer:
    java.lang.Long deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.StdDeserializer$NumberDeserializer -> org.codehaus.jackson.map.deser.std.StdDeserializer$NumberDeserializer:
    java.lang.Number deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer) -> deserializeWithType
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.StdDeserializer$PrimitiveOrWrapperDeserializer -> org.codehaus.jackson.map.deser.std.StdDeserializer$PrimitiveOrWrapperDeserializer:
    java.lang.Object _nullValue -> _nullValue
    java.lang.Object getNullValue() -> getNullValue
org.codehaus.jackson.map.deser.std.StdDeserializer$ShortDeserializer -> org.codehaus.jackson.map.deser.std.StdDeserializer$ShortDeserializer:
    java.lang.Short deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.StdDeserializer$SqlDateDeserializer -> org.codehaus.jackson.map.deser.std.StdDeserializer$SqlDateDeserializer:
    java.sql.Date deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.StdDeserializer$StackTraceElementDeserializer -> org.codehaus.jackson.map.deser.std.StdDeserializer$StackTraceElementDeserializer:
    java.lang.StackTraceElement deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.StdKeyDeserializer -> org.codehaus.jackson.map.deser.std.StdKeyDeserializer:
    java.lang.Class _keyClass -> _keyClass
    java.lang.Object deserializeKey(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> deserializeKey
    java.lang.Class getKeyClass() -> getKeyClass
    java.lang.Object _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _parse
    int _parseInt(java.lang.String) -> _parseInt
    long _parseLong(java.lang.String) -> _parseLong
    double _parseDouble(java.lang.String) -> _parseDouble
org.codehaus.jackson.map.deser.std.StdKeyDeserializer$BoolKD -> org.codehaus.jackson.map.deser.std.StdKeyDeserializer$BoolKD:
    java.lang.Boolean _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _parse
    java.lang.Object _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _parse
org.codehaus.jackson.map.deser.std.StdKeyDeserializer$ByteKD -> org.codehaus.jackson.map.deser.std.StdKeyDeserializer$ByteKD:
    java.lang.Byte _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _parse
    java.lang.Object _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _parse
org.codehaus.jackson.map.deser.std.StdKeyDeserializer$CalendarKD -> org.codehaus.jackson.map.deser.std.StdKeyDeserializer$CalendarKD:
    java.util.Calendar _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _parse
    java.lang.Object _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _parse
org.codehaus.jackson.map.deser.std.StdKeyDeserializer$CharKD -> org.codehaus.jackson.map.deser.std.StdKeyDeserializer$CharKD:
    java.lang.Character _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _parse
    java.lang.Object _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _parse
org.codehaus.jackson.map.deser.std.StdKeyDeserializer$DateKD -> org.codehaus.jackson.map.deser.std.StdKeyDeserializer$DateKD:
    java.util.Date _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _parse
    java.lang.Object _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _parse
org.codehaus.jackson.map.deser.std.StdKeyDeserializer$DoubleKD -> org.codehaus.jackson.map.deser.std.StdKeyDeserializer$DoubleKD:
    java.lang.Double _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _parse
    java.lang.Object _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _parse
org.codehaus.jackson.map.deser.std.StdKeyDeserializer$EnumKD -> org.codehaus.jackson.map.deser.std.StdKeyDeserializer$EnumKD:
    org.codehaus.jackson.map.util.EnumResolver _resolver -> _resolver
    org.codehaus.jackson.map.introspect.AnnotatedMethod _factory -> _factory
    java.lang.Object _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _parse
org.codehaus.jackson.map.deser.std.StdKeyDeserializer$FloatKD -> org.codehaus.jackson.map.deser.std.StdKeyDeserializer$FloatKD:
    java.lang.Float _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _parse
    java.lang.Object _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _parse
org.codehaus.jackson.map.deser.std.StdKeyDeserializer$IntKD -> org.codehaus.jackson.map.deser.std.StdKeyDeserializer$IntKD:
    java.lang.Integer _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _parse
    java.lang.Object _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _parse
org.codehaus.jackson.map.deser.std.StdKeyDeserializer$LongKD -> org.codehaus.jackson.map.deser.std.StdKeyDeserializer$LongKD:
    java.lang.Long _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _parse
    java.lang.Object _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _parse
org.codehaus.jackson.map.deser.std.StdKeyDeserializer$ShortKD -> org.codehaus.jackson.map.deser.std.StdKeyDeserializer$ShortKD:
    java.lang.Short _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _parse
    java.lang.Object _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _parse
org.codehaus.jackson.map.deser.std.StdKeyDeserializer$StringCtorKeyDeserializer -> org.codehaus.jackson.map.deser.std.StdKeyDeserializer$StringCtorKeyDeserializer:
    java.lang.reflect.Constructor _ctor -> _ctor
    java.lang.Object _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _parse
org.codehaus.jackson.map.deser.std.StdKeyDeserializer$StringFactoryKeyDeserializer -> org.codehaus.jackson.map.deser.std.StdKeyDeserializer$StringFactoryKeyDeserializer:
    java.lang.reflect.Method _factoryMethod -> _factoryMethod
    java.lang.Object _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _parse
org.codehaus.jackson.map.deser.std.StdKeyDeserializer$StringKD -> org.codehaus.jackson.map.deser.std.StdKeyDeserializer$StringKD:
    org.codehaus.jackson.map.deser.std.StdKeyDeserializer$StringKD sString -> sString
    org.codehaus.jackson.map.deser.std.StdKeyDeserializer$StringKD sObject -> sObject
    org.codehaus.jackson.map.deser.std.StdKeyDeserializer$StringKD forType(java.lang.Class) -> forType
    java.lang.String _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _parse
    java.lang.Object _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _parse
org.codehaus.jackson.map.deser.std.StdKeyDeserializer$UuidKD -> org.codehaus.jackson.map.deser.std.StdKeyDeserializer$UuidKD:
    java.util.UUID _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _parse
    java.lang.Object _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _parse
org.codehaus.jackson.map.deser.std.StdKeyDeserializers -> org.codehaus.jackson.map.deser.std.StdKeyDeserializers:
    java.util.HashMap _keyDeserializers -> _keyDeserializers
    void add(org.codehaus.jackson.map.deser.std.StdKeyDeserializer) -> add
    java.util.HashMap constructAll() -> constructAll
    org.codehaus.jackson.map.KeyDeserializer constructStringKeyDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType) -> constructStringKeyDeserializer
    org.codehaus.jackson.map.KeyDeserializer constructEnumKeyDeserializer(org.codehaus.jackson.map.util.EnumResolver) -> constructEnumKeyDeserializer
    org.codehaus.jackson.map.KeyDeserializer constructEnumKeyDeserializer(org.codehaus.jackson.map.util.EnumResolver,org.codehaus.jackson.map.introspect.AnnotatedMethod) -> constructEnumKeyDeserializer
    org.codehaus.jackson.map.KeyDeserializer findStringBasedKeyDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType) -> findStringBasedKeyDeserializer
org.codehaus.jackson.map.deser.std.StdScalarDeserializer -> org.codehaus.jackson.map.deser.std.StdScalarDeserializer:
    java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer) -> deserializeWithType
org.codehaus.jackson.map.deser.std.StdValueInstantiator -> org.codehaus.jackson.map.deser.std.StdValueInstantiator:
    java.lang.String _valueTypeDesc -> _valueTypeDesc
    boolean _cfgEmptyStringsAsObjects -> _cfgEmptyStringsAsObjects
    org.codehaus.jackson.map.introspect.AnnotatedWithParams _defaultCreator -> _defaultCreator
    org.codehaus.jackson.map.deser.impl.CreatorProperty[] _constructorArguments -> _constructorArguments
    org.codehaus.jackson.map.introspect.AnnotatedWithParams _withArgsCreator -> _withArgsCreator
    org.codehaus.jackson.type.JavaType _delegateType -> _delegateType
    org.codehaus.jackson.map.introspect.AnnotatedWithParams _delegateCreator -> _delegateCreator
    org.codehaus.jackson.map.introspect.AnnotatedWithParams _fromStringCreator -> _fromStringCreator
    org.codehaus.jackson.map.introspect.AnnotatedWithParams _fromIntCreator -> _fromIntCreator
    org.codehaus.jackson.map.introspect.AnnotatedWithParams _fromLongCreator -> _fromLongCreator
    org.codehaus.jackson.map.introspect.AnnotatedWithParams _fromDoubleCreator -> _fromDoubleCreator
    org.codehaus.jackson.map.introspect.AnnotatedWithParams _fromBooleanCreator -> _fromBooleanCreator
    void configureFromObjectSettings(org.codehaus.jackson.map.introspect.AnnotatedWithParams,org.codehaus.jackson.map.introspect.AnnotatedWithParams,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.introspect.AnnotatedWithParams,org.codehaus.jackson.map.deser.impl.CreatorProperty[]) -> configureFromObjectSettings
    void configureFromStringCreator(org.codehaus.jackson.map.introspect.AnnotatedWithParams) -> configureFromStringCreator
    void configureFromIntCreator(org.codehaus.jackson.map.introspect.AnnotatedWithParams) -> configureFromIntCreator
    void configureFromLongCreator(org.codehaus.jackson.map.introspect.AnnotatedWithParams) -> configureFromLongCreator
    void configureFromDoubleCreator(org.codehaus.jackson.map.introspect.AnnotatedWithParams) -> configureFromDoubleCreator
    void configureFromBooleanCreator(org.codehaus.jackson.map.introspect.AnnotatedWithParams) -> configureFromBooleanCreator
    java.lang.String getValueTypeDesc() -> getValueTypeDesc
    boolean canCreateFromString() -> canCreateFromString
    boolean canCreateFromInt() -> canCreateFromInt
    boolean canCreateFromLong() -> canCreateFromLong
    boolean canCreateFromDouble() -> canCreateFromDouble
    boolean canCreateFromBoolean() -> canCreateFromBoolean
    boolean canCreateUsingDefault() -> canCreateUsingDefault
    boolean canCreateFromObjectWith() -> canCreateFromObjectWith
    org.codehaus.jackson.type.JavaType getDelegateType() -> getDelegateType
    org.codehaus.jackson.map.deser.SettableBeanProperty[] getFromObjectArguments() -> getFromObjectArguments
    java.lang.Object createUsingDefault() -> createUsingDefault
    java.lang.Object createFromObjectWith(java.lang.Object[]) -> createFromObjectWith
    java.lang.Object createUsingDelegate(java.lang.Object) -> createUsingDelegate
    java.lang.Object createFromString(java.lang.String) -> createFromString
    java.lang.Object createFromInt(int) -> createFromInt
    java.lang.Object createFromLong(long) -> createFromLong
    java.lang.Object createFromDouble(double) -> createFromDouble
    java.lang.Object createFromBoolean(boolean) -> createFromBoolean
    org.codehaus.jackson.map.introspect.AnnotatedWithParams getDelegateCreator() -> getDelegateCreator
    org.codehaus.jackson.map.introspect.AnnotatedWithParams getDefaultCreator() -> getDefaultCreator
    java.lang.Object _createFromStringFallbacks(java.lang.String) -> _createFromStringFallbacks
    org.codehaus.jackson.map.JsonMappingException wrapException(java.lang.Throwable) -> wrapException
org.codehaus.jackson.map.deser.std.StringCollectionDeserializer -> org.codehaus.jackson.map.deser.std.StringCollectionDeserializer:
    org.codehaus.jackson.type.JavaType _collectionType -> _collectionType
    org.codehaus.jackson.map.JsonDeserializer _valueDeserializer -> _valueDeserializer
    boolean _isDefaultDeserializer -> _isDefaultDeserializer
    org.codehaus.jackson.map.deser.ValueInstantiator _valueInstantiator -> _valueInstantiator
    org.codehaus.jackson.map.JsonDeserializer _delegateDeserializer -> _delegateDeserializer
    void resolve(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider) -> resolve
    org.codehaus.jackson.map.JsonDeserializer getContentDeserializer() -> getContentDeserializer
    java.util.Collection deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.util.Collection deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.util.Collection) -> deserialize
    java.util.Collection deserializeUsingCustom(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.util.Collection) -> deserializeUsingCustom
    java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer) -> deserializeWithType
    java.util.Collection handleNonArray(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.util.Collection) -> handleNonArray
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object) -> deserialize
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.StringDeserializer -> org.codehaus.jackson.map.deser.std.StringDeserializer:
    java.lang.String deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.String deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer) -> deserializeWithType
    java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer) -> deserializeWithType
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.ThrowableDeserializer -> org.codehaus.jackson.map.deser.std.ThrowableDeserializer:
    org.codehaus.jackson.map.JsonDeserializer unwrappingDeserializer() -> unwrappingDeserializer
    java.lang.Object deserializeFromObject(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserializeFromObject
org.codehaus.jackson.map.deser.std.TimestampDeserializer -> org.codehaus.jackson.map.deser.std.TimestampDeserializer:
    java.sql.Timestamp deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.TokenBufferDeserializer -> org.codehaus.jackson.map.deser.std.TokenBufferDeserializer:
    org.codehaus.jackson.util.TokenBuffer deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.UntypedObjectDeserializer -> org.codehaus.jackson.map.deser.std.UntypedObjectDeserializer:
    java.lang.Object[] NO_OBJECTS -> NO_OBJECTS
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer) -> deserializeWithType
    java.lang.Object mapArray(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> mapArray
    java.lang.Object mapObject(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> mapObject
    java.lang.Object[] mapArrayToArray(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> mapArrayToArray
org.codehaus.jackson.map.deser.std.UntypedObjectDeserializer$1 -> org.codehaus.jackson.map.deser.std.UntypedObjectDeserializer$1:
    int[] $SwitchMap$org$codehaus$jackson$JsonToken -> $SwitchMap$org$codehaus$jackson$JsonToken
org.codehaus.jackson.map.exc.UnrecognizedPropertyException -> org.codehaus.jackson.map.exc.UnrecognizedPropertyException:
    java.lang.Class _referringClass -> _referringClass
    java.lang.String _unrecognizedPropertyName -> _unrecognizedPropertyName
    org.codehaus.jackson.map.exc.UnrecognizedPropertyException from(org.codehaus.jackson.JsonParser,java.lang.Object,java.lang.String) -> from
org.codehaus.jackson.map.ext.OptionalHandlerFactory -> org.codehaus.jackson.map.ext.OptionalHandlerFactory:
    org.codehaus.jackson.map.ext.OptionalHandlerFactory instance -> instance
    org.codehaus.jackson.map.JsonSerializer findSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType) -> findSerializer
    org.codehaus.jackson.map.JsonDeserializer findDeserializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider) -> findDeserializer
    java.lang.Object instantiate(java.lang.String) -> instantiate
    boolean doesImplement(java.lang.Class,java.lang.String) -> doesImplement
    boolean hasInterface(java.lang.Class,java.lang.String) -> hasInterface
    boolean hasSupertypeStartingWith(java.lang.Class,java.lang.String) -> hasSupertypeStartingWith
    boolean hasInterfaceStartingWith(java.lang.Class,java.lang.String) -> hasInterfaceStartingWith
org.codehaus.jackson.map.introspect.Annotated -> org.codehaus.jackson.map.introspect.Annotated:
    java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    boolean hasAnnotation(java.lang.Class) -> hasAnnotation
    java.lang.reflect.AnnotatedElement getAnnotated() -> getAnnotated
    java.lang.String getName() -> getName
    org.codehaus.jackson.type.JavaType getType(org.codehaus.jackson.map.type.TypeBindings) -> getType
    java.lang.reflect.Type getGenericType() -> getGenericType
    java.lang.Class getRawType() -> getRawType
org.codehaus.jackson.map.introspect.AnnotatedClass -> org.codehaus.jackson.map.introspect.AnnotatedClass:
    org.codehaus.jackson.map.introspect.AnnotationMap[] NO_ANNOTATION_MAPS -> NO_ANNOTATION_MAPS
    java.lang.Class _class -> _class
    java.util.List _superTypes -> _superTypes
    org.codehaus.jackson.map.AnnotationIntrospector _annotationIntrospector -> _annotationIntrospector
    org.codehaus.jackson.map.ClassIntrospector$MixInResolver _mixInResolver -> _mixInResolver
    java.lang.Class _primaryMixIn -> _primaryMixIn
    org.codehaus.jackson.map.introspect.AnnotationMap _classAnnotations -> _classAnnotations
    org.codehaus.jackson.map.introspect.AnnotatedConstructor _defaultConstructor -> _defaultConstructor
    java.util.List _constructors -> _constructors
    java.util.List _creatorMethods -> _creatorMethods
    org.codehaus.jackson.map.introspect.AnnotatedMethodMap _memberMethods -> _memberMethods
    java.util.List _fields -> _fields
    org.codehaus.jackson.map.introspect.AnnotatedClass construct(java.lang.Class,org.codehaus.jackson.map.AnnotationIntrospector,org.codehaus.jackson.map.ClassIntrospector$MixInResolver) -> construct
    org.codehaus.jackson.map.introspect.AnnotatedClass constructWithoutSuperTypes(java.lang.Class,org.codehaus.jackson.map.AnnotationIntrospector,org.codehaus.jackson.map.ClassIntrospector$MixInResolver) -> constructWithoutSuperTypes
    java.lang.Class getAnnotated() -> getAnnotated
    java.lang.String getName() -> getName
    java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    java.lang.reflect.Type getGenericType() -> getGenericType
    java.lang.Class getRawType() -> getRawType
    org.codehaus.jackson.map.util.Annotations getAnnotations() -> getAnnotations
    boolean hasAnnotations() -> hasAnnotations
    org.codehaus.jackson.map.introspect.AnnotatedConstructor getDefaultConstructor() -> getDefaultConstructor
    java.util.List getConstructors() -> getConstructors
    java.util.List getStaticMethods() -> getStaticMethods
    java.lang.Iterable memberMethods() -> memberMethods
    org.codehaus.jackson.map.introspect.AnnotatedMethod findMethod(java.lang.String,java.lang.Class[]) -> findMethod
    java.lang.Iterable fields() -> fields
    void resolveClassAnnotations() -> resolveClassAnnotations
    void resolveCreators(boolean) -> resolveCreators
    void resolveMemberMethods(org.codehaus.jackson.map.introspect.MethodFilter) -> resolveMemberMethods
    void resolveFields() -> resolveFields
    void _addClassMixIns(org.codehaus.jackson.map.introspect.AnnotationMap,java.lang.Class) -> _addClassMixIns
    void _addClassMixIns(org.codehaus.jackson.map.introspect.AnnotationMap,java.lang.Class,java.lang.Class) -> _addClassMixIns
    void _addConstructorMixIns(java.lang.Class) -> _addConstructorMixIns
    void _addFactoryMixIns(java.lang.Class) -> _addFactoryMixIns
    void _addMemberMethods(java.lang.Class,org.codehaus.jackson.map.introspect.MethodFilter,org.codehaus.jackson.map.introspect.AnnotatedMethodMap,java.lang.Class,org.codehaus.jackson.map.introspect.AnnotatedMethodMap) -> _addMemberMethods
    void _addMethodMixIns(java.lang.Class,org.codehaus.jackson.map.introspect.MethodFilter,org.codehaus.jackson.map.introspect.AnnotatedMethodMap,java.lang.Class,org.codehaus.jackson.map.introspect.AnnotatedMethodMap) -> _addMethodMixIns
    void _addFields(java.util.Map,java.lang.Class) -> _addFields
    void _addFieldMixIns(java.lang.Class,java.lang.Class,java.util.Map) -> _addFieldMixIns
    org.codehaus.jackson.map.introspect.AnnotatedMethod _constructMethod(java.lang.reflect.Method) -> _constructMethod
    org.codehaus.jackson.map.introspect.AnnotatedConstructor _constructConstructor(java.lang.reflect.Constructor,boolean) -> _constructConstructor
    org.codehaus.jackson.map.introspect.AnnotatedMethod _constructCreatorMethod(java.lang.reflect.Method) -> _constructCreatorMethod
    org.codehaus.jackson.map.introspect.AnnotatedField _constructField(java.lang.reflect.Field) -> _constructField
    org.codehaus.jackson.map.introspect.AnnotationMap[] _collectRelevantAnnotations(java.lang.annotation.Annotation[][]) -> _collectRelevantAnnotations
    org.codehaus.jackson.map.introspect.AnnotationMap _collectRelevantAnnotations(java.lang.annotation.Annotation[]) -> _collectRelevantAnnotations
    org.codehaus.jackson.map.introspect.AnnotationMap _emptyAnnotationMap() -> _emptyAnnotationMap
    org.codehaus.jackson.map.introspect.AnnotationMap[] _emptyAnnotationMaps(int) -> _emptyAnnotationMaps
    boolean _isIncludableMethod(java.lang.reflect.Method,org.codehaus.jackson.map.introspect.MethodFilter) -> _isIncludableMethod
    boolean _isIncludableField(java.lang.reflect.Field) -> _isIncludableField
    void _addMixOvers(java.lang.reflect.Constructor,org.codehaus.jackson.map.introspect.AnnotatedConstructor,boolean) -> _addMixOvers
    void _addMixOvers(java.lang.reflect.Method,org.codehaus.jackson.map.introspect.AnnotatedMethod,boolean) -> _addMixOvers
    void _addMixUnders(java.lang.reflect.Method,org.codehaus.jackson.map.introspect.AnnotatedMethod) -> _addMixUnders
    java.lang.String toString() -> toString
    java.lang.reflect.AnnotatedElement getAnnotated() -> getAnnotated
org.codehaus.jackson.map.introspect.AnnotatedConstructor -> org.codehaus.jackson.map.introspect.AnnotatedConstructor:
    java.lang.reflect.Constructor _constructor -> _constructor
    java.lang.reflect.Constructor getAnnotated() -> getAnnotated
    java.lang.String getName() -> getName
    java.lang.reflect.Type getGenericType() -> getGenericType
    java.lang.Class getRawType() -> getRawType
    org.codehaus.jackson.type.JavaType getType(org.codehaus.jackson.map.type.TypeBindings) -> getType
    int getParameterCount() -> getParameterCount
    java.lang.Class getParameterClass(int) -> getParameterClass
    java.lang.reflect.Type getParameterType(int) -> getParameterType
    java.lang.Object call() -> call
    java.lang.Object call(java.lang.Object[]) -> call
    java.lang.Object call1(java.lang.Object) -> call1
    java.lang.Class getDeclaringClass() -> getDeclaringClass
    java.lang.reflect.Member getMember() -> getMember
    void setValue(java.lang.Object,java.lang.Object) -> setValue
    java.lang.String toString() -> toString
    java.lang.reflect.AnnotatedElement getAnnotated() -> getAnnotated
org.codehaus.jackson.map.introspect.AnnotatedField -> org.codehaus.jackson.map.introspect.AnnotatedField:
    java.lang.reflect.Field _field -> _field
    org.codehaus.jackson.map.introspect.AnnotatedField withAnnotations(org.codehaus.jackson.map.introspect.AnnotationMap) -> withAnnotations
    void addOrOverride(java.lang.annotation.Annotation) -> addOrOverride
    java.lang.reflect.Field getAnnotated() -> getAnnotated
    java.lang.String getName() -> getName
    java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    java.lang.reflect.Type getGenericType() -> getGenericType
    java.lang.Class getRawType() -> getRawType
    java.lang.Class getDeclaringClass() -> getDeclaringClass
    java.lang.reflect.Member getMember() -> getMember
    void setValue(java.lang.Object,java.lang.Object) -> setValue
    java.lang.String getFullName() -> getFullName
    java.lang.String toString() -> toString
    java.lang.reflect.AnnotatedElement getAnnotated() -> getAnnotated
org.codehaus.jackson.map.introspect.AnnotatedMember -> org.codehaus.jackson.map.introspect.AnnotatedMember:
    org.codehaus.jackson.map.introspect.AnnotationMap _annotations -> _annotations
    java.lang.Class getDeclaringClass() -> getDeclaringClass
    java.lang.reflect.Member getMember() -> getMember
    org.codehaus.jackson.map.introspect.AnnotationMap getAllAnnotations() -> getAllAnnotations
    void fixAccess() -> fixAccess
    void setValue(java.lang.Object,java.lang.Object) -> setValue
org.codehaus.jackson.map.introspect.AnnotatedMethod -> org.codehaus.jackson.map.introspect.AnnotatedMethod:
    java.lang.reflect.Method _method -> _method
    java.lang.Class[] _paramTypes -> _paramTypes
    org.codehaus.jackson.map.introspect.AnnotatedMethod withMethod(java.lang.reflect.Method) -> withMethod
    org.codehaus.jackson.map.introspect.AnnotatedMethod withAnnotations(org.codehaus.jackson.map.introspect.AnnotationMap) -> withAnnotations
    java.lang.reflect.Method getAnnotated() -> getAnnotated
    java.lang.String getName() -> getName
    java.lang.reflect.Type getGenericType() -> getGenericType
    java.lang.Class getRawType() -> getRawType
    org.codehaus.jackson.type.JavaType getType(org.codehaus.jackson.map.type.TypeBindings) -> getType
    java.lang.Object call() -> call
    java.lang.Object call(java.lang.Object[]) -> call
    java.lang.Object call1(java.lang.Object) -> call1
    java.lang.Class getDeclaringClass() -> getDeclaringClass
    java.lang.reflect.Member getMember() -> getMember
    void setValue(java.lang.Object,java.lang.Object) -> setValue
    int getParameterCount() -> getParameterCount
    java.lang.reflect.Type[] getParameterTypes() -> getParameterTypes
    java.lang.Class getParameterClass(int) -> getParameterClass
    java.lang.reflect.Type getParameterType(int) -> getParameterType
    java.lang.Class[] getParameterClasses() -> getParameterClasses
    java.lang.String getFullName() -> getFullName
    java.lang.String toString() -> toString
    java.lang.reflect.AnnotatedElement getAnnotated() -> getAnnotated
org.codehaus.jackson.map.introspect.AnnotatedMethodMap -> org.codehaus.jackson.map.introspect.AnnotatedMethodMap:
    java.util.LinkedHashMap _methods -> _methods
    void add(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> add
    org.codehaus.jackson.map.introspect.AnnotatedMethod remove(java.lang.reflect.Method) -> remove
    boolean isEmpty() -> isEmpty
    org.codehaus.jackson.map.introspect.AnnotatedMethod find(java.lang.String,java.lang.Class[]) -> find
    org.codehaus.jackson.map.introspect.AnnotatedMethod find(java.lang.reflect.Method) -> find
    java.util.Iterator iterator() -> iterator
org.codehaus.jackson.map.introspect.AnnotatedParameter -> org.codehaus.jackson.map.introspect.AnnotatedParameter:
    org.codehaus.jackson.map.introspect.AnnotatedWithParams _owner -> _owner
    java.lang.reflect.Type _type -> _type
    int _index -> _index
    org.codehaus.jackson.map.introspect.AnnotatedParameter withAnnotations(org.codehaus.jackson.map.introspect.AnnotationMap) -> withAnnotations
    java.lang.reflect.AnnotatedElement getAnnotated() -> getAnnotated
    java.lang.String getName() -> getName
    java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    java.lang.reflect.Type getGenericType() -> getGenericType
    java.lang.Class getRawType() -> getRawType
    java.lang.Class getDeclaringClass() -> getDeclaringClass
    java.lang.reflect.Member getMember() -> getMember
    void setValue(java.lang.Object,java.lang.Object) -> setValue
    java.lang.reflect.Type getParameterType() -> getParameterType
    org.codehaus.jackson.map.introspect.AnnotatedWithParams getOwner() -> getOwner
    int getIndex() -> getIndex
    java.lang.String toString() -> toString
org.codehaus.jackson.map.introspect.AnnotatedWithParams -> org.codehaus.jackson.map.introspect.AnnotatedWithParams:
    org.codehaus.jackson.map.introspect.AnnotationMap[] _paramAnnotations -> _paramAnnotations
    void addOrOverride(java.lang.annotation.Annotation) -> addOrOverride
    void addOrOverrideParam(int,java.lang.annotation.Annotation) -> addOrOverrideParam
    void addIfNotPresent(java.lang.annotation.Annotation) -> addIfNotPresent
    org.codehaus.jackson.map.introspect.AnnotatedParameter replaceParameterAnnotations(int,org.codehaus.jackson.map.introspect.AnnotationMap) -> replaceParameterAnnotations
    org.codehaus.jackson.type.JavaType getType(org.codehaus.jackson.map.type.TypeBindings,java.lang.reflect.TypeVariable[]) -> getType
    java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    org.codehaus.jackson.map.introspect.AnnotatedParameter getParameter(int) -> getParameter
    java.lang.reflect.Type getParameterType(int) -> getParameterType
    java.lang.Object call() -> call
    java.lang.Object call(java.lang.Object[]) -> call
    java.lang.Object call1(java.lang.Object) -> call1
org.codehaus.jackson.map.introspect.AnnotationMap -> org.codehaus.jackson.map.introspect.AnnotationMap:
    java.util.HashMap _annotations -> _annotations
    java.lang.annotation.Annotation get(java.lang.Class) -> get
    org.codehaus.jackson.map.introspect.AnnotationMap merge(org.codehaus.jackson.map.introspect.AnnotationMap,org.codehaus.jackson.map.introspect.AnnotationMap) -> merge
    int size() -> size
    void addIfNotPresent(java.lang.annotation.Annotation) -> addIfNotPresent
    void add(java.lang.annotation.Annotation) -> add
    java.lang.String toString() -> toString
    void _add(java.lang.annotation.Annotation) -> _add
org.codehaus.jackson.map.introspect.BasicBeanDescription -> org.codehaus.jackson.map.introspect.BasicBeanDescription:
    org.codehaus.jackson.map.MapperConfig _config -> _config
    org.codehaus.jackson.map.AnnotationIntrospector _annotationIntrospector -> _annotationIntrospector
    org.codehaus.jackson.map.introspect.AnnotatedClass _classInfo -> _classInfo
    org.codehaus.jackson.map.type.TypeBindings _bindings -> _bindings
    java.util.List _properties -> _properties
    org.codehaus.jackson.map.introspect.AnnotatedMethod _anySetterMethod -> _anySetterMethod
    java.util.Map _injectables -> _injectables
    java.util.Set _ignoredPropertyNames -> _ignoredPropertyNames
    java.util.Set _ignoredPropertyNamesForDeser -> _ignoredPropertyNamesForDeser
    org.codehaus.jackson.map.introspect.AnnotatedMethod _jsonValueMethod -> _jsonValueMethod
    org.codehaus.jackson.map.introspect.AnnotatedMethod _anyGetterMethod -> _anyGetterMethod
    org.codehaus.jackson.map.introspect.BasicBeanDescription forDeserialization(org.codehaus.jackson.map.introspect.POJOPropertiesCollector) -> forDeserialization
    org.codehaus.jackson.map.introspect.BasicBeanDescription forSerialization(org.codehaus.jackson.map.introspect.POJOPropertiesCollector) -> forSerialization
    org.codehaus.jackson.map.introspect.BasicBeanDescription forOtherUse(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.introspect.AnnotatedClass) -> forOtherUse
    org.codehaus.jackson.map.introspect.AnnotatedClass getClassInfo() -> getClassInfo
    java.util.List findProperties() -> findProperties
    org.codehaus.jackson.map.introspect.AnnotatedMethod findJsonValueMethod() -> findJsonValueMethod
    java.util.Set getIgnoredPropertyNames() -> getIgnoredPropertyNames
    java.util.Set getIgnoredPropertyNamesForDeser() -> getIgnoredPropertyNamesForDeser
    boolean hasKnownClassAnnotations() -> hasKnownClassAnnotations
    org.codehaus.jackson.map.util.Annotations getClassAnnotations() -> getClassAnnotations
    org.codehaus.jackson.map.type.TypeBindings bindingsForBeanType() -> bindingsForBeanType
    org.codehaus.jackson.type.JavaType resolveType(java.lang.reflect.Type) -> resolveType
    org.codehaus.jackson.map.introspect.AnnotatedConstructor findDefaultConstructor() -> findDefaultConstructor
    org.codehaus.jackson.map.introspect.AnnotatedMethod findAnySetter() -> findAnySetter
    java.util.Map findInjectables() -> findInjectables
    java.util.List getConstructors() -> getConstructors
    org.codehaus.jackson.map.introspect.AnnotatedMethod findMethod(java.lang.String,java.lang.Class[]) -> findMethod
    java.lang.Object instantiateBean(boolean) -> instantiateBean
    java.util.List getFactoryMethods() -> getFactoryMethods
    java.lang.reflect.Constructor findSingleArgConstructor(java.lang.Class[]) -> findSingleArgConstructor
    java.lang.reflect.Method findFactoryMethod(java.lang.Class[]) -> findFactoryMethod
    boolean isFactoryMethod(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> isFactoryMethod
    org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion findSerializationInclusion(org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion) -> findSerializationInclusion
    org.codehaus.jackson.map.introspect.AnnotatedMethod findAnyGetter() -> findAnyGetter
    java.util.Map findBackReferenceProperties() -> findBackReferenceProperties
org.codehaus.jackson.map.introspect.BasicClassIntrospector -> org.codehaus.jackson.map.introspect.BasicClassIntrospector:
    org.codehaus.jackson.map.introspect.BasicBeanDescription STRING_DESC -> STRING_DESC
    org.codehaus.jackson.map.introspect.BasicBeanDescription BOOLEAN_DESC -> BOOLEAN_DESC
    org.codehaus.jackson.map.introspect.BasicBeanDescription INT_DESC -> INT_DESC
    org.codehaus.jackson.map.introspect.BasicBeanDescription LONG_DESC -> LONG_DESC
    org.codehaus.jackson.map.introspect.BasicClassIntrospector$GetterMethodFilter DEFAULT_GETTER_FILTER -> DEFAULT_GETTER_FILTER
    org.codehaus.jackson.map.introspect.BasicClassIntrospector$SetterMethodFilter DEFAULT_SETTER_FILTER -> DEFAULT_SETTER_FILTER
    org.codehaus.jackson.map.introspect.BasicClassIntrospector$SetterAndGetterMethodFilter DEFAULT_SETTER_AND_GETTER_FILTER -> DEFAULT_SETTER_AND_GETTER_FILTER
    org.codehaus.jackson.map.introspect.MethodFilter MINIMAL_FILTER -> MINIMAL_FILTER
    org.codehaus.jackson.map.introspect.BasicClassIntrospector instance -> instance
    org.codehaus.jackson.map.introspect.BasicBeanDescription forSerialization(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.ClassIntrospector$MixInResolver) -> forSerialization
    org.codehaus.jackson.map.introspect.BasicBeanDescription forDeserialization(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.ClassIntrospector$MixInResolver) -> forDeserialization
    org.codehaus.jackson.map.introspect.BasicBeanDescription forCreation(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.ClassIntrospector$MixInResolver) -> forCreation
    org.codehaus.jackson.map.introspect.BasicBeanDescription forClassAnnotations(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.ClassIntrospector$MixInResolver) -> forClassAnnotations
    org.codehaus.jackson.map.introspect.POJOPropertiesCollector collectProperties(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.ClassIntrospector$MixInResolver,boolean) -> collectProperties
    org.codehaus.jackson.map.introspect.POJOPropertiesCollector constructPropertyCollector(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.introspect.AnnotatedClass,org.codehaus.jackson.type.JavaType,boolean) -> constructPropertyCollector
    org.codehaus.jackson.map.introspect.AnnotatedClass classWithCreators(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.ClassIntrospector$MixInResolver) -> classWithCreators
    org.codehaus.jackson.map.introspect.BasicBeanDescription _findCachedDesc(org.codehaus.jackson.type.JavaType) -> _findCachedDesc
    org.codehaus.jackson.map.BeanDescription forClassAnnotations(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.ClassIntrospector$MixInResolver) -> forClassAnnotations
    org.codehaus.jackson.map.BeanDescription forCreation(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.ClassIntrospector$MixInResolver) -> forCreation
    org.codehaus.jackson.map.BeanDescription forDeserialization(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.ClassIntrospector$MixInResolver) -> forDeserialization
    org.codehaus.jackson.map.BeanDescription forSerialization(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.ClassIntrospector$MixInResolver) -> forSerialization
org.codehaus.jackson.map.introspect.BasicClassIntrospector$1 -> org.codehaus.jackson.map.introspect.BasicClassIntrospector$1:
org.codehaus.jackson.map.introspect.BasicClassIntrospector$GetterMethodFilter -> org.codehaus.jackson.map.introspect.BasicClassIntrospector$GetterMethodFilter:
    boolean includeMethod(java.lang.reflect.Method) -> includeMethod
org.codehaus.jackson.map.introspect.BasicClassIntrospector$MinimalMethodFilter -> org.codehaus.jackson.map.introspect.BasicClassIntrospector$MinimalMethodFilter:
    boolean includeMethod(java.lang.reflect.Method) -> includeMethod
org.codehaus.jackson.map.introspect.BasicClassIntrospector$SetterAndGetterMethodFilter -> org.codehaus.jackson.map.introspect.BasicClassIntrospector$SetterAndGetterMethodFilter:
    boolean includeMethod(java.lang.reflect.Method) -> includeMethod
org.codehaus.jackson.map.introspect.BasicClassIntrospector$SetterMethodFilter -> org.codehaus.jackson.map.introspect.BasicClassIntrospector$SetterMethodFilter:
    boolean includeMethod(java.lang.reflect.Method) -> includeMethod
org.codehaus.jackson.map.introspect.JacksonAnnotationIntrospector -> org.codehaus.jackson.map.introspect.JacksonAnnotationIntrospector:
    boolean isHandled(java.lang.annotation.Annotation) -> isHandled
    java.lang.String findEnumValue(java.lang.Enum) -> findEnumValue
    java.lang.Boolean findCachability(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findCachability
    java.lang.String findRootName(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findRootName
    java.lang.String[] findPropertiesToIgnore(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findPropertiesToIgnore
    java.lang.Boolean findIgnoreUnknownProperties(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findIgnoreUnknownProperties
    java.lang.Boolean isIgnorableType(org.codehaus.jackson.map.introspect.AnnotatedClass) -> isIgnorableType
    java.lang.Object findFilterId(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findFilterId
    org.codehaus.jackson.map.introspect.VisibilityChecker findAutoDetectVisibility(org.codehaus.jackson.map.introspect.AnnotatedClass,org.codehaus.jackson.map.introspect.VisibilityChecker) -> findAutoDetectVisibility
    org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty findReferenceType(org.codehaus.jackson.map.introspect.AnnotatedMember) -> findReferenceType
    java.lang.Boolean shouldUnwrapProperty(org.codehaus.jackson.map.introspect.AnnotatedMember) -> shouldUnwrapProperty
    boolean hasIgnoreMarker(org.codehaus.jackson.map.introspect.AnnotatedMember) -> hasIgnoreMarker
    java.lang.Object findInjectableValueId(org.codehaus.jackson.map.introspect.AnnotatedMember) -> findInjectableValueId
    org.codehaus.jackson.map.jsontype.TypeResolverBuilder findTypeResolver(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.introspect.AnnotatedClass,org.codehaus.jackson.type.JavaType) -> findTypeResolver
    org.codehaus.jackson.map.jsontype.TypeResolverBuilder findPropertyTypeResolver(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.introspect.AnnotatedMember,org.codehaus.jackson.type.JavaType) -> findPropertyTypeResolver
    org.codehaus.jackson.map.jsontype.TypeResolverBuilder findPropertyContentTypeResolver(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.introspect.AnnotatedMember,org.codehaus.jackson.type.JavaType) -> findPropertyContentTypeResolver
    java.util.List findSubtypes(org.codehaus.jackson.map.introspect.Annotated) -> findSubtypes
    java.lang.String findTypeName(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findTypeName
    boolean isIgnorableMethod(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> isIgnorableMethod
    boolean isIgnorableConstructor(org.codehaus.jackson.map.introspect.AnnotatedConstructor) -> isIgnorableConstructor
    boolean isIgnorableField(org.codehaus.jackson.map.introspect.AnnotatedField) -> isIgnorableField
    java.lang.Object findSerializer(org.codehaus.jackson.map.introspect.Annotated) -> findSerializer
    java.lang.Class findKeySerializer(org.codehaus.jackson.map.introspect.Annotated) -> findKeySerializer
    java.lang.Class findContentSerializer(org.codehaus.jackson.map.introspect.Annotated) -> findContentSerializer
    org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion findSerializationInclusion(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion) -> findSerializationInclusion
    java.lang.Class findSerializationType(org.codehaus.jackson.map.introspect.Annotated) -> findSerializationType
    java.lang.Class findSerializationKeyType(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType) -> findSerializationKeyType
    java.lang.Class findSerializationContentType(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType) -> findSerializationContentType
    org.codehaus.jackson.map.annotate.JsonSerialize$Typing findSerializationTyping(org.codehaus.jackson.map.introspect.Annotated) -> findSerializationTyping
    java.lang.Class[] findSerializationViews(org.codehaus.jackson.map.introspect.Annotated) -> findSerializationViews
    java.lang.String[] findSerializationPropertyOrder(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findSerializationPropertyOrder
    java.lang.Boolean findSerializationSortAlphabetically(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findSerializationSortAlphabetically
    java.lang.String findGettablePropertyName(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> findGettablePropertyName
    boolean hasAsValueAnnotation(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> hasAsValueAnnotation
    java.lang.String findSerializablePropertyName(org.codehaus.jackson.map.introspect.AnnotatedField) -> findSerializablePropertyName
    java.lang.Class findDeserializer(org.codehaus.jackson.map.introspect.Annotated) -> findDeserializer
    java.lang.Class findKeyDeserializer(org.codehaus.jackson.map.introspect.Annotated) -> findKeyDeserializer
    java.lang.Class findContentDeserializer(org.codehaus.jackson.map.introspect.Annotated) -> findContentDeserializer
    java.lang.Class findDeserializationType(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType,java.lang.String) -> findDeserializationType
    java.lang.Class findDeserializationKeyType(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType,java.lang.String) -> findDeserializationKeyType
    java.lang.Class findDeserializationContentType(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType,java.lang.String) -> findDeserializationContentType
    java.lang.Object findValueInstantiator(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findValueInstantiator
    java.lang.String findSettablePropertyName(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> findSettablePropertyName
    boolean hasAnySetterAnnotation(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> hasAnySetterAnnotation
    boolean hasAnyGetterAnnotation(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> hasAnyGetterAnnotation
    boolean hasCreatorAnnotation(org.codehaus.jackson.map.introspect.Annotated) -> hasCreatorAnnotation
    java.lang.String findDeserializablePropertyName(org.codehaus.jackson.map.introspect.AnnotatedField) -> findDeserializablePropertyName
    java.lang.String findPropertyNameForParam(org.codehaus.jackson.map.introspect.AnnotatedParameter) -> findPropertyNameForParam
    boolean _isIgnorable(org.codehaus.jackson.map.introspect.Annotated) -> _isIgnorable
    org.codehaus.jackson.map.jsontype.TypeResolverBuilder _findTypeResolver(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType) -> _findTypeResolver
    org.codehaus.jackson.map.jsontype.impl.StdTypeResolverBuilder _constructStdTypeResolverBuilder() -> _constructStdTypeResolverBuilder
    org.codehaus.jackson.map.jsontype.impl.StdTypeResolverBuilder _constructNoTypeResolverBuilder() -> _constructNoTypeResolverBuilder
    java.lang.Object findDeserializer(org.codehaus.jackson.map.introspect.Annotated) -> findDeserializer
org.codehaus.jackson.map.introspect.MemberKey -> org.codehaus.jackson.map.introspect.MemberKey:
    java.lang.Class[] NO_CLASSES -> NO_CLASSES
    java.lang.String _name -> _name
    java.lang.Class[] _argTypes -> _argTypes
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
org.codehaus.jackson.map.introspect.MethodFilter -> org.codehaus.jackson.map.introspect.MethodFilter:
    boolean includeMethod(java.lang.reflect.Method) -> includeMethod
org.codehaus.jackson.map.introspect.NopAnnotationIntrospector -> org.codehaus.jackson.map.introspect.NopAnnotationIntrospector:
    org.codehaus.jackson.map.introspect.NopAnnotationIntrospector instance -> instance
    boolean isHandled(java.lang.annotation.Annotation) -> isHandled
    java.lang.String findEnumValue(java.lang.Enum) -> findEnumValue
    java.lang.String findRootName(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findRootName
    java.lang.String[] findPropertiesToIgnore(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findPropertiesToIgnore
    java.lang.Boolean findIgnoreUnknownProperties(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findIgnoreUnknownProperties
    boolean hasIgnoreMarker(org.codehaus.jackson.map.introspect.AnnotatedMember) -> hasIgnoreMarker
    boolean isIgnorableConstructor(org.codehaus.jackson.map.introspect.AnnotatedConstructor) -> isIgnorableConstructor
    boolean isIgnorableMethod(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> isIgnorableMethod
    boolean isIgnorableField(org.codehaus.jackson.map.introspect.AnnotatedField) -> isIgnorableField
    java.lang.Object findSerializer(org.codehaus.jackson.map.introspect.Annotated) -> findSerializer
    java.lang.Class findSerializationType(org.codehaus.jackson.map.introspect.Annotated) -> findSerializationType
    org.codehaus.jackson.map.annotate.JsonSerialize$Typing findSerializationTyping(org.codehaus.jackson.map.introspect.Annotated) -> findSerializationTyping
    java.lang.Class[] findSerializationViews(org.codehaus.jackson.map.introspect.Annotated) -> findSerializationViews
    java.lang.String[] findSerializationPropertyOrder(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findSerializationPropertyOrder
    java.lang.Boolean findSerializationSortAlphabetically(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findSerializationSortAlphabetically
    java.lang.String findGettablePropertyName(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> findGettablePropertyName
    boolean hasAsValueAnnotation(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> hasAsValueAnnotation
    java.lang.String findDeserializablePropertyName(org.codehaus.jackson.map.introspect.AnnotatedField) -> findDeserializablePropertyName
    java.lang.Class findDeserializationContentType(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType,java.lang.String) -> findDeserializationContentType
    java.lang.Class findDeserializationKeyType(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType,java.lang.String) -> findDeserializationKeyType
    java.lang.Class findDeserializationType(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType,java.lang.String) -> findDeserializationType
    java.lang.Object findDeserializer(org.codehaus.jackson.map.introspect.Annotated) -> findDeserializer
    java.lang.Class findKeyDeserializer(org.codehaus.jackson.map.introspect.Annotated) -> findKeyDeserializer
    java.lang.Class findContentDeserializer(org.codehaus.jackson.map.introspect.Annotated) -> findContentDeserializer
    java.lang.String findPropertyNameForParam(org.codehaus.jackson.map.introspect.AnnotatedParameter) -> findPropertyNameForParam
    java.lang.String findSerializablePropertyName(org.codehaus.jackson.map.introspect.AnnotatedField) -> findSerializablePropertyName
    java.lang.String findSettablePropertyName(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> findSettablePropertyName
org.codehaus.jackson.map.introspect.POJOPropertiesCollector -> org.codehaus.jackson.map.introspect.POJOPropertiesCollector:
    org.codehaus.jackson.map.MapperConfig _config -> _config
    boolean _forSerialization -> _forSerialization
    org.codehaus.jackson.type.JavaType _type -> _type
    org.codehaus.jackson.map.introspect.AnnotatedClass _classDef -> _classDef
    org.codehaus.jackson.map.introspect.VisibilityChecker _visibilityChecker -> _visibilityChecker
    org.codehaus.jackson.map.AnnotationIntrospector _annotationIntrospector -> _annotationIntrospector
    java.util.LinkedHashMap _properties -> _properties
    java.util.LinkedList _creatorProperties -> _creatorProperties
    java.util.LinkedList _anyGetters -> _anyGetters
    java.util.LinkedList _anySetters -> _anySetters
    java.util.LinkedList _jsonValueGetters -> _jsonValueGetters
    java.util.Set _ignoredPropertyNames -> _ignoredPropertyNames
    java.util.Set _ignoredPropertyNamesForDeser -> _ignoredPropertyNamesForDeser
    java.util.LinkedHashMap _injectables -> _injectables
    org.codehaus.jackson.map.MapperConfig getConfig() -> getConfig
    org.codehaus.jackson.type.JavaType getType() -> getType
    org.codehaus.jackson.map.introspect.AnnotatedClass getClassDef() -> getClassDef
    java.util.List getProperties() -> getProperties
    java.util.Map getInjectables() -> getInjectables
    org.codehaus.jackson.map.introspect.AnnotatedMethod getJsonValueMethod() -> getJsonValueMethod
    org.codehaus.jackson.map.introspect.AnnotatedMethod getAnyGetterMethod() -> getAnyGetterMethod
    org.codehaus.jackson.map.introspect.AnnotatedMethod getAnySetterMethod() -> getAnySetterMethod
    java.util.Set getIgnoredPropertyNames() -> getIgnoredPropertyNames
    java.util.Set getIgnoredPropertyNamesForDeser() -> getIgnoredPropertyNamesForDeser
    org.codehaus.jackson.map.introspect.POJOPropertiesCollector collect() -> collect
    void _sortProperties() -> _sortProperties
    void _addFields() -> _addFields
    void _addCreators() -> _addCreators
    void _addMethods() -> _addMethods
    void _addInjectables() -> _addInjectables
    void _doAddInjectable(java.lang.Object,org.codehaus.jackson.map.introspect.AnnotatedMember) -> _doAddInjectable
    void _removeUnwantedProperties() -> _removeUnwantedProperties
    void _addIgnored(org.codehaus.jackson.map.introspect.POJOPropertyBuilder) -> _addIgnored
    void _renameProperties() -> _renameProperties
    void _renameUsing(org.codehaus.jackson.map.PropertyNamingStrategy) -> _renameUsing
    void reportProblem(java.lang.String) -> reportProblem
    org.codehaus.jackson.map.introspect.POJOPropertyBuilder _property(java.lang.String) -> _property
    java.util.Set addToSet(java.util.Set,java.lang.String) -> addToSet
org.codehaus.jackson.map.introspect.POJOPropertyBuilder -> org.codehaus.jackson.map.introspect.POJOPropertyBuilder:
    java.lang.String _name -> _name
    java.lang.String _internalName -> _internalName
    org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _fields -> _fields
    org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _ctorParameters -> _ctorParameters
    org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _getters -> _getters
    org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _setters -> _setters
    org.codehaus.jackson.map.introspect.POJOPropertyBuilder withName(java.lang.String) -> withName
    int compareTo(org.codehaus.jackson.map.introspect.POJOPropertyBuilder) -> compareTo
    java.lang.String getName() -> getName
    java.lang.String getInternalName() -> getInternalName
    boolean isExplicitlyIncluded() -> isExplicitlyIncluded
    boolean hasGetter() -> hasGetter
    boolean hasSetter() -> hasSetter
    boolean hasField() -> hasField
    boolean hasConstructorParameter() -> hasConstructorParameter
    org.codehaus.jackson.map.introspect.AnnotatedMember getAccessor() -> getAccessor
    org.codehaus.jackson.map.introspect.AnnotatedMember getMutator() -> getMutator
    org.codehaus.jackson.map.introspect.AnnotatedMethod getGetter() -> getGetter
    org.codehaus.jackson.map.introspect.AnnotatedMethod getSetter() -> getSetter
    org.codehaus.jackson.map.introspect.AnnotatedField getField() -> getField
    org.codehaus.jackson.map.introspect.AnnotatedParameter getConstructorParameter() -> getConstructorParameter
    void addField(org.codehaus.jackson.map.introspect.AnnotatedField,java.lang.String,boolean,boolean) -> addField
    void addCtor(org.codehaus.jackson.map.introspect.AnnotatedParameter,java.lang.String,boolean,boolean) -> addCtor
    void addGetter(org.codehaus.jackson.map.introspect.AnnotatedMethod,java.lang.String,boolean,boolean) -> addGetter
    void addSetter(org.codehaus.jackson.map.introspect.AnnotatedMethod,java.lang.String,boolean,boolean) -> addSetter
    void addAll(org.codehaus.jackson.map.introspect.POJOPropertyBuilder) -> addAll
    org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node merge(org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node,org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node) -> merge
    void removeIgnored() -> removeIgnored
    void removeNonVisible() -> removeNonVisible
    void trimByVisibility() -> trimByVisibility
    void mergeAnnotations(boolean) -> mergeAnnotations
    org.codehaus.jackson.map.introspect.AnnotationMap _mergeAnnotations(int,org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node[]) -> _mergeAnnotations
    org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _removeIgnored(org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node) -> _removeIgnored
    org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _removeNonVisible(org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node) -> _removeNonVisible
    org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _trimByVisibility(org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node) -> _trimByVisibility
    boolean anyExplicitNames() -> anyExplicitNames
    boolean _anyExplicitNames(org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node) -> _anyExplicitNames
    boolean anyVisible() -> anyVisible
    boolean _anyVisible(org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node) -> _anyVisible
    boolean anyIgnorals() -> anyIgnorals
    boolean anyDeserializeIgnorals() -> anyDeserializeIgnorals
    boolean _anyIgnorals(org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node) -> _anyIgnorals
    java.lang.String findNewName() -> findNewName
    org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node findRenamed(org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node,org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node) -> findRenamed
    java.lang.String toString() -> toString
    int compareTo(java.lang.Object) -> compareTo
org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node -> org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node:
    java.lang.Object value -> value
    org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node next -> next
    java.lang.String explicitName -> explicitName
    boolean isVisible -> isVisible
    boolean isMarkedIgnored -> isMarkedIgnored
    org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node withValue(java.lang.Object) -> withValue
    org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node withNext(org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node) -> withNext
    org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node withoutIgnored() -> withoutIgnored
    org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node withoutNonVisible() -> withoutNonVisible
    org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node append(org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node) -> append
    org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node trimByVisibility() -> trimByVisibility
    java.lang.String toString() -> toString
    org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node access$000(org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node,org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node) -> access$000
org.codehaus.jackson.map.introspect.VisibilityChecker -> org.codehaus.jackson.map.introspect.VisibilityChecker:
    org.codehaus.jackson.map.introspect.VisibilityChecker with(org.codehaus.jackson.annotate.JsonAutoDetect) -> with
    org.codehaus.jackson.map.introspect.VisibilityChecker withGetterVisibility(org.codehaus.jackson.annotate.JsonAutoDetect$Visibility) -> withGetterVisibility
    org.codehaus.jackson.map.introspect.VisibilityChecker withIsGetterVisibility(org.codehaus.jackson.annotate.JsonAutoDetect$Visibility) -> withIsGetterVisibility
    org.codehaus.jackson.map.introspect.VisibilityChecker withSetterVisibility(org.codehaus.jackson.annotate.JsonAutoDetect$Visibility) -> withSetterVisibility
    org.codehaus.jackson.map.introspect.VisibilityChecker withCreatorVisibility(org.codehaus.jackson.annotate.JsonAutoDetect$Visibility) -> withCreatorVisibility
    org.codehaus.jackson.map.introspect.VisibilityChecker withFieldVisibility(org.codehaus.jackson.annotate.JsonAutoDetect$Visibility) -> withFieldVisibility
    boolean isGetterVisible(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> isGetterVisible
    boolean isIsGetterVisible(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> isIsGetterVisible
    boolean isSetterVisible(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> isSetterVisible
    boolean isCreatorVisible(org.codehaus.jackson.map.introspect.AnnotatedMember) -> isCreatorVisible
    boolean isFieldVisible(org.codehaus.jackson.map.introspect.AnnotatedField) -> isFieldVisible
org.codehaus.jackson.map.introspect.VisibilityChecker$Std -> org.codehaus.jackson.map.introspect.VisibilityChecker$Std:
    org.codehaus.jackson.map.introspect.VisibilityChecker$Std DEFAULT -> DEFAULT
    org.codehaus.jackson.annotate.JsonAutoDetect$Visibility _getterMinLevel -> _getterMinLevel
    org.codehaus.jackson.annotate.JsonAutoDetect$Visibility _isGetterMinLevel -> _isGetterMinLevel
    org.codehaus.jackson.annotate.JsonAutoDetect$Visibility _setterMinLevel -> _setterMinLevel
    org.codehaus.jackson.annotate.JsonAutoDetect$Visibility _creatorMinLevel -> _creatorMinLevel
    org.codehaus.jackson.annotate.JsonAutoDetect$Visibility _fieldMinLevel -> _fieldMinLevel
    org.codehaus.jackson.map.introspect.VisibilityChecker$Std defaultInstance() -> defaultInstance
    org.codehaus.jackson.map.introspect.VisibilityChecker$Std with(org.codehaus.jackson.annotate.JsonAutoDetect) -> with
    org.codehaus.jackson.map.introspect.VisibilityChecker$Std withGetterVisibility(org.codehaus.jackson.annotate.JsonAutoDetect$Visibility) -> withGetterVisibility
    org.codehaus.jackson.map.introspect.VisibilityChecker$Std withIsGetterVisibility(org.codehaus.jackson.annotate.JsonAutoDetect$Visibility) -> withIsGetterVisibility
    org.codehaus.jackson.map.introspect.VisibilityChecker$Std withSetterVisibility(org.codehaus.jackson.annotate.JsonAutoDetect$Visibility) -> withSetterVisibility
    org.codehaus.jackson.map.introspect.VisibilityChecker$Std withCreatorVisibility(org.codehaus.jackson.annotate.JsonAutoDetect$Visibility) -> withCreatorVisibility
    org.codehaus.jackson.map.introspect.VisibilityChecker$Std withFieldVisibility(org.codehaus.jackson.annotate.JsonAutoDetect$Visibility) -> withFieldVisibility
    boolean isCreatorVisible(java.lang.reflect.Member) -> isCreatorVisible
    boolean isCreatorVisible(org.codehaus.jackson.map.introspect.AnnotatedMember) -> isCreatorVisible
    boolean isFieldVisible(java.lang.reflect.Field) -> isFieldVisible
    boolean isFieldVisible(org.codehaus.jackson.map.introspect.AnnotatedField) -> isFieldVisible
    boolean isGetterVisible(java.lang.reflect.Method) -> isGetterVisible
    boolean isGetterVisible(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> isGetterVisible
    boolean isIsGetterVisible(java.lang.reflect.Method) -> isIsGetterVisible
    boolean isIsGetterVisible(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> isIsGetterVisible
    boolean isSetterVisible(java.lang.reflect.Method) -> isSetterVisible
    boolean isSetterVisible(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> isSetterVisible
    boolean hasMethod(org.codehaus.jackson.annotate.JsonMethod[],org.codehaus.jackson.annotate.JsonMethod) -> hasMethod
    java.lang.String toString() -> toString
    org.codehaus.jackson.map.introspect.VisibilityChecker withFieldVisibility(org.codehaus.jackson.annotate.JsonAutoDetect$Visibility) -> withFieldVisibility
    org.codehaus.jackson.map.introspect.VisibilityChecker withCreatorVisibility(org.codehaus.jackson.annotate.JsonAutoDetect$Visibility) -> withCreatorVisibility
    org.codehaus.jackson.map.introspect.VisibilityChecker withSetterVisibility(org.codehaus.jackson.annotate.JsonAutoDetect$Visibility) -> withSetterVisibility
    org.codehaus.jackson.map.introspect.VisibilityChecker withIsGetterVisibility(org.codehaus.jackson.annotate.JsonAutoDetect$Visibility) -> withIsGetterVisibility
    org.codehaus.jackson.map.introspect.VisibilityChecker withGetterVisibility(org.codehaus.jackson.annotate.JsonAutoDetect$Visibility) -> withGetterVisibility
    org.codehaus.jackson.map.introspect.VisibilityChecker with(org.codehaus.jackson.annotate.JsonAutoDetect) -> with
org.codehaus.jackson.map.jsontype.NamedType -> org.codehaus.jackson.map.jsontype.NamedType:
    java.lang.Class _class -> _class
    int _hashCode -> _hashCode
    java.lang.String _name -> _name
    java.lang.Class getType() -> getType
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    boolean hasName() -> hasName
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
org.codehaus.jackson.map.jsontype.SubtypeResolver -> org.codehaus.jackson.map.jsontype.SubtypeResolver:
    java.util.Collection collectAndResolveSubtypes(org.codehaus.jackson.map.introspect.AnnotatedMember,org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.AnnotationIntrospector) -> collectAndResolveSubtypes
    java.util.Collection collectAndResolveSubtypes(org.codehaus.jackson.map.introspect.AnnotatedClass,org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.AnnotationIntrospector) -> collectAndResolveSubtypes
org.codehaus.jackson.map.jsontype.TypeIdResolver -> org.codehaus.jackson.map.jsontype.TypeIdResolver:
    void init(org.codehaus.jackson.type.JavaType) -> init
    java.lang.String idFromValue(java.lang.Object) -> idFromValue
    java.lang.String idFromValueAndType(java.lang.Object,java.lang.Class) -> idFromValueAndType
    org.codehaus.jackson.type.JavaType typeFromId(java.lang.String) -> typeFromId
org.codehaus.jackson.map.jsontype.TypeResolverBuilder -> org.codehaus.jackson.map.jsontype.TypeResolverBuilder:
    java.lang.Class getDefaultImpl() -> getDefaultImpl
    org.codehaus.jackson.map.TypeSerializer buildTypeSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,java.util.Collection,org.codehaus.jackson.map.BeanProperty) -> buildTypeSerializer
    org.codehaus.jackson.map.TypeDeserializer buildTypeDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,java.util.Collection,org.codehaus.jackson.map.BeanProperty) -> buildTypeDeserializer
    org.codehaus.jackson.map.jsontype.TypeResolverBuilder init(org.codehaus.jackson.annotate.JsonTypeInfo$Id,org.codehaus.jackson.map.jsontype.TypeIdResolver) -> init
    org.codehaus.jackson.map.jsontype.TypeResolverBuilder inclusion(org.codehaus.jackson.annotate.JsonTypeInfo$As) -> inclusion
    org.codehaus.jackson.map.jsontype.TypeResolverBuilder typeProperty(java.lang.String) -> typeProperty
    org.codehaus.jackson.map.jsontype.TypeResolverBuilder defaultImpl(java.lang.Class) -> defaultImpl
org.codehaus.jackson.map.jsontype.impl.AsArrayTypeDeserializer -> org.codehaus.jackson.map.jsontype.impl.AsArrayTypeDeserializer:
    org.codehaus.jackson.annotate.JsonTypeInfo$As getTypeInclusion() -> getTypeInclusion
    java.lang.Object deserializeTypedFromArray(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserializeTypedFromArray
    java.lang.Object deserializeTypedFromObject(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserializeTypedFromObject
    java.lang.Object deserializeTypedFromScalar(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserializeTypedFromScalar
    java.lang.Object deserializeTypedFromAny(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserializeTypedFromAny
    java.lang.Object _deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> _deserialize
    java.lang.String _locateTypeId(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> _locateTypeId
org.codehaus.jackson.map.jsontype.impl.AsArrayTypeSerializer -> org.codehaus.jackson.map.jsontype.impl.AsArrayTypeSerializer:
    void writeTypePrefixForObject(java.lang.Object,org.codehaus.jackson.JsonGenerator) -> writeTypePrefixForObject
    void writeTypePrefixForArray(java.lang.Object,org.codehaus.jackson.JsonGenerator) -> writeTypePrefixForArray
    void writeTypePrefixForScalar(java.lang.Object,org.codehaus.jackson.JsonGenerator) -> writeTypePrefixForScalar
    void writeTypePrefixForScalar(java.lang.Object,org.codehaus.jackson.JsonGenerator,java.lang.Class) -> writeTypePrefixForScalar
    void writeTypeSuffixForObject(java.lang.Object,org.codehaus.jackson.JsonGenerator) -> writeTypeSuffixForObject
    void writeTypeSuffixForArray(java.lang.Object,org.codehaus.jackson.JsonGenerator) -> writeTypeSuffixForArray
    void writeTypeSuffixForScalar(java.lang.Object,org.codehaus.jackson.JsonGenerator) -> writeTypeSuffixForScalar
org.codehaus.jackson.map.jsontype.impl.AsExternalTypeDeserializer -> org.codehaus.jackson.map.jsontype.impl.AsExternalTypeDeserializer:
    java.lang.String _typePropertyName -> _typePropertyName
    org.codehaus.jackson.annotate.JsonTypeInfo$As getTypeInclusion() -> getTypeInclusion
    java.lang.String getPropertyName() -> getPropertyName
org.codehaus.jackson.map.jsontype.impl.AsExternalTypeSerializer -> org.codehaus.jackson.map.jsontype.impl.AsExternalTypeSerializer:
    java.lang.String _typePropertyName -> _typePropertyName
    void writeTypePrefixForObject(java.lang.Object,org.codehaus.jackson.JsonGenerator) -> writeTypePrefixForObject
    void writeTypePrefixForArray(java.lang.Object,org.codehaus.jackson.JsonGenerator) -> writeTypePrefixForArray
    void writeTypePrefixForScalar(java.lang.Object,org.codehaus.jackson.JsonGenerator) -> writeTypePrefixForScalar
    void writeTypePrefixForScalar(java.lang.Object,org.codehaus.jackson.JsonGenerator,java.lang.Class) -> writeTypePrefixForScalar
    void writeTypeSuffixForObject(java.lang.Object,org.codehaus.jackson.JsonGenerator) -> writeTypeSuffixForObject
    void writeTypeSuffixForArray(java.lang.Object,org.codehaus.jackson.JsonGenerator) -> writeTypeSuffixForArray
    void writeTypeSuffixForScalar(java.lang.Object,org.codehaus.jackson.JsonGenerator) -> writeTypeSuffixForScalar
    void _writeSuffix(java.lang.Object,org.codehaus.jackson.JsonGenerator) -> _writeSuffix
org.codehaus.jackson.map.jsontype.impl.AsPropertyTypeDeserializer -> org.codehaus.jackson.map.jsontype.impl.AsPropertyTypeDeserializer:
    java.lang.String _typePropertyName -> _typePropertyName
    org.codehaus.jackson.annotate.JsonTypeInfo$As getTypeInclusion() -> getTypeInclusion
    java.lang.String getPropertyName() -> getPropertyName
    java.lang.Object deserializeTypedFromObject(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserializeTypedFromObject
    java.lang.Object _deserializeTypedUsingDefaultImpl(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.util.TokenBuffer) -> _deserializeTypedUsingDefaultImpl
    java.lang.Object deserializeTypedFromAny(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserializeTypedFromAny
    java.lang.Object _deserializeIfNatural(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> _deserializeIfNatural
org.codehaus.jackson.map.jsontype.impl.AsPropertyTypeDeserializer$1 -> org.codehaus.jackson.map.jsontype.impl.AsPropertyTypeDeserializer$1:
    int[] $SwitchMap$org$codehaus$jackson$JsonToken -> $SwitchMap$org$codehaus$jackson$JsonToken
org.codehaus.jackson.map.jsontype.impl.AsPropertyTypeSerializer -> org.codehaus.jackson.map.jsontype.impl.AsPropertyTypeSerializer:
    java.lang.String _typePropertyName -> _typePropertyName
    void writeTypePrefixForObject(java.lang.Object,org.codehaus.jackson.JsonGenerator) -> writeTypePrefixForObject
    void writeTypeSuffixForObject(java.lang.Object,org.codehaus.jackson.JsonGenerator) -> writeTypeSuffixForObject
org.codehaus.jackson.map.jsontype.impl.AsWrapperTypeDeserializer -> org.codehaus.jackson.map.jsontype.impl.AsWrapperTypeDeserializer:
    org.codehaus.jackson.annotate.JsonTypeInfo$As getTypeInclusion() -> getTypeInclusion
    java.lang.Object deserializeTypedFromObject(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserializeTypedFromObject
    java.lang.Object deserializeTypedFromArray(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserializeTypedFromArray
    java.lang.Object deserializeTypedFromScalar(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserializeTypedFromScalar
    java.lang.Object deserializeTypedFromAny(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserializeTypedFromAny
    java.lang.Object _deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> _deserialize
org.codehaus.jackson.map.jsontype.impl.AsWrapperTypeSerializer -> org.codehaus.jackson.map.jsontype.impl.AsWrapperTypeSerializer:
    void writeTypePrefixForObject(java.lang.Object,org.codehaus.jackson.JsonGenerator) -> writeTypePrefixForObject
    void writeTypePrefixForArray(java.lang.Object,org.codehaus.jackson.JsonGenerator) -> writeTypePrefixForArray
    void writeTypePrefixForScalar(java.lang.Object,org.codehaus.jackson.JsonGenerator) -> writeTypePrefixForScalar
    void writeTypePrefixForScalar(java.lang.Object,org.codehaus.jackson.JsonGenerator,java.lang.Class) -> writeTypePrefixForScalar
    void writeTypeSuffixForObject(java.lang.Object,org.codehaus.jackson.JsonGenerator) -> writeTypeSuffixForObject
    void writeTypeSuffixForArray(java.lang.Object,org.codehaus.jackson.JsonGenerator) -> writeTypeSuffixForArray
    void writeTypeSuffixForScalar(java.lang.Object,org.codehaus.jackson.JsonGenerator) -> writeTypeSuffixForScalar
org.codehaus.jackson.map.jsontype.impl.ClassNameIdResolver -> org.codehaus.jackson.map.jsontype.impl.ClassNameIdResolver:
    java.lang.String idFromValue(java.lang.Object) -> idFromValue
    java.lang.String idFromValueAndType(java.lang.Object,java.lang.Class) -> idFromValueAndType
    org.codehaus.jackson.type.JavaType typeFromId(java.lang.String) -> typeFromId
    java.lang.String _idFrom(java.lang.Object,java.lang.Class) -> _idFrom
org.codehaus.jackson.map.jsontype.impl.MinimalClassNameIdResolver -> org.codehaus.jackson.map.jsontype.impl.MinimalClassNameIdResolver:
    java.lang.String _basePackageName -> _basePackageName
    java.lang.String _basePackagePrefix -> _basePackagePrefix
    java.lang.String idFromValue(java.lang.Object) -> idFromValue
    org.codehaus.jackson.type.JavaType typeFromId(java.lang.String) -> typeFromId
org.codehaus.jackson.map.jsontype.impl.StdSubtypeResolver -> org.codehaus.jackson.map.jsontype.impl.StdSubtypeResolver:
    java.util.LinkedHashSet _registeredSubtypes -> _registeredSubtypes
    java.util.Collection collectAndResolveSubtypes(org.codehaus.jackson.map.introspect.AnnotatedMember,org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.AnnotationIntrospector) -> collectAndResolveSubtypes
    java.util.Collection collectAndResolveSubtypes(org.codehaus.jackson.map.introspect.AnnotatedClass,org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.AnnotationIntrospector) -> collectAndResolveSubtypes
    void _collectAndResolve(org.codehaus.jackson.map.introspect.AnnotatedClass,org.codehaus.jackson.map.jsontype.NamedType,org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.AnnotationIntrospector,java.util.HashMap) -> _collectAndResolve
org.codehaus.jackson.map.jsontype.impl.StdTypeResolverBuilder -> org.codehaus.jackson.map.jsontype.impl.StdTypeResolverBuilder:
    org.codehaus.jackson.annotate.JsonTypeInfo$Id _idType -> _idType
    org.codehaus.jackson.annotate.JsonTypeInfo$As _includeAs -> _includeAs
    java.lang.String _typeProperty -> _typeProperty
    java.lang.Class _defaultImpl -> _defaultImpl
    org.codehaus.jackson.map.jsontype.TypeIdResolver _customIdResolver -> _customIdResolver
    java.lang.Class getDefaultImpl() -> getDefaultImpl
    org.codehaus.jackson.map.jsontype.impl.StdTypeResolverBuilder noTypeInfoBuilder() -> noTypeInfoBuilder
    org.codehaus.jackson.map.jsontype.impl.StdTypeResolverBuilder init(org.codehaus.jackson.annotate.JsonTypeInfo$Id,org.codehaus.jackson.map.jsontype.TypeIdResolver) -> init
    org.codehaus.jackson.map.TypeSerializer buildTypeSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,java.util.Collection,org.codehaus.jackson.map.BeanProperty) -> buildTypeSerializer
    org.codehaus.jackson.map.TypeDeserializer buildTypeDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,java.util.Collection,org.codehaus.jackson.map.BeanProperty) -> buildTypeDeserializer
    org.codehaus.jackson.map.jsontype.impl.StdTypeResolverBuilder inclusion(org.codehaus.jackson.annotate.JsonTypeInfo$As) -> inclusion
    org.codehaus.jackson.map.jsontype.impl.StdTypeResolverBuilder typeProperty(java.lang.String) -> typeProperty
    org.codehaus.jackson.map.jsontype.impl.StdTypeResolverBuilder defaultImpl(java.lang.Class) -> defaultImpl
    org.codehaus.jackson.map.jsontype.TypeIdResolver idResolver(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.type.JavaType,java.util.Collection,boolean,boolean) -> idResolver
    org.codehaus.jackson.map.jsontype.TypeResolverBuilder defaultImpl(java.lang.Class) -> defaultImpl
    org.codehaus.jackson.map.jsontype.TypeResolverBuilder typeProperty(java.lang.String) -> typeProperty
    org.codehaus.jackson.map.jsontype.TypeResolverBuilder inclusion(org.codehaus.jackson.annotate.JsonTypeInfo$As) -> inclusion
    org.codehaus.jackson.map.jsontype.TypeResolverBuilder init(org.codehaus.jackson.annotate.JsonTypeInfo$Id,org.codehaus.jackson.map.jsontype.TypeIdResolver) -> init
org.codehaus.jackson.map.jsontype.impl.StdTypeResolverBuilder$1 -> org.codehaus.jackson.map.jsontype.impl.StdTypeResolverBuilder$1:
    int[] $SwitchMap$org$codehaus$jackson$annotate$JsonTypeInfo$As -> $SwitchMap$org$codehaus$jackson$annotate$JsonTypeInfo$As
    int[] $SwitchMap$org$codehaus$jackson$annotate$JsonTypeInfo$Id -> $SwitchMap$org$codehaus$jackson$annotate$JsonTypeInfo$Id
org.codehaus.jackson.map.jsontype.impl.TypeDeserializerBase -> org.codehaus.jackson.map.jsontype.impl.TypeDeserializerBase:
    org.codehaus.jackson.map.jsontype.TypeIdResolver _idResolver -> _idResolver
    org.codehaus.jackson.type.JavaType _baseType -> _baseType
    org.codehaus.jackson.map.BeanProperty _property -> _property
    org.codehaus.jackson.type.JavaType _defaultImpl -> _defaultImpl
    java.util.HashMap _deserializers -> _deserializers
    org.codehaus.jackson.map.JsonDeserializer _defaultImplDeserializer -> _defaultImplDeserializer
    java.lang.String baseTypeName() -> baseTypeName
    java.lang.String getPropertyName() -> getPropertyName
    java.lang.String toString() -> toString
    org.codehaus.jackson.map.JsonDeserializer _findDeserializer(org.codehaus.jackson.map.DeserializationContext,java.lang.String) -> _findDeserializer
    org.codehaus.jackson.map.JsonDeserializer _findDefaultImplDeserializer(org.codehaus.jackson.map.DeserializationContext) -> _findDefaultImplDeserializer
org.codehaus.jackson.map.jsontype.impl.TypeIdResolverBase -> org.codehaus.jackson.map.jsontype.impl.TypeIdResolverBase:
    org.codehaus.jackson.map.type.TypeFactory _typeFactory -> _typeFactory
    org.codehaus.jackson.type.JavaType _baseType -> _baseType
    void init(org.codehaus.jackson.type.JavaType) -> init
    java.lang.String idFromBaseType() -> idFromBaseType
org.codehaus.jackson.map.jsontype.impl.TypeNameIdResolver -> org.codehaus.jackson.map.jsontype.impl.TypeNameIdResolver:
    org.codehaus.jackson.map.MapperConfig _config -> _config
    java.util.HashMap _typeToId -> _typeToId
    java.util.HashMap _idToType -> _idToType
    org.codehaus.jackson.map.jsontype.impl.TypeNameIdResolver construct(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.type.JavaType,java.util.Collection,boolean,boolean) -> construct
    java.lang.String idFromValue(java.lang.Object) -> idFromValue
    java.lang.String idFromValueAndType(java.lang.Object,java.lang.Class) -> idFromValueAndType
    org.codehaus.jackson.type.JavaType typeFromId(java.lang.String) -> typeFromId
    java.lang.String toString() -> toString
    java.lang.String _defaultTypeId(java.lang.Class) -> _defaultTypeId
org.codehaus.jackson.map.jsontype.impl.TypeSerializerBase -> org.codehaus.jackson.map.jsontype.impl.TypeSerializerBase:
    org.codehaus.jackson.map.jsontype.TypeIdResolver _idResolver -> _idResolver
    org.codehaus.jackson.map.BeanProperty _property -> _property
org.codehaus.jackson.map.ser.AnyGetterWriter -> org.codehaus.jackson.map.ser.AnyGetterWriter:
    java.lang.reflect.Method _anyGetter -> _anyGetter
    org.codehaus.jackson.map.ser.std.MapSerializer _serializer -> _serializer
    void getAndSerialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> getAndSerialize
    void resolve(org.codehaus.jackson.map.SerializerProvider) -> resolve
org.codehaus.jackson.map.ser.BasicSerializerFactory -> org.codehaus.jackson.map.ser.BasicSerializerFactory:
    java.util.HashMap _concrete -> _concrete
    java.util.HashMap _concreteLazy -> _concreteLazy
    java.util.HashMap _arraySerializers -> _arraySerializers
    org.codehaus.jackson.map.ext.OptionalHandlerFactory optionalHandlers -> optionalHandlers
    org.codehaus.jackson.map.TypeSerializer createTypeSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> createTypeSerializer
    java.lang.Iterable customSerializers() -> customSerializers
    org.codehaus.jackson.map.JsonSerializer findSerializerByLookup(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty,boolean) -> findSerializerByLookup
    org.codehaus.jackson.map.JsonSerializer findSerializerByPrimaryType(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty,boolean) -> findSerializerByPrimaryType
    org.codehaus.jackson.map.JsonSerializer findSerializerByAddonType(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty,boolean) -> findSerializerByAddonType
    org.codehaus.jackson.map.JsonSerializer findSerializerFromAnnotation(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.map.BeanProperty) -> findSerializerFromAnnotation
    org.codehaus.jackson.map.JsonSerializer buildContainerSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty,boolean) -> buildContainerSerializer
    org.codehaus.jackson.map.JsonSerializer buildCollectionLikeSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.type.CollectionLikeType,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty,boolean,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.JsonSerializer) -> buildCollectionLikeSerializer
    org.codehaus.jackson.map.JsonSerializer buildCollectionSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.type.CollectionType,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty,boolean,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.JsonSerializer) -> buildCollectionSerializer
    org.codehaus.jackson.map.JsonSerializer buildEnumSetSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty,boolean,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.JsonSerializer) -> buildEnumSetSerializer
    boolean isIndexedList(java.lang.Class) -> isIndexedList
    org.codehaus.jackson.map.JsonSerializer buildMapLikeSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.type.MapLikeType,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty,boolean,org.codehaus.jackson.map.JsonSerializer,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.JsonSerializer) -> buildMapLikeSerializer
    org.codehaus.jackson.map.JsonSerializer buildMapSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.type.MapType,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty,boolean,org.codehaus.jackson.map.JsonSerializer,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.JsonSerializer) -> buildMapSerializer
    org.codehaus.jackson.map.JsonSerializer buildEnumMapSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty,boolean,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.JsonSerializer) -> buildEnumMapSerializer
    org.codehaus.jackson.map.JsonSerializer buildArraySerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.type.ArrayType,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty,boolean,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.JsonSerializer) -> buildArraySerializer
    org.codehaus.jackson.map.JsonSerializer buildIteratorSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty,boolean) -> buildIteratorSerializer
    org.codehaus.jackson.map.JsonSerializer buildIterableSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty,boolean) -> buildIterableSerializer
    org.codehaus.jackson.type.JavaType modifyTypeByAnnotation(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType) -> modifyTypeByAnnotation
    org.codehaus.jackson.type.JavaType modifySecondaryTypesByAnnotation(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType) -> modifySecondaryTypesByAnnotation
    org.codehaus.jackson.map.JsonSerializer findKeySerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.map.BeanProperty) -> findKeySerializer
    org.codehaus.jackson.map.JsonSerializer findContentSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.map.BeanProperty) -> findContentSerializer
    boolean usesStaticTyping(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.BeanProperty) -> usesStaticTyping
org.codehaus.jackson.map.ser.BeanPropertyFilter -> org.codehaus.jackson.map.ser.BeanPropertyFilter:
    void serializeAsField(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.ser.BeanPropertyWriter) -> serializeAsField
org.codehaus.jackson.map.ser.BeanPropertyWriter -> org.codehaus.jackson.map.ser.BeanPropertyWriter:
    org.codehaus.jackson.map.introspect.AnnotatedMember _member -> _member
    org.codehaus.jackson.map.util.Annotations _contextAnnotations -> _contextAnnotations
    org.codehaus.jackson.type.JavaType _declaredType -> _declaredType
    java.lang.reflect.Method _accessorMethod -> _accessorMethod
    java.lang.reflect.Field _field -> _field
    java.util.HashMap _internalSettings -> _internalSettings
    org.codehaus.jackson.io.SerializedString _name -> _name
    org.codehaus.jackson.type.JavaType _cfgSerializationType -> _cfgSerializationType
    org.codehaus.jackson.map.JsonSerializer _serializer -> _serializer
    org.codehaus.jackson.map.ser.impl.PropertySerializerMap _dynamicSerializers -> _dynamicSerializers
    boolean _suppressNulls -> _suppressNulls
    java.lang.Object _suppressableValue -> _suppressableValue
    java.lang.Class[] _includeInViews -> _includeInViews
    org.codehaus.jackson.map.TypeSerializer _typeSerializer -> _typeSerializer
    org.codehaus.jackson.type.JavaType _nonTrivialBaseType -> _nonTrivialBaseType
    org.codehaus.jackson.map.ser.BeanPropertyWriter withSerializer(org.codehaus.jackson.map.JsonSerializer) -> withSerializer
    org.codehaus.jackson.map.ser.BeanPropertyWriter unwrappingWriter() -> unwrappingWriter
    void setViews(java.lang.Class[]) -> setViews
    void setNonTrivialBaseType(org.codehaus.jackson.type.JavaType) -> setNonTrivialBaseType
    java.lang.String getName() -> getName
    org.codehaus.jackson.type.JavaType getType() -> getType
    org.codehaus.jackson.map.introspect.AnnotatedMember getMember() -> getMember
    boolean hasSerializer() -> hasSerializer
    org.codehaus.jackson.type.JavaType getSerializationType() -> getSerializationType
    java.lang.reflect.Type getGenericPropertyType() -> getGenericPropertyType
    java.lang.Class[] getViews() -> getViews
    void serializeAsField(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeAsField
    org.codehaus.jackson.map.JsonSerializer _findAndAddDynamic(org.codehaus.jackson.map.ser.impl.PropertySerializerMap,java.lang.Class,org.codehaus.jackson.map.SerializerProvider) -> _findAndAddDynamic
    java.lang.Object get(java.lang.Object) -> get
    void _reportSelfReference(java.lang.Object) -> _reportSelfReference
    java.lang.String toString() -> toString
org.codehaus.jackson.map.ser.BeanSerializer -> org.codehaus.jackson.map.ser.BeanSerializer:
    org.codehaus.jackson.map.ser.BeanSerializer createDummy(java.lang.Class) -> createDummy
    org.codehaus.jackson.map.JsonSerializer unwrappingSerializer() -> unwrappingSerializer
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    java.lang.String toString() -> toString
org.codehaus.jackson.map.ser.BeanSerializerBuilder -> org.codehaus.jackson.map.ser.BeanSerializerBuilder:
    org.codehaus.jackson.map.ser.BeanPropertyWriter[] NO_PROPERTIES -> NO_PROPERTIES
    org.codehaus.jackson.map.introspect.BasicBeanDescription _beanDesc -> _beanDesc
    java.util.List _properties -> _properties
    org.codehaus.jackson.map.ser.BeanPropertyWriter[] _filteredProperties -> _filteredProperties
    org.codehaus.jackson.map.ser.AnyGetterWriter _anyGetter -> _anyGetter
    java.lang.Object _filterId -> _filterId
    java.util.List getProperties() -> getProperties
    void setProperties(java.util.List) -> setProperties
    void setFilteredProperties(org.codehaus.jackson.map.ser.BeanPropertyWriter[]) -> setFilteredProperties
    void setAnyGetter(org.codehaus.jackson.map.ser.AnyGetterWriter) -> setAnyGetter
    void setFilterId(java.lang.Object) -> setFilterId
    org.codehaus.jackson.map.JsonSerializer build() -> build
    org.codehaus.jackson.map.ser.BeanSerializer createDummy() -> createDummy
org.codehaus.jackson.map.ser.BeanSerializerFactory -> org.codehaus.jackson.map.ser.BeanSerializerFactory:
    org.codehaus.jackson.map.ser.BeanSerializerFactory instance -> instance
    org.codehaus.jackson.map.SerializerFactory$Config _factoryConfig -> _factoryConfig
    java.lang.Iterable customSerializers() -> customSerializers
    org.codehaus.jackson.map.JsonSerializer createSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> createSerializer
    org.codehaus.jackson.map.JsonSerializer createKeySerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> createKeySerializer
    org.codehaus.jackson.map.JsonSerializer findBeanSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty) -> findBeanSerializer
    org.codehaus.jackson.map.TypeSerializer findPropertyTypeSerializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.AnnotatedMember,org.codehaus.jackson.map.BeanProperty) -> findPropertyTypeSerializer
    org.codehaus.jackson.map.TypeSerializer findPropertyContentTypeSerializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.AnnotatedMember,org.codehaus.jackson.map.BeanProperty) -> findPropertyContentTypeSerializer
    org.codehaus.jackson.map.JsonSerializer constructBeanSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty) -> constructBeanSerializer
    org.codehaus.jackson.map.ser.BeanPropertyWriter constructFilteredBeanWriter(org.codehaus.jackson.map.ser.BeanPropertyWriter,java.lang.Class[]) -> constructFilteredBeanWriter
    org.codehaus.jackson.map.ser.PropertyBuilder constructPropertyBuilder(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription) -> constructPropertyBuilder
    org.codehaus.jackson.map.ser.BeanSerializerBuilder constructBeanSerializerBuilder(org.codehaus.jackson.map.introspect.BasicBeanDescription) -> constructBeanSerializerBuilder
    java.lang.Object findFilterId(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription) -> findFilterId
    boolean isPotentialBeanType(java.lang.Class) -> isPotentialBeanType
    java.util.List findBeanProperties(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription) -> findBeanProperties
    java.util.List filterBeanProperties(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,java.util.List) -> filterBeanProperties
    java.util.List sortBeanProperties(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,java.util.List) -> sortBeanProperties
    void processViews(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.ser.BeanSerializerBuilder) -> processViews
    void removeIgnorableTypes(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,java.util.List) -> removeIgnorableTypes
    void removeSetterlessGetters(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,java.util.List) -> removeSetterlessGetters
    org.codehaus.jackson.map.ser.BeanPropertyWriter _constructWriter(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.type.TypeBindings,org.codehaus.jackson.map.ser.PropertyBuilder,boolean,java.lang.String,org.codehaus.jackson.map.introspect.AnnotatedMember) -> _constructWriter
org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl -> org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl:
    org.codehaus.jackson.map.Serializers[] NO_SERIALIZERS -> NO_SERIALIZERS
    org.codehaus.jackson.map.ser.BeanSerializerModifier[] NO_MODIFIERS -> NO_MODIFIERS
    org.codehaus.jackson.map.Serializers[] _additionalSerializers -> _additionalSerializers
    org.codehaus.jackson.map.Serializers[] _additionalKeySerializers -> _additionalKeySerializers
    org.codehaus.jackson.map.ser.BeanSerializerModifier[] _modifiers -> _modifiers
    boolean hasKeySerializers() -> hasKeySerializers
    boolean hasSerializerModifiers() -> hasSerializerModifiers
    java.lang.Iterable serializers() -> serializers
    java.lang.Iterable keySerializers() -> keySerializers
    java.lang.Iterable serializerModifiers() -> serializerModifiers
org.codehaus.jackson.map.ser.BeanSerializerModifier -> org.codehaus.jackson.map.ser.BeanSerializerModifier:
    java.util.List changeProperties(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,java.util.List) -> changeProperties
    java.util.List orderProperties(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,java.util.List) -> orderProperties
    org.codehaus.jackson.map.ser.BeanSerializerBuilder updateBuilder(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.ser.BeanSerializerBuilder) -> updateBuilder
    org.codehaus.jackson.map.JsonSerializer modifySerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.JsonSerializer) -> modifySerializer
org.codehaus.jackson.map.ser.FilterProvider -> org.codehaus.jackson.map.ser.FilterProvider:
    org.codehaus.jackson.map.ser.BeanPropertyFilter findFilter(java.lang.Object) -> findFilter
org.codehaus.jackson.map.ser.FilteredBeanPropertyWriter -> org.codehaus.jackson.map.ser.FilteredBeanPropertyWriter:
    org.codehaus.jackson.map.ser.BeanPropertyWriter constructViewBased(org.codehaus.jackson.map.ser.BeanPropertyWriter,java.lang.Class[]) -> constructViewBased
org.codehaus.jackson.map.ser.FilteredBeanPropertyWriter$MultiView -> org.codehaus.jackson.map.ser.FilteredBeanPropertyWriter$MultiView:
    org.codehaus.jackson.map.ser.BeanPropertyWriter _delegate -> _delegate
    java.lang.Class[] _views -> _views
    org.codehaus.jackson.map.ser.BeanPropertyWriter withSerializer(org.codehaus.jackson.map.JsonSerializer) -> withSerializer
    void serializeAsField(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeAsField
org.codehaus.jackson.map.ser.FilteredBeanPropertyWriter$SingleView -> org.codehaus.jackson.map.ser.FilteredBeanPropertyWriter$SingleView:
    org.codehaus.jackson.map.ser.BeanPropertyWriter _delegate -> _delegate
    java.lang.Class _view -> _view
    org.codehaus.jackson.map.ser.BeanPropertyWriter withSerializer(org.codehaus.jackson.map.JsonSerializer) -> withSerializer
    void serializeAsField(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeAsField
org.codehaus.jackson.map.ser.PropertyBuilder -> org.codehaus.jackson.map.ser.PropertyBuilder:
    org.codehaus.jackson.map.SerializationConfig _config -> _config
    org.codehaus.jackson.map.introspect.BasicBeanDescription _beanDesc -> _beanDesc
    org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion _outputProps -> _outputProps
    org.codehaus.jackson.map.AnnotationIntrospector _annotationIntrospector -> _annotationIntrospector
    java.lang.Object _defaultBean -> _defaultBean
    org.codehaus.jackson.map.util.Annotations getClassAnnotations() -> getClassAnnotations
    org.codehaus.jackson.map.ser.BeanPropertyWriter buildWriter(java.lang.String,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.JsonSerializer,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.introspect.AnnotatedMember,boolean) -> buildWriter
    org.codehaus.jackson.type.JavaType findSerializationType(org.codehaus.jackson.map.introspect.Annotated,boolean,org.codehaus.jackson.type.JavaType) -> findSerializationType
    java.lang.Object getDefaultBean() -> getDefaultBean
    java.lang.Object getDefaultValue(java.lang.String,java.lang.reflect.Method,java.lang.reflect.Field) -> getDefaultValue
    java.lang.Object getContainerValueChecker(java.lang.String,org.codehaus.jackson.type.JavaType) -> getContainerValueChecker
    java.lang.Object getEmptyValueChecker(java.lang.String,org.codehaus.jackson.type.JavaType) -> getEmptyValueChecker
    java.lang.Object _throwWrapped(java.lang.Exception,java.lang.String,java.lang.Object) -> _throwWrapped
org.codehaus.jackson.map.ser.PropertyBuilder$1 -> org.codehaus.jackson.map.ser.PropertyBuilder$1:
    int[] $SwitchMap$org$codehaus$jackson$map$annotate$JsonSerialize$Inclusion -> $SwitchMap$org$codehaus$jackson$map$annotate$JsonSerialize$Inclusion
org.codehaus.jackson.map.ser.PropertyBuilder$EmptyArrayChecker -> org.codehaus.jackson.map.ser.PropertyBuilder$EmptyArrayChecker:
    boolean equals(java.lang.Object) -> equals
org.codehaus.jackson.map.ser.PropertyBuilder$EmptyCollectionChecker -> org.codehaus.jackson.map.ser.PropertyBuilder$EmptyCollectionChecker:
    boolean equals(java.lang.Object) -> equals
org.codehaus.jackson.map.ser.PropertyBuilder$EmptyMapChecker -> org.codehaus.jackson.map.ser.PropertyBuilder$EmptyMapChecker:
    boolean equals(java.lang.Object) -> equals
org.codehaus.jackson.map.ser.PropertyBuilder$EmptyStringChecker -> org.codehaus.jackson.map.ser.PropertyBuilder$EmptyStringChecker:
    boolean equals(java.lang.Object) -> equals
org.codehaus.jackson.map.ser.SerializerBase -> org.codehaus.jackson.map.ser.SerializerBase:
org.codehaus.jackson.map.ser.StdSerializerProvider -> org.codehaus.jackson.map.ser.StdSerializerProvider:
    org.codehaus.jackson.map.JsonSerializer DEFAULT_NULL_KEY_SERIALIZER -> DEFAULT_NULL_KEY_SERIALIZER
    org.codehaus.jackson.map.JsonSerializer DEFAULT_KEY_SERIALIZER -> DEFAULT_KEY_SERIALIZER
    org.codehaus.jackson.map.JsonSerializer DEFAULT_UNKNOWN_SERIALIZER -> DEFAULT_UNKNOWN_SERIALIZER
    org.codehaus.jackson.map.SerializerFactory _serializerFactory -> _serializerFactory
    org.codehaus.jackson.map.ser.impl.SerializerCache _serializerCache -> _serializerCache
    org.codehaus.jackson.map.util.RootNameLookup _rootNames -> _rootNames
    org.codehaus.jackson.map.JsonSerializer _unknownTypeSerializer -> _unknownTypeSerializer
    org.codehaus.jackson.map.JsonSerializer _keySerializer -> _keySerializer
    org.codehaus.jackson.map.JsonSerializer _nullValueSerializer -> _nullValueSerializer
    org.codehaus.jackson.map.JsonSerializer _nullKeySerializer -> _nullKeySerializer
    org.codehaus.jackson.map.ser.impl.ReadOnlyClassToSerializerMap _knownSerializers -> _knownSerializers
    java.text.DateFormat _dateFormat -> _dateFormat
    org.codehaus.jackson.map.ser.StdSerializerProvider createInstance(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.SerializerFactory) -> createInstance
    void serializeValue(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.JsonGenerator,java.lang.Object,org.codehaus.jackson.map.SerializerFactory) -> serializeValue
    org.codehaus.jackson.map.JsonSerializer findValueSerializer(java.lang.Class,org.codehaus.jackson.map.BeanProperty) -> findValueSerializer
    org.codehaus.jackson.map.JsonSerializer findValueSerializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> findValueSerializer
    org.codehaus.jackson.map.JsonSerializer findTypedValueSerializer(java.lang.Class,boolean,org.codehaus.jackson.map.BeanProperty) -> findTypedValueSerializer
    org.codehaus.jackson.map.JsonSerializer findTypedValueSerializer(org.codehaus.jackson.type.JavaType,boolean,org.codehaus.jackson.map.BeanProperty) -> findTypedValueSerializer
    org.codehaus.jackson.map.JsonSerializer findKeySerializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> findKeySerializer
    org.codehaus.jackson.map.JsonSerializer getNullKeySerializer() -> getNullKeySerializer
    org.codehaus.jackson.map.JsonSerializer getNullValueSerializer() -> getNullValueSerializer
    org.codehaus.jackson.map.JsonSerializer getUnknownTypeSerializer(java.lang.Class) -> getUnknownTypeSerializer
    void defaultSerializeDateValue(long,org.codehaus.jackson.JsonGenerator) -> defaultSerializeDateValue
    void defaultSerializeDateValue(java.util.Date,org.codehaus.jackson.JsonGenerator) -> defaultSerializeDateValue
    void defaultSerializeDateKey(long,org.codehaus.jackson.JsonGenerator) -> defaultSerializeDateKey
    void defaultSerializeDateKey(java.util.Date,org.codehaus.jackson.JsonGenerator) -> defaultSerializeDateKey
    void _serializeValue(org.codehaus.jackson.JsonGenerator,java.lang.Object) -> _serializeValue
    org.codehaus.jackson.map.JsonSerializer _createAndCacheUntypedSerializer(java.lang.Class,org.codehaus.jackson.map.BeanProperty) -> _createAndCacheUntypedSerializer
    org.codehaus.jackson.map.JsonSerializer _createAndCacheUntypedSerializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> _createAndCacheUntypedSerializer
    org.codehaus.jackson.map.JsonSerializer _createUntypedSerializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> _createUntypedSerializer
    org.codehaus.jackson.map.JsonSerializer _handleContextualResolvable(org.codehaus.jackson.map.JsonSerializer,org.codehaus.jackson.map.BeanProperty) -> _handleContextualResolvable
org.codehaus.jackson.map.ser.StdSerializerProvider$WrappedSerializer -> org.codehaus.jackson.map.ser.StdSerializerProvider$WrappedSerializer:
    org.codehaus.jackson.map.TypeSerializer _typeSerializer -> _typeSerializer
    org.codehaus.jackson.map.JsonSerializer _serializer -> _serializer
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
    java.lang.Class handledType() -> handledType
org.codehaus.jackson.map.ser.StdSerializers -> org.codehaus.jackson.map.ser.StdSerializers:
org.codehaus.jackson.map.ser.StdSerializers$BooleanSerializer -> org.codehaus.jackson.map.ser.StdSerializers$BooleanSerializer:
    boolean _forPrimitive -> _forPrimitive
    void serialize(java.lang.Boolean,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ser.StdSerializers$DoubleSerializer -> org.codehaus.jackson.map.ser.StdSerializers$DoubleSerializer:
    org.codehaus.jackson.map.ser.StdSerializers$DoubleSerializer instance -> instance
    void serialize(java.lang.Double,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ser.StdSerializers$FloatSerializer -> org.codehaus.jackson.map.ser.StdSerializers$FloatSerializer:
    org.codehaus.jackson.map.ser.StdSerializers$FloatSerializer instance -> instance
    void serialize(java.lang.Float,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ser.StdSerializers$IntLikeSerializer -> org.codehaus.jackson.map.ser.StdSerializers$IntLikeSerializer:
    org.codehaus.jackson.map.ser.StdSerializers$IntLikeSerializer instance -> instance
    void serialize(java.lang.Number,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ser.StdSerializers$IntegerSerializer -> org.codehaus.jackson.map.ser.StdSerializers$IntegerSerializer:
    void serialize(java.lang.Integer,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ser.StdSerializers$LongSerializer -> org.codehaus.jackson.map.ser.StdSerializers$LongSerializer:
    org.codehaus.jackson.map.ser.StdSerializers$LongSerializer instance -> instance
    void serialize(java.lang.Long,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ser.StdSerializers$NumberSerializer -> org.codehaus.jackson.map.ser.StdSerializers$NumberSerializer:
    org.codehaus.jackson.map.ser.StdSerializers$NumberSerializer instance -> instance
    void serialize(java.lang.Number,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ser.StdSerializers$SqlDateSerializer -> org.codehaus.jackson.map.ser.StdSerializers$SqlDateSerializer:
    void serialize(java.sql.Date,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ser.StdSerializers$SqlTimeSerializer -> org.codehaus.jackson.map.ser.StdSerializers$SqlTimeSerializer:
    void serialize(java.sql.Time,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ser.impl.FailingSerializer -> org.codehaus.jackson.map.ser.impl.FailingSerializer:
    java.lang.String _msg -> _msg
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ser.impl.JsonSerializerMap -> org.codehaus.jackson.map.ser.impl.JsonSerializerMap:
    org.codehaus.jackson.map.ser.impl.JsonSerializerMap$Bucket[] _buckets -> _buckets
    int _size -> _size
    int findSize(int) -> findSize
    org.codehaus.jackson.map.JsonSerializer find(org.codehaus.jackson.map.ser.impl.SerializerCache$TypeKey) -> find
org.codehaus.jackson.map.ser.impl.JsonSerializerMap$Bucket -> org.codehaus.jackson.map.ser.impl.JsonSerializerMap$Bucket:
    org.codehaus.jackson.map.ser.impl.SerializerCache$TypeKey key -> key
    org.codehaus.jackson.map.JsonSerializer value -> value
    org.codehaus.jackson.map.ser.impl.JsonSerializerMap$Bucket next -> next
org.codehaus.jackson.map.ser.impl.PropertySerializerMap -> org.codehaus.jackson.map.ser.impl.PropertySerializerMap:
    org.codehaus.jackson.map.JsonSerializer serializerFor(java.lang.Class) -> serializerFor
    org.codehaus.jackson.map.ser.impl.PropertySerializerMap$SerializerAndMapResult findAndAddSerializer(java.lang.Class,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.BeanProperty) -> findAndAddSerializer
    org.codehaus.jackson.map.ser.impl.PropertySerializerMap$SerializerAndMapResult findAndAddSerializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.BeanProperty) -> findAndAddSerializer
    org.codehaus.jackson.map.ser.impl.PropertySerializerMap newWith(java.lang.Class,org.codehaus.jackson.map.JsonSerializer) -> newWith
    org.codehaus.jackson.map.ser.impl.PropertySerializerMap emptyMap() -> emptyMap
org.codehaus.jackson.map.ser.impl.PropertySerializerMap$Double -> org.codehaus.jackson.map.ser.impl.PropertySerializerMap$Double:
    java.lang.Class _type1 -> _type1
    java.lang.Class _type2 -> _type2
    org.codehaus.jackson.map.JsonSerializer _serializer1 -> _serializer1
    org.codehaus.jackson.map.JsonSerializer _serializer2 -> _serializer2
    org.codehaus.jackson.map.JsonSerializer serializerFor(java.lang.Class) -> serializerFor
    org.codehaus.jackson.map.ser.impl.PropertySerializerMap newWith(java.lang.Class,org.codehaus.jackson.map.JsonSerializer) -> newWith
org.codehaus.jackson.map.ser.impl.PropertySerializerMap$Empty -> org.codehaus.jackson.map.ser.impl.PropertySerializerMap$Empty:
    org.codehaus.jackson.map.ser.impl.PropertySerializerMap$Empty instance -> instance
    org.codehaus.jackson.map.JsonSerializer serializerFor(java.lang.Class) -> serializerFor
    org.codehaus.jackson.map.ser.impl.PropertySerializerMap newWith(java.lang.Class,org.codehaus.jackson.map.JsonSerializer) -> newWith
org.codehaus.jackson.map.ser.impl.PropertySerializerMap$Multi -> org.codehaus.jackson.map.ser.impl.PropertySerializerMap$Multi:
    org.codehaus.jackson.map.ser.impl.PropertySerializerMap$TypeAndSerializer[] _entries -> _entries
    org.codehaus.jackson.map.JsonSerializer serializerFor(java.lang.Class) -> serializerFor
    org.codehaus.jackson.map.ser.impl.PropertySerializerMap newWith(java.lang.Class,org.codehaus.jackson.map.JsonSerializer) -> newWith
org.codehaus.jackson.map.ser.impl.PropertySerializerMap$SerializerAndMapResult -> org.codehaus.jackson.map.ser.impl.PropertySerializerMap$SerializerAndMapResult:
    org.codehaus.jackson.map.JsonSerializer serializer -> serializer
    org.codehaus.jackson.map.ser.impl.PropertySerializerMap map -> map
org.codehaus.jackson.map.ser.impl.PropertySerializerMap$Single -> org.codehaus.jackson.map.ser.impl.PropertySerializerMap$Single:
    java.lang.Class _type -> _type
    org.codehaus.jackson.map.JsonSerializer _serializer -> _serializer
    org.codehaus.jackson.map.JsonSerializer serializerFor(java.lang.Class) -> serializerFor
    org.codehaus.jackson.map.ser.impl.PropertySerializerMap newWith(java.lang.Class,org.codehaus.jackson.map.JsonSerializer) -> newWith
org.codehaus.jackson.map.ser.impl.PropertySerializerMap$TypeAndSerializer -> org.codehaus.jackson.map.ser.impl.PropertySerializerMap$TypeAndSerializer:
    java.lang.Class type -> type
    org.codehaus.jackson.map.JsonSerializer serializer -> serializer
org.codehaus.jackson.map.ser.impl.ReadOnlyClassToSerializerMap -> org.codehaus.jackson.map.ser.impl.ReadOnlyClassToSerializerMap:
    org.codehaus.jackson.map.ser.impl.JsonSerializerMap _map -> _map
    org.codehaus.jackson.map.ser.impl.SerializerCache$TypeKey _cacheKey -> _cacheKey
    org.codehaus.jackson.map.ser.impl.ReadOnlyClassToSerializerMap instance() -> instance
    org.codehaus.jackson.map.ser.impl.ReadOnlyClassToSerializerMap from(java.util.HashMap) -> from
    org.codehaus.jackson.map.JsonSerializer typedValueSerializer(org.codehaus.jackson.type.JavaType) -> typedValueSerializer
    org.codehaus.jackson.map.JsonSerializer typedValueSerializer(java.lang.Class) -> typedValueSerializer
    org.codehaus.jackson.map.JsonSerializer untypedValueSerializer(java.lang.Class) -> untypedValueSerializer
    org.codehaus.jackson.map.JsonSerializer untypedValueSerializer(org.codehaus.jackson.type.JavaType) -> untypedValueSerializer
org.codehaus.jackson.map.ser.impl.SerializerCache -> org.codehaus.jackson.map.ser.impl.SerializerCache:
    java.util.HashMap _sharedMap -> _sharedMap
    org.codehaus.jackson.map.ser.impl.ReadOnlyClassToSerializerMap _readOnlyMap -> _readOnlyMap
    org.codehaus.jackson.map.ser.impl.ReadOnlyClassToSerializerMap getReadOnlyLookupMap() -> getReadOnlyLookupMap
    org.codehaus.jackson.map.JsonSerializer untypedValueSerializer(java.lang.Class) -> untypedValueSerializer
    org.codehaus.jackson.map.JsonSerializer untypedValueSerializer(org.codehaus.jackson.type.JavaType) -> untypedValueSerializer
    org.codehaus.jackson.map.JsonSerializer typedValueSerializer(org.codehaus.jackson.type.JavaType) -> typedValueSerializer
    org.codehaus.jackson.map.JsonSerializer typedValueSerializer(java.lang.Class) -> typedValueSerializer
    void addTypedSerializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.JsonSerializer) -> addTypedSerializer
    void addTypedSerializer(java.lang.Class,org.codehaus.jackson.map.JsonSerializer) -> addTypedSerializer
    void addAndResolveNonTypedSerializer(java.lang.Class,org.codehaus.jackson.map.JsonSerializer,org.codehaus.jackson.map.SerializerProvider) -> addAndResolveNonTypedSerializer
    void addAndResolveNonTypedSerializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.JsonSerializer,org.codehaus.jackson.map.SerializerProvider) -> addAndResolveNonTypedSerializer
org.codehaus.jackson.map.ser.impl.SerializerCache$TypeKey -> org.codehaus.jackson.map.ser.impl.SerializerCache$TypeKey:
    int _hashCode -> _hashCode
    java.lang.Class _class -> _class
    org.codehaus.jackson.type.JavaType _type -> _type
    boolean _isTyped -> _isTyped
    int hash(java.lang.Class,boolean) -> hash
    int hash(org.codehaus.jackson.type.JavaType,boolean) -> hash
    void resetTyped(java.lang.Class) -> resetTyped
    void resetUntyped(java.lang.Class) -> resetUntyped
    void resetTyped(org.codehaus.jackson.type.JavaType) -> resetTyped
    void resetUntyped(org.codehaus.jackson.type.JavaType) -> resetUntyped
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
org.codehaus.jackson.map.ser.impl.UnknownSerializer -> org.codehaus.jackson.map.ser.impl.UnknownSerializer:
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
    void failForEmpty(java.lang.Object) -> failForEmpty
org.codehaus.jackson.map.ser.impl.UnwrappingBeanPropertyWriter -> org.codehaus.jackson.map.ser.impl.UnwrappingBeanPropertyWriter:
    org.codehaus.jackson.map.ser.BeanPropertyWriter withSerializer(org.codehaus.jackson.map.JsonSerializer) -> withSerializer
    void serializeAsField(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeAsField
    org.codehaus.jackson.map.JsonSerializer _findAndAddDynamic(org.codehaus.jackson.map.ser.impl.PropertySerializerMap,java.lang.Class,org.codehaus.jackson.map.SerializerProvider) -> _findAndAddDynamic
org.codehaus.jackson.map.ser.impl.UnwrappingBeanSerializer -> org.codehaus.jackson.map.ser.impl.UnwrappingBeanSerializer:
    org.codehaus.jackson.map.JsonSerializer unwrappingSerializer() -> unwrappingSerializer
    boolean isUnwrappingSerializer() -> isUnwrappingSerializer
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    java.lang.String toString() -> toString
org.codehaus.jackson.map.ser.std.AsArraySerializerBase -> org.codehaus.jackson.map.ser.std.AsArraySerializerBase:
    boolean _staticTyping -> _staticTyping
    org.codehaus.jackson.type.JavaType _elementType -> _elementType
    org.codehaus.jackson.map.TypeSerializer _valueTypeSerializer -> _valueTypeSerializer
    org.codehaus.jackson.map.JsonSerializer _elementSerializer -> _elementSerializer
    org.codehaus.jackson.map.BeanProperty _property -> _property
    org.codehaus.jackson.map.ser.impl.PropertySerializerMap _dynamicSerializers -> _dynamicSerializers
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
    void serializeContents(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
    void resolve(org.codehaus.jackson.map.SerializerProvider) -> resolve
    org.codehaus.jackson.map.JsonSerializer _findAndAddDynamic(org.codehaus.jackson.map.ser.impl.PropertySerializerMap,java.lang.Class,org.codehaus.jackson.map.SerializerProvider) -> _findAndAddDynamic
    org.codehaus.jackson.map.JsonSerializer _findAndAddDynamic(org.codehaus.jackson.map.ser.impl.PropertySerializerMap,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.SerializerProvider) -> _findAndAddDynamic
org.codehaus.jackson.map.ser.std.BeanSerializerBase -> org.codehaus.jackson.map.ser.std.BeanSerializerBase:
    org.codehaus.jackson.map.ser.BeanPropertyWriter[] NO_PROPS -> NO_PROPS
    org.codehaus.jackson.map.ser.BeanPropertyWriter[] _props -> _props
    org.codehaus.jackson.map.ser.BeanPropertyWriter[] _filteredProps -> _filteredProps
    org.codehaus.jackson.map.ser.AnyGetterWriter _anyGetterWriter -> _anyGetterWriter
    java.lang.Object _propertyFilterId -> _propertyFilterId
    void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
    void serializeFields(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeFields
    void serializeFieldsFiltered(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeFieldsFiltered
    org.codehaus.jackson.map.ser.BeanPropertyFilter findFilter(org.codehaus.jackson.map.SerializerProvider) -> findFilter
    void resolve(org.codehaus.jackson.map.SerializerProvider) -> resolve
org.codehaus.jackson.map.ser.std.CalendarSerializer -> org.codehaus.jackson.map.ser.std.CalendarSerializer:
    org.codehaus.jackson.map.ser.std.CalendarSerializer instance -> instance
    void serialize(java.util.Calendar,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ser.std.CollectionSerializer -> org.codehaus.jackson.map.ser.std.CollectionSerializer:
    org.codehaus.jackson.map.ser.std.ContainerSerializerBase _withValueTypeSerializer(org.codehaus.jackson.map.TypeSerializer) -> _withValueTypeSerializer
    void serializeContents(java.util.Collection,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
    void serializeContentsUsing(java.util.Collection,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.JsonSerializer) -> serializeContentsUsing
    void serializeContents(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
org.codehaus.jackson.map.ser.std.ContainerSerializerBase -> org.codehaus.jackson.map.ser.std.ContainerSerializerBase:
    org.codehaus.jackson.map.ser.std.ContainerSerializerBase withValueTypeSerializer(org.codehaus.jackson.map.TypeSerializer) -> withValueTypeSerializer
    org.codehaus.jackson.map.ser.std.ContainerSerializerBase _withValueTypeSerializer(org.codehaus.jackson.map.TypeSerializer) -> _withValueTypeSerializer
org.codehaus.jackson.map.ser.std.DateSerializer -> org.codehaus.jackson.map.ser.std.DateSerializer:
    org.codehaus.jackson.map.ser.std.DateSerializer instance -> instance
    void serialize(java.util.Date,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ser.std.EnumMapSerializer -> org.codehaus.jackson.map.ser.std.EnumMapSerializer:
    boolean _staticTyping -> _staticTyping
    org.codehaus.jackson.map.util.EnumValues _keyEnums -> _keyEnums
    org.codehaus.jackson.type.JavaType _valueType -> _valueType
    org.codehaus.jackson.map.BeanProperty _property -> _property
    org.codehaus.jackson.map.JsonSerializer _valueSerializer -> _valueSerializer
    org.codehaus.jackson.map.TypeSerializer _valueTypeSerializer -> _valueTypeSerializer
    org.codehaus.jackson.map.ser.std.ContainerSerializerBase _withValueTypeSerializer(org.codehaus.jackson.map.TypeSerializer) -> _withValueTypeSerializer
    void serialize(java.util.EnumMap,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(java.util.EnumMap,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
    void serializeContents(java.util.EnumMap,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
    void serializeContentsUsing(java.util.EnumMap,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.JsonSerializer) -> serializeContentsUsing
    void resolve(org.codehaus.jackson.map.SerializerProvider) -> resolve
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
org.codehaus.jackson.map.ser.std.EnumSerializer -> org.codehaus.jackson.map.ser.std.EnumSerializer:
    org.codehaus.jackson.map.util.EnumValues _values -> _values
    org.codehaus.jackson.map.ser.std.EnumSerializer construct(java.lang.Class,org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription) -> construct
    void serialize(java.lang.Enum,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    org.codehaus.jackson.map.util.EnumValues getEnumValues() -> getEnumValues
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ser.std.EnumSetSerializer -> org.codehaus.jackson.map.ser.std.EnumSetSerializer:
    org.codehaus.jackson.map.ser.std.ContainerSerializerBase _withValueTypeSerializer(org.codehaus.jackson.map.TypeSerializer) -> _withValueTypeSerializer
    void serializeContents(java.util.EnumSet,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
    void serializeContents(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
org.codehaus.jackson.map.ser.std.IndexedStringListSerializer -> org.codehaus.jackson.map.ser.std.IndexedStringListSerializer:
    org.codehaus.jackson.map.JsonSerializer _serializer -> _serializer
    void resolve(org.codehaus.jackson.map.SerializerProvider) -> resolve
    void serialize(java.util.List,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(java.util.List,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
    void serializeContents(java.util.List,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
    void serializeUsingCustom(java.util.List,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeUsingCustom
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
org.codehaus.jackson.map.ser.std.InetAddressSerializer -> org.codehaus.jackson.map.ser.std.InetAddressSerializer:
    org.codehaus.jackson.map.ser.std.InetAddressSerializer instance -> instance
    void serialize(java.net.InetAddress,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(java.net.InetAddress,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
    void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ser.std.IterableSerializer -> org.codehaus.jackson.map.ser.std.IterableSerializer:
    org.codehaus.jackson.map.ser.std.ContainerSerializerBase _withValueTypeSerializer(org.codehaus.jackson.map.TypeSerializer) -> _withValueTypeSerializer
    void serializeContents(java.lang.Iterable,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
    void serializeContents(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
org.codehaus.jackson.map.ser.std.JsonValueSerializer -> org.codehaus.jackson.map.ser.std.JsonValueSerializer:
    java.lang.reflect.Method _accessorMethod -> _accessorMethod
    org.codehaus.jackson.map.JsonSerializer _valueSerializer -> _valueSerializer
    org.codehaus.jackson.map.BeanProperty _property -> _property
    boolean _forceTypeInformation -> _forceTypeInformation
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
    void resolve(org.codehaus.jackson.map.SerializerProvider) -> resolve
    boolean isNaturalTypeWithStdHandling(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.JsonSerializer) -> isNaturalTypeWithStdHandling
    java.lang.String toString() -> toString
org.codehaus.jackson.map.ser.std.MapSerializer -> org.codehaus.jackson.map.ser.std.MapSerializer:
    org.codehaus.jackson.type.JavaType UNSPECIFIED_TYPE -> UNSPECIFIED_TYPE
    org.codehaus.jackson.map.BeanProperty _property -> _property
    java.util.HashSet _ignoredEntries -> _ignoredEntries
    boolean _valueTypeIsStatic -> _valueTypeIsStatic
    org.codehaus.jackson.type.JavaType _keyType -> _keyType
    org.codehaus.jackson.type.JavaType _valueType -> _valueType
    org.codehaus.jackson.map.JsonSerializer _keySerializer -> _keySerializer
    org.codehaus.jackson.map.JsonSerializer _valueSerializer -> _valueSerializer
    org.codehaus.jackson.map.TypeSerializer _valueTypeSerializer -> _valueTypeSerializer
    org.codehaus.jackson.map.ser.impl.PropertySerializerMap _dynamicValueSerializers -> _dynamicValueSerializers
    org.codehaus.jackson.map.ser.std.ContainerSerializerBase _withValueTypeSerializer(org.codehaus.jackson.map.TypeSerializer) -> _withValueTypeSerializer
    org.codehaus.jackson.map.ser.std.MapSerializer construct(java.lang.String[],org.codehaus.jackson.type.JavaType,boolean,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.JsonSerializer,org.codehaus.jackson.map.JsonSerializer) -> construct
    java.util.HashSet toSet(java.lang.String[]) -> toSet
    void serialize(java.util.Map,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(java.util.Map,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
    void serializeFields(java.util.Map,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeFields
    void serializeFieldsUsing(java.util.Map,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.JsonSerializer) -> serializeFieldsUsing
    void serializeTypedFields(java.util.Map,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeTypedFields
    void resolve(org.codehaus.jackson.map.SerializerProvider) -> resolve
    org.codehaus.jackson.map.JsonSerializer _findAndAddDynamic(org.codehaus.jackson.map.ser.impl.PropertySerializerMap,java.lang.Class,org.codehaus.jackson.map.SerializerProvider) -> _findAndAddDynamic
    org.codehaus.jackson.map.JsonSerializer _findAndAddDynamic(org.codehaus.jackson.map.ser.impl.PropertySerializerMap,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.SerializerProvider) -> _findAndAddDynamic
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
org.codehaus.jackson.map.ser.std.NonTypedScalarSerializerBase -> org.codehaus.jackson.map.ser.std.NonTypedScalarSerializerBase:
    void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
org.codehaus.jackson.map.ser.std.NullSerializer -> org.codehaus.jackson.map.ser.std.NullSerializer:
    org.codehaus.jackson.map.ser.std.NullSerializer instance -> instance
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ser.std.ObjectArraySerializer -> org.codehaus.jackson.map.ser.std.ObjectArraySerializer:
    boolean _staticTyping -> _staticTyping
    org.codehaus.jackson.type.JavaType _elementType -> _elementType
    org.codehaus.jackson.map.JsonSerializer _elementSerializer -> _elementSerializer
    org.codehaus.jackson.map.ser.impl.PropertySerializerMap _dynamicSerializers -> _dynamicSerializers
    org.codehaus.jackson.map.ser.std.ContainerSerializerBase _withValueTypeSerializer(org.codehaus.jackson.map.TypeSerializer) -> _withValueTypeSerializer
    void serializeContents(java.lang.Object[],org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
    void serializeContentsUsing(java.lang.Object[],org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.JsonSerializer) -> serializeContentsUsing
    void serializeTypedContents(java.lang.Object[],org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeTypedContents
    void resolve(org.codehaus.jackson.map.SerializerProvider) -> resolve
    org.codehaus.jackson.map.JsonSerializer _findAndAddDynamic(org.codehaus.jackson.map.ser.impl.PropertySerializerMap,java.lang.Class,org.codehaus.jackson.map.SerializerProvider) -> _findAndAddDynamic
    org.codehaus.jackson.map.JsonSerializer _findAndAddDynamic(org.codehaus.jackson.map.ser.impl.PropertySerializerMap,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.SerializerProvider) -> _findAndAddDynamic
    void serializeContents(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
org.codehaus.jackson.map.ser.std.RawSerializer -> org.codehaus.jackson.map.ser.std.RawSerializer:
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
org.codehaus.jackson.map.ser.std.ScalarSerializerBase -> org.codehaus.jackson.map.ser.std.ScalarSerializerBase:
    void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
org.codehaus.jackson.map.ser.std.SerializableSerializer -> org.codehaus.jackson.map.ser.std.SerializableSerializer:
    org.codehaus.jackson.map.ser.std.SerializableSerializer instance -> instance
    void serialize(org.codehaus.jackson.map.JsonSerializable,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(org.codehaus.jackson.map.JsonSerializable,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
org.codehaus.jackson.map.ser.std.SerializableWithTypeSerializer -> org.codehaus.jackson.map.ser.std.SerializableWithTypeSerializer:
    org.codehaus.jackson.map.ser.std.SerializableWithTypeSerializer instance -> instance
    void serialize(org.codehaus.jackson.map.JsonSerializableWithType,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(org.codehaus.jackson.map.JsonSerializableWithType,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
org.codehaus.jackson.map.ser.std.SerializerBase -> org.codehaus.jackson.map.ser.std.SerializerBase:
    java.lang.Class _handledType -> _handledType
    java.lang.Class handledType() -> handledType
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    boolean isDefaultSerializer(org.codehaus.jackson.map.JsonSerializer) -> isDefaultSerializer
    void wrapAndThrow(org.codehaus.jackson.map.SerializerProvider,java.lang.Throwable,java.lang.Object,java.lang.String) -> wrapAndThrow
    void wrapAndThrow(org.codehaus.jackson.map.SerializerProvider,java.lang.Throwable,java.lang.Object,int) -> wrapAndThrow
org.codehaus.jackson.map.ser.std.StaticListSerializerBase -> org.codehaus.jackson.map.ser.std.StaticListSerializerBase:
    org.codehaus.jackson.map.BeanProperty _property -> _property
org.codehaus.jackson.map.ser.std.StdArraySerializers -> org.codehaus.jackson.map.ser.std.StdArraySerializers:
org.codehaus.jackson.map.ser.std.StdArraySerializers$ArraySerializerBase -> org.codehaus.jackson.map.ser.std.StdArraySerializers$ArraySerializerBase:
    org.codehaus.jackson.map.TypeSerializer _valueTypeSerializer -> _valueTypeSerializer
    org.codehaus.jackson.map.BeanProperty _property -> _property
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
    void serializeContents(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
org.codehaus.jackson.map.ser.std.StdArraySerializers$BooleanArraySerializer -> org.codehaus.jackson.map.ser.std.StdArraySerializers$BooleanArraySerializer:
    org.codehaus.jackson.map.ser.std.ContainerSerializerBase _withValueTypeSerializer(org.codehaus.jackson.map.TypeSerializer) -> _withValueTypeSerializer
    void serializeContents(boolean[],org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
    void serializeContents(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
org.codehaus.jackson.map.ser.std.StdArraySerializers$ByteArraySerializer -> org.codehaus.jackson.map.ser.std.StdArraySerializers$ByteArraySerializer:
    void serializeWithType(byte[],org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
org.codehaus.jackson.map.ser.std.StdArraySerializers$CharArraySerializer -> org.codehaus.jackson.map.ser.std.StdArraySerializers$CharArraySerializer:
    void serialize(char[],org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(char[],org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
    void _writeArrayContents(org.codehaus.jackson.JsonGenerator,char[]) -> _writeArrayContents
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
org.codehaus.jackson.map.ser.std.StdArraySerializers$DoubleArraySerializer -> org.codehaus.jackson.map.ser.std.StdArraySerializers$DoubleArraySerializer:
    org.codehaus.jackson.map.ser.std.ContainerSerializerBase _withValueTypeSerializer(org.codehaus.jackson.map.TypeSerializer) -> _withValueTypeSerializer
    void serializeContents(double[],org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
    void serializeContents(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
org.codehaus.jackson.map.ser.std.StdArraySerializers$FloatArraySerializer -> org.codehaus.jackson.map.ser.std.StdArraySerializers$FloatArraySerializer:
    org.codehaus.jackson.map.ser.std.ContainerSerializerBase _withValueTypeSerializer(org.codehaus.jackson.map.TypeSerializer) -> _withValueTypeSerializer
    void serializeContents(float[],org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
    void serializeContents(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
org.codehaus.jackson.map.ser.std.StdArraySerializers$IntArraySerializer -> org.codehaus.jackson.map.ser.std.StdArraySerializers$IntArraySerializer:
    org.codehaus.jackson.map.ser.std.ContainerSerializerBase _withValueTypeSerializer(org.codehaus.jackson.map.TypeSerializer) -> _withValueTypeSerializer
    void serializeContents(int[],org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
    void serializeContents(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
org.codehaus.jackson.map.ser.std.StdArraySerializers$LongArraySerializer -> org.codehaus.jackson.map.ser.std.StdArraySerializers$LongArraySerializer:
    org.codehaus.jackson.map.ser.std.ContainerSerializerBase _withValueTypeSerializer(org.codehaus.jackson.map.TypeSerializer) -> _withValueTypeSerializer
    void serializeContents(long[],org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
    void serializeContents(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
org.codehaus.jackson.map.ser.std.StdArraySerializers$ShortArraySerializer -> org.codehaus.jackson.map.ser.std.StdArraySerializers$ShortArraySerializer:
    org.codehaus.jackson.map.ser.std.ContainerSerializerBase _withValueTypeSerializer(org.codehaus.jackson.map.TypeSerializer) -> _withValueTypeSerializer
    void serializeContents(short[],org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
    void serializeContents(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
org.codehaus.jackson.map.ser.std.StdArraySerializers$StringArraySerializer -> org.codehaus.jackson.map.ser.std.StdArraySerializers$StringArraySerializer:
    org.codehaus.jackson.map.JsonSerializer _elementSerializer -> _elementSerializer
    org.codehaus.jackson.map.ser.std.ContainerSerializerBase _withValueTypeSerializer(org.codehaus.jackson.map.TypeSerializer) -> _withValueTypeSerializer
    void serializeContents(java.lang.String[],org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
    void serializeContentsSlow(java.lang.String[],org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.JsonSerializer) -> serializeContentsSlow
    void resolve(org.codehaus.jackson.map.SerializerProvider) -> resolve
    void serializeContents(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
org.codehaus.jackson.map.ser.std.StdContainerSerializers -> org.codehaus.jackson.map.ser.std.StdContainerSerializers:
    org.codehaus.jackson.map.ser.std.ContainerSerializerBase indexedListSerializer(org.codehaus.jackson.type.JavaType,boolean,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.JsonSerializer) -> indexedListSerializer
    org.codehaus.jackson.map.ser.std.ContainerSerializerBase collectionSerializer(org.codehaus.jackson.type.JavaType,boolean,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.JsonSerializer) -> collectionSerializer
    org.codehaus.jackson.map.ser.std.ContainerSerializerBase iteratorSerializer(org.codehaus.jackson.type.JavaType,boolean,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.BeanProperty) -> iteratorSerializer
    org.codehaus.jackson.map.ser.std.ContainerSerializerBase iterableSerializer(org.codehaus.jackson.type.JavaType,boolean,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.BeanProperty) -> iterableSerializer
    org.codehaus.jackson.map.JsonSerializer enumSetSerializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> enumSetSerializer
org.codehaus.jackson.map.ser.std.StdContainerSerializers$IndexedListSerializer -> org.codehaus.jackson.map.ser.std.StdContainerSerializers$IndexedListSerializer:
    org.codehaus.jackson.map.ser.std.ContainerSerializerBase _withValueTypeSerializer(org.codehaus.jackson.map.TypeSerializer) -> _withValueTypeSerializer
    void serializeContents(java.util.List,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
    void serializeContentsUsing(java.util.List,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.JsonSerializer) -> serializeContentsUsing
    void serializeTypedContents(java.util.List,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeTypedContents
    void serializeContents(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
org.codehaus.jackson.map.ser.std.StdContainerSerializers$IteratorSerializer -> org.codehaus.jackson.map.ser.std.StdContainerSerializers$IteratorSerializer:
    org.codehaus.jackson.map.ser.std.ContainerSerializerBase _withValueTypeSerializer(org.codehaus.jackson.map.TypeSerializer) -> _withValueTypeSerializer
    void serializeContents(java.util.Iterator,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
    void serializeContents(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
org.codehaus.jackson.map.ser.std.StdJdkSerializers -> org.codehaus.jackson.map.ser.std.StdJdkSerializers:
    java.util.Collection provide() -> provide
org.codehaus.jackson.map.ser.std.StdJdkSerializers$AtomicBooleanSerializer -> org.codehaus.jackson.map.ser.std.StdJdkSerializers$AtomicBooleanSerializer:
    void serialize(java.util.concurrent.atomic.AtomicBoolean,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ser.std.StdJdkSerializers$AtomicIntegerSerializer -> org.codehaus.jackson.map.ser.std.StdJdkSerializers$AtomicIntegerSerializer:
    void serialize(java.util.concurrent.atomic.AtomicInteger,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ser.std.StdJdkSerializers$AtomicLongSerializer -> org.codehaus.jackson.map.ser.std.StdJdkSerializers$AtomicLongSerializer:
    void serialize(java.util.concurrent.atomic.AtomicLong,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ser.std.StdJdkSerializers$AtomicReferenceSerializer -> org.codehaus.jackson.map.ser.std.StdJdkSerializers$AtomicReferenceSerializer:
    void serialize(java.util.concurrent.atomic.AtomicReference,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ser.std.StdJdkSerializers$ClassSerializer -> org.codehaus.jackson.map.ser.std.StdJdkSerializers$ClassSerializer:
    void serialize(java.lang.Class,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ser.std.StdJdkSerializers$FileSerializer -> org.codehaus.jackson.map.ser.std.StdJdkSerializers$FileSerializer:
    void serialize(java.io.File,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ser.std.StdKeySerializer -> org.codehaus.jackson.map.ser.std.StdKeySerializer:
    org.codehaus.jackson.map.ser.std.StdKeySerializer instace -> instace
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ser.std.StdKeySerializers -> org.codehaus.jackson.map.ser.std.StdKeySerializers:
    org.codehaus.jackson.map.JsonSerializer DEFAULT_KEY_SERIALIZER -> DEFAULT_KEY_SERIALIZER
    org.codehaus.jackson.map.JsonSerializer DEFAULT_STRING_SERIALIZER -> DEFAULT_STRING_SERIALIZER
    org.codehaus.jackson.map.JsonSerializer getStdKeySerializer(org.codehaus.jackson.type.JavaType) -> getStdKeySerializer
org.codehaus.jackson.map.ser.std.StdKeySerializers$CalendarKeySerializer -> org.codehaus.jackson.map.ser.std.StdKeySerializers$CalendarKeySerializer:
    org.codehaus.jackson.map.JsonSerializer instance -> instance
    void serialize(java.util.Calendar,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ser.std.StdKeySerializers$DateKeySerializer -> org.codehaus.jackson.map.ser.std.StdKeySerializers$DateKeySerializer:
    org.codehaus.jackson.map.JsonSerializer instance -> instance
    void serialize(java.util.Date,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ser.std.StdKeySerializers$StringKeySerializer -> org.codehaus.jackson.map.ser.std.StdKeySerializers$StringKeySerializer:
    void serialize(java.lang.String,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ser.std.StringCollectionSerializer -> org.codehaus.jackson.map.ser.std.StringCollectionSerializer:
    org.codehaus.jackson.map.JsonSerializer _serializer -> _serializer
    void resolve(org.codehaus.jackson.map.SerializerProvider) -> resolve
    void serialize(java.util.Collection,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(java.util.Collection,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
    void serializeContents(java.util.Collection,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
    void serializeUsingCustom(java.util.Collection,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeUsingCustom
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
org.codehaus.jackson.map.ser.std.StringSerializer -> org.codehaus.jackson.map.ser.std.StringSerializer:
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ser.std.TimeZoneSerializer -> org.codehaus.jackson.map.ser.std.TimeZoneSerializer:
    org.codehaus.jackson.map.ser.std.TimeZoneSerializer instance -> instance
    void serialize(java.util.TimeZone,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(java.util.TimeZone,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
    void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ser.std.ToStringSerializer -> org.codehaus.jackson.map.ser.std.ToStringSerializer:
    org.codehaus.jackson.map.ser.std.ToStringSerializer instance -> instance
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
org.codehaus.jackson.map.ser.std.TokenBufferSerializer -> org.codehaus.jackson.map.ser.std.TokenBufferSerializer:
    void serialize(org.codehaus.jackson.util.TokenBuffer,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(org.codehaus.jackson.util.TokenBuffer,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
org.codehaus.jackson.map.type.ArrayType -> org.codehaus.jackson.map.type.ArrayType:
    org.codehaus.jackson.type.JavaType _componentType -> _componentType
    java.lang.Object _emptyArray -> _emptyArray
    org.codehaus.jackson.map.type.ArrayType construct(org.codehaus.jackson.type.JavaType,java.lang.Object,java.lang.Object) -> construct
    org.codehaus.jackson.map.type.ArrayType withTypeHandler(java.lang.Object) -> withTypeHandler
    org.codehaus.jackson.map.type.ArrayType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    org.codehaus.jackson.map.type.ArrayType withValueHandler(java.lang.Object) -> withValueHandler
    java.lang.String buildCanonicalName() -> buildCanonicalName
    org.codehaus.jackson.type.JavaType _narrow(java.lang.Class) -> _narrow
    org.codehaus.jackson.type.JavaType narrowContentsBy(java.lang.Class) -> narrowContentsBy
    org.codehaus.jackson.type.JavaType widenContentsBy(java.lang.Class) -> widenContentsBy
    boolean isArrayType() -> isArrayType
    boolean isAbstract() -> isAbstract
    boolean isConcrete() -> isConcrete
    boolean hasGenericTypes() -> hasGenericTypes
    java.lang.String containedTypeName(int) -> containedTypeName
    boolean isContainerType() -> isContainerType
    org.codehaus.jackson.type.JavaType getContentType() -> getContentType
    int containedTypeCount() -> containedTypeCount
    org.codehaus.jackson.type.JavaType containedType(int) -> containedType
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    org.codehaus.jackson.type.JavaType withValueHandler(java.lang.Object) -> withValueHandler
    org.codehaus.jackson.type.JavaType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    org.codehaus.jackson.type.JavaType withTypeHandler(java.lang.Object) -> withTypeHandler
org.codehaus.jackson.map.type.ClassKey -> org.codehaus.jackson.map.type.ClassKey:
    java.lang.String _className -> _className
    java.lang.Class _class -> _class
    int _hashCode -> _hashCode
    int compareTo(org.codehaus.jackson.map.type.ClassKey) -> compareTo
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int compareTo(java.lang.Object) -> compareTo
org.codehaus.jackson.map.type.CollectionLikeType -> org.codehaus.jackson.map.type.CollectionLikeType:
    org.codehaus.jackson.type.JavaType _elementType -> _elementType
    org.codehaus.jackson.type.JavaType _narrow(java.lang.Class) -> _narrow
    org.codehaus.jackson.type.JavaType narrowContentsBy(java.lang.Class) -> narrowContentsBy
    org.codehaus.jackson.type.JavaType widenContentsBy(java.lang.Class) -> widenContentsBy
    org.codehaus.jackson.map.type.CollectionLikeType withTypeHandler(java.lang.Object) -> withTypeHandler
    org.codehaus.jackson.map.type.CollectionLikeType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    org.codehaus.jackson.map.type.CollectionLikeType withValueHandler(java.lang.Object) -> withValueHandler
    boolean isContainerType() -> isContainerType
    boolean isCollectionLikeType() -> isCollectionLikeType
    org.codehaus.jackson.type.JavaType getContentType() -> getContentType
    int containedTypeCount() -> containedTypeCount
    org.codehaus.jackson.type.JavaType containedType(int) -> containedType
    java.lang.String containedTypeName(int) -> containedTypeName
    java.lang.String buildCanonicalName() -> buildCanonicalName
    boolean isTrueCollectionType() -> isTrueCollectionType
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    org.codehaus.jackson.type.JavaType withValueHandler(java.lang.Object) -> withValueHandler
    org.codehaus.jackson.type.JavaType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    org.codehaus.jackson.type.JavaType withTypeHandler(java.lang.Object) -> withTypeHandler
org.codehaus.jackson.map.type.CollectionType -> org.codehaus.jackson.map.type.CollectionType:
    org.codehaus.jackson.type.JavaType _narrow(java.lang.Class) -> _narrow
    org.codehaus.jackson.type.JavaType narrowContentsBy(java.lang.Class) -> narrowContentsBy
    org.codehaus.jackson.type.JavaType widenContentsBy(java.lang.Class) -> widenContentsBy
    org.codehaus.jackson.map.type.CollectionType construct(java.lang.Class,org.codehaus.jackson.type.JavaType) -> construct
    org.codehaus.jackson.map.type.CollectionType withTypeHandler(java.lang.Object) -> withTypeHandler
    org.codehaus.jackson.map.type.CollectionType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    org.codehaus.jackson.map.type.CollectionType withValueHandler(java.lang.Object) -> withValueHandler
    java.lang.String toString() -> toString
    org.codehaus.jackson.map.type.CollectionLikeType withValueHandler(java.lang.Object) -> withValueHandler
    org.codehaus.jackson.map.type.CollectionLikeType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    org.codehaus.jackson.map.type.CollectionLikeType withTypeHandler(java.lang.Object) -> withTypeHandler
    org.codehaus.jackson.type.JavaType withValueHandler(java.lang.Object) -> withValueHandler
    org.codehaus.jackson.type.JavaType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    org.codehaus.jackson.type.JavaType withTypeHandler(java.lang.Object) -> withTypeHandler
org.codehaus.jackson.map.type.HierarchicType -> org.codehaus.jackson.map.type.HierarchicType:
    java.lang.reflect.Type _actualType -> _actualType
    java.lang.Class _rawClass -> _rawClass
    java.lang.reflect.ParameterizedType _genericType -> _genericType
    org.codehaus.jackson.map.type.HierarchicType _superType -> _superType
    org.codehaus.jackson.map.type.HierarchicType _subType -> _subType
    org.codehaus.jackson.map.type.HierarchicType deepCloneWithoutSubtype() -> deepCloneWithoutSubtype
    void setSuperType(org.codehaus.jackson.map.type.HierarchicType) -> setSuperType
    org.codehaus.jackson.map.type.HierarchicType getSuperType() -> getSuperType
    void setSubType(org.codehaus.jackson.map.type.HierarchicType) -> setSubType
    boolean isGeneric() -> isGeneric
    java.lang.reflect.ParameterizedType asGeneric() -> asGeneric
    java.lang.Class getRawClass() -> getRawClass
    java.lang.String toString() -> toString
org.codehaus.jackson.map.type.MapLikeType -> org.codehaus.jackson.map.type.MapLikeType:
    org.codehaus.jackson.type.JavaType _keyType -> _keyType
    org.codehaus.jackson.type.JavaType _valueType -> _valueType
    org.codehaus.jackson.type.JavaType _narrow(java.lang.Class) -> _narrow
    org.codehaus.jackson.type.JavaType narrowContentsBy(java.lang.Class) -> narrowContentsBy
    org.codehaus.jackson.type.JavaType widenContentsBy(java.lang.Class) -> widenContentsBy
    org.codehaus.jackson.type.JavaType narrowKey(java.lang.Class) -> narrowKey
    org.codehaus.jackson.type.JavaType widenKey(java.lang.Class) -> widenKey
    org.codehaus.jackson.map.type.MapLikeType withTypeHandler(java.lang.Object) -> withTypeHandler
    org.codehaus.jackson.map.type.MapLikeType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    org.codehaus.jackson.map.type.MapLikeType withValueHandler(java.lang.Object) -> withValueHandler
    java.lang.String buildCanonicalName() -> buildCanonicalName
    boolean isContainerType() -> isContainerType
    boolean isMapLikeType() -> isMapLikeType
    org.codehaus.jackson.type.JavaType getKeyType() -> getKeyType
    org.codehaus.jackson.type.JavaType getContentType() -> getContentType
    int containedTypeCount() -> containedTypeCount
    org.codehaus.jackson.type.JavaType containedType(int) -> containedType
    java.lang.String containedTypeName(int) -> containedTypeName
    boolean isTrueMapType() -> isTrueMapType
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    org.codehaus.jackson.type.JavaType withValueHandler(java.lang.Object) -> withValueHandler
    org.codehaus.jackson.type.JavaType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    org.codehaus.jackson.type.JavaType withTypeHandler(java.lang.Object) -> withTypeHandler
org.codehaus.jackson.map.type.MapType -> org.codehaus.jackson.map.type.MapType:
    org.codehaus.jackson.map.type.MapType construct(java.lang.Class,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.type.JavaType) -> construct
    org.codehaus.jackson.type.JavaType _narrow(java.lang.Class) -> _narrow
    org.codehaus.jackson.type.JavaType narrowContentsBy(java.lang.Class) -> narrowContentsBy
    org.codehaus.jackson.type.JavaType widenContentsBy(java.lang.Class) -> widenContentsBy
    org.codehaus.jackson.type.JavaType narrowKey(java.lang.Class) -> narrowKey
    org.codehaus.jackson.type.JavaType widenKey(java.lang.Class) -> widenKey
    org.codehaus.jackson.map.type.MapType withTypeHandler(java.lang.Object) -> withTypeHandler
    org.codehaus.jackson.map.type.MapType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    org.codehaus.jackson.map.type.MapType withValueHandler(java.lang.Object) -> withValueHandler
    java.lang.String toString() -> toString
    org.codehaus.jackson.map.type.MapLikeType withValueHandler(java.lang.Object) -> withValueHandler
    org.codehaus.jackson.map.type.MapLikeType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    org.codehaus.jackson.map.type.MapLikeType withTypeHandler(java.lang.Object) -> withTypeHandler
    org.codehaus.jackson.type.JavaType withValueHandler(java.lang.Object) -> withValueHandler
    org.codehaus.jackson.type.JavaType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    org.codehaus.jackson.type.JavaType withTypeHandler(java.lang.Object) -> withTypeHandler
org.codehaus.jackson.map.type.SimpleType -> org.codehaus.jackson.map.type.SimpleType:
    org.codehaus.jackson.type.JavaType[] _typeParameters -> _typeParameters
    java.lang.String[] _typeNames -> _typeNames
    org.codehaus.jackson.map.type.SimpleType constructUnsafe(java.lang.Class) -> constructUnsafe
    org.codehaus.jackson.type.JavaType _narrow(java.lang.Class) -> _narrow
    org.codehaus.jackson.type.JavaType narrowContentsBy(java.lang.Class) -> narrowContentsBy
    org.codehaus.jackson.type.JavaType widenContentsBy(java.lang.Class) -> widenContentsBy
    org.codehaus.jackson.map.type.SimpleType withTypeHandler(java.lang.Object) -> withTypeHandler
    org.codehaus.jackson.type.JavaType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    org.codehaus.jackson.map.type.SimpleType withValueHandler(java.lang.Object) -> withValueHandler
    java.lang.String buildCanonicalName() -> buildCanonicalName
    boolean isContainerType() -> isContainerType
    int containedTypeCount() -> containedTypeCount
    org.codehaus.jackson.type.JavaType containedType(int) -> containedType
    java.lang.String containedTypeName(int) -> containedTypeName
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    org.codehaus.jackson.type.JavaType withValueHandler(java.lang.Object) -> withValueHandler
    org.codehaus.jackson.type.JavaType withTypeHandler(java.lang.Object) -> withTypeHandler
org.codehaus.jackson.map.type.TypeBase -> org.codehaus.jackson.map.type.TypeBase:
    java.lang.String _canonicalName -> _canonicalName
    java.lang.String toCanonical() -> toCanonical
    java.lang.String buildCanonicalName() -> buildCanonicalName
    java.lang.Object getValueHandler() -> getValueHandler
    java.lang.Object getTypeHandler() -> getTypeHandler
    void serializeWithType(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
    void serialize(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.type.TypeBindings -> org.codehaus.jackson.map.type.TypeBindings:
    org.codehaus.jackson.type.JavaType[] NO_TYPES -> NO_TYPES
    org.codehaus.jackson.type.JavaType UNBOUND -> UNBOUND
    org.codehaus.jackson.map.type.TypeFactory _typeFactory -> _typeFactory
    org.codehaus.jackson.type.JavaType _contextType -> _contextType
    java.lang.Class _contextClass -> _contextClass
    java.util.Map _bindings -> _bindings
    java.util.HashSet _placeholders -> _placeholders
    org.codehaus.jackson.map.type.TypeBindings _parentBindings -> _parentBindings
    org.codehaus.jackson.map.type.TypeBindings childInstance() -> childInstance
    org.codehaus.jackson.type.JavaType resolveType(java.lang.reflect.Type) -> resolveType
    org.codehaus.jackson.type.JavaType findType(java.lang.String) -> findType
    void addBinding(java.lang.String,org.codehaus.jackson.type.JavaType) -> addBinding
    org.codehaus.jackson.type.JavaType[] typesAsArray() -> typesAsArray
    void _resolve() -> _resolve
    void _addPlaceholder(java.lang.String) -> _addPlaceholder
    void _resolveBindings(java.lang.reflect.Type) -> _resolveBindings
    java.lang.String toString() -> toString
org.codehaus.jackson.map.type.TypeFactory -> org.codehaus.jackson.map.type.TypeFactory:
    org.codehaus.jackson.map.type.TypeFactory instance -> instance
    org.codehaus.jackson.type.JavaType[] NO_TYPES -> NO_TYPES
    org.codehaus.jackson.map.type.TypeModifier[] _modifiers -> _modifiers
    org.codehaus.jackson.map.type.TypeParser _parser -> _parser
    org.codehaus.jackson.map.type.HierarchicType _cachedHashMapType -> _cachedHashMapType
    org.codehaus.jackson.map.type.HierarchicType _cachedArrayListType -> _cachedArrayListType
    org.codehaus.jackson.map.type.TypeFactory defaultInstance() -> defaultInstance
    org.codehaus.jackson.type.JavaType unknownType() -> unknownType
    org.codehaus.jackson.type.JavaType fromCanonical(java.lang.String) -> fromCanonical
    org.codehaus.jackson.type.JavaType constructSpecializedType(org.codehaus.jackson.type.JavaType,java.lang.Class) -> constructSpecializedType
    org.codehaus.jackson.type.JavaType constructFromCanonical(java.lang.String) -> constructFromCanonical
    org.codehaus.jackson.type.JavaType[] findTypeParameters(org.codehaus.jackson.type.JavaType,java.lang.Class) -> findTypeParameters
    org.codehaus.jackson.type.JavaType[] findTypeParameters(java.lang.Class,java.lang.Class) -> findTypeParameters
    org.codehaus.jackson.type.JavaType[] findTypeParameters(java.lang.Class,java.lang.Class,org.codehaus.jackson.map.type.TypeBindings) -> findTypeParameters
    org.codehaus.jackson.type.JavaType constructType(java.lang.reflect.Type) -> constructType
    org.codehaus.jackson.type.JavaType constructType(java.lang.reflect.Type,org.codehaus.jackson.map.type.TypeBindings) -> constructType
    org.codehaus.jackson.type.JavaType constructType(org.codehaus.jackson.type.TypeReference) -> constructType
    org.codehaus.jackson.type.JavaType _constructType(java.lang.reflect.Type,org.codehaus.jackson.map.type.TypeBindings) -> _constructType
    org.codehaus.jackson.map.type.ArrayType constructArrayType(org.codehaus.jackson.type.JavaType) -> constructArrayType
    org.codehaus.jackson.map.type.CollectionType constructCollectionType(java.lang.Class,java.lang.Class) -> constructCollectionType
    org.codehaus.jackson.map.type.CollectionType constructCollectionType(java.lang.Class,org.codehaus.jackson.type.JavaType) -> constructCollectionType
    org.codehaus.jackson.map.type.MapType constructMapType(java.lang.Class,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.type.JavaType) -> constructMapType
    org.codehaus.jackson.map.type.MapType constructMapType(java.lang.Class,java.lang.Class,java.lang.Class) -> constructMapType
    org.codehaus.jackson.type.JavaType constructSimpleType(java.lang.Class,org.codehaus.jackson.type.JavaType[]) -> constructSimpleType
    org.codehaus.jackson.type.JavaType uncheckedSimpleType(java.lang.Class) -> uncheckedSimpleType
    org.codehaus.jackson.type.JavaType constructParametricType(java.lang.Class,java.lang.Class[]) -> constructParametricType
    org.codehaus.jackson.type.JavaType constructParametricType(java.lang.Class,org.codehaus.jackson.type.JavaType[]) -> constructParametricType
    org.codehaus.jackson.type.JavaType _fromClass(java.lang.Class,org.codehaus.jackson.map.type.TypeBindings) -> _fromClass
    org.codehaus.jackson.type.JavaType _fromParameterizedClass(java.lang.Class,java.util.List) -> _fromParameterizedClass
    org.codehaus.jackson.type.JavaType _fromParamType(java.lang.reflect.ParameterizedType,org.codehaus.jackson.map.type.TypeBindings) -> _fromParamType
    org.codehaus.jackson.type.JavaType _fromArrayType(java.lang.reflect.GenericArrayType,org.codehaus.jackson.map.type.TypeBindings) -> _fromArrayType
    org.codehaus.jackson.type.JavaType _fromVariable(java.lang.reflect.TypeVariable,org.codehaus.jackson.map.type.TypeBindings) -> _fromVariable
    org.codehaus.jackson.type.JavaType _fromWildcard(java.lang.reflect.WildcardType,org.codehaus.jackson.map.type.TypeBindings) -> _fromWildcard
    org.codehaus.jackson.type.JavaType _mapType(java.lang.Class) -> _mapType
    org.codehaus.jackson.type.JavaType _collectionType(java.lang.Class) -> _collectionType
    org.codehaus.jackson.type.JavaType _unknownType() -> _unknownType
    org.codehaus.jackson.map.type.HierarchicType _findSuperTypeChain(java.lang.Class,java.lang.Class) -> _findSuperTypeChain
    org.codehaus.jackson.map.type.HierarchicType _findSuperClassChain(java.lang.reflect.Type,java.lang.Class) -> _findSuperClassChain
    org.codehaus.jackson.map.type.HierarchicType _findSuperInterfaceChain(java.lang.reflect.Type,java.lang.Class) -> _findSuperInterfaceChain
    org.codehaus.jackson.map.type.HierarchicType _doFindSuperInterfaceChain(org.codehaus.jackson.map.type.HierarchicType,java.lang.Class) -> _doFindSuperInterfaceChain
    org.codehaus.jackson.map.type.HierarchicType _hashMapSuperInterfaceChain(org.codehaus.jackson.map.type.HierarchicType) -> _hashMapSuperInterfaceChain
    org.codehaus.jackson.map.type.HierarchicType _arrayListSuperInterfaceChain(org.codehaus.jackson.map.type.HierarchicType) -> _arrayListSuperInterfaceChain
org.codehaus.jackson.map.type.TypeModifier -> org.codehaus.jackson.map.type.TypeModifier:
    org.codehaus.jackson.type.JavaType modifyType(org.codehaus.jackson.type.JavaType,java.lang.reflect.Type,org.codehaus.jackson.map.type.TypeBindings,org.codehaus.jackson.map.type.TypeFactory) -> modifyType
org.codehaus.jackson.map.type.TypeParser -> org.codehaus.jackson.map.type.TypeParser:
    org.codehaus.jackson.map.type.TypeFactory _factory -> _factory
    org.codehaus.jackson.type.JavaType parse(java.lang.String) -> parse
    org.codehaus.jackson.type.JavaType parseType(org.codehaus.jackson.map.type.TypeParser$MyTokenizer) -> parseType
    java.util.List parseTypes(org.codehaus.jackson.map.type.TypeParser$MyTokenizer) -> parseTypes
    java.lang.Class findClass(java.lang.String,org.codehaus.jackson.map.type.TypeParser$MyTokenizer) -> findClass
    java.lang.IllegalArgumentException _problem(org.codehaus.jackson.map.type.TypeParser$MyTokenizer,java.lang.String) -> _problem
org.codehaus.jackson.map.type.TypeParser$MyTokenizer -> org.codehaus.jackson.map.type.TypeParser$MyTokenizer:
    java.lang.String _input -> _input
    int _index -> _index
    java.lang.String _pushbackToken -> _pushbackToken
    boolean hasMoreTokens() -> hasMoreTokens
    java.lang.String nextToken() -> nextToken
    void pushBack(java.lang.String) -> pushBack
    java.lang.String getAllInput() -> getAllInput
    java.lang.String getRemainingInput() -> getRemainingInput
org.codehaus.jackson.map.util.Annotations -> org.codehaus.jackson.map.util.Annotations:
org.codehaus.jackson.map.util.ArrayBuilders -> org.codehaus.jackson.map.util.ArrayBuilders:
    org.codehaus.jackson.map.util.ArrayBuilders$BooleanBuilder _booleanBuilder -> _booleanBuilder
    org.codehaus.jackson.map.util.ArrayBuilders$ByteBuilder _byteBuilder -> _byteBuilder
    org.codehaus.jackson.map.util.ArrayBuilders$ShortBuilder _shortBuilder -> _shortBuilder
    org.codehaus.jackson.map.util.ArrayBuilders$IntBuilder _intBuilder -> _intBuilder
    org.codehaus.jackson.map.util.ArrayBuilders$LongBuilder _longBuilder -> _longBuilder
    org.codehaus.jackson.map.util.ArrayBuilders$FloatBuilder _floatBuilder -> _floatBuilder
    org.codehaus.jackson.map.util.ArrayBuilders$DoubleBuilder _doubleBuilder -> _doubleBuilder
    org.codehaus.jackson.map.util.ArrayBuilders$BooleanBuilder getBooleanBuilder() -> getBooleanBuilder
    org.codehaus.jackson.map.util.ArrayBuilders$ByteBuilder getByteBuilder() -> getByteBuilder
    org.codehaus.jackson.map.util.ArrayBuilders$ShortBuilder getShortBuilder() -> getShortBuilder
    org.codehaus.jackson.map.util.ArrayBuilders$IntBuilder getIntBuilder() -> getIntBuilder
    org.codehaus.jackson.map.util.ArrayBuilders$LongBuilder getLongBuilder() -> getLongBuilder
    org.codehaus.jackson.map.util.ArrayBuilders$FloatBuilder getFloatBuilder() -> getFloatBuilder
    org.codehaus.jackson.map.util.ArrayBuilders$DoubleBuilder getDoubleBuilder() -> getDoubleBuilder
    java.util.HashSet arrayToSet(java.lang.Object[]) -> arrayToSet
    java.lang.Iterable arrayAsIterable(java.lang.Object[]) -> arrayAsIterable
org.codehaus.jackson.map.util.ArrayBuilders$ArrayIterator -> org.codehaus.jackson.map.util.ArrayBuilders$ArrayIterator:
    java.lang.Object[] _array -> _array
    int _index -> _index
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
    java.util.Iterator iterator() -> iterator
org.codehaus.jackson.map.util.ArrayBuilders$BooleanBuilder -> org.codehaus.jackson.map.util.ArrayBuilders$BooleanBuilder:
    boolean[] _constructArray(int) -> _constructArray
    java.lang.Object _constructArray(int) -> _constructArray
org.codehaus.jackson.map.util.ArrayBuilders$ByteBuilder -> org.codehaus.jackson.map.util.ArrayBuilders$ByteBuilder:
    byte[] _constructArray(int) -> _constructArray
    java.lang.Object _constructArray(int) -> _constructArray
org.codehaus.jackson.map.util.ArrayBuilders$DoubleBuilder -> org.codehaus.jackson.map.util.ArrayBuilders$DoubleBuilder:
    double[] _constructArray(int) -> _constructArray
    java.lang.Object _constructArray(int) -> _constructArray
org.codehaus.jackson.map.util.ArrayBuilders$FloatBuilder -> org.codehaus.jackson.map.util.ArrayBuilders$FloatBuilder:
    float[] _constructArray(int) -> _constructArray
    java.lang.Object _constructArray(int) -> _constructArray
org.codehaus.jackson.map.util.ArrayBuilders$IntBuilder -> org.codehaus.jackson.map.util.ArrayBuilders$IntBuilder:
    int[] _constructArray(int) -> _constructArray
    java.lang.Object _constructArray(int) -> _constructArray
org.codehaus.jackson.map.util.ArrayBuilders$LongBuilder -> org.codehaus.jackson.map.util.ArrayBuilders$LongBuilder:
    long[] _constructArray(int) -> _constructArray
    java.lang.Object _constructArray(int) -> _constructArray
org.codehaus.jackson.map.util.ArrayBuilders$ShortBuilder -> org.codehaus.jackson.map.util.ArrayBuilders$ShortBuilder:
    short[] _constructArray(int) -> _constructArray
    java.lang.Object _constructArray(int) -> _constructArray
org.codehaus.jackson.map.util.BeanUtil -> org.codehaus.jackson.map.util.BeanUtil:
    java.lang.String okNameForGetter(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> okNameForGetter
    java.lang.String okNameForRegularGetter(org.codehaus.jackson.map.introspect.AnnotatedMethod,java.lang.String) -> okNameForRegularGetter
    java.lang.String okNameForIsGetter(org.codehaus.jackson.map.introspect.AnnotatedMethod,java.lang.String) -> okNameForIsGetter
    java.lang.String okNameForSetter(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> okNameForSetter
    boolean isCglibGetCallbacks(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> isCglibGetCallbacks
    boolean isGroovyMetaClassSetter(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> isGroovyMetaClassSetter
    boolean isGroovyMetaClassGetter(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> isGroovyMetaClassGetter
    java.lang.String manglePropertyName(java.lang.String) -> manglePropertyName
org.codehaus.jackson.map.util.ClassUtil -> org.codehaus.jackson.map.util.ClassUtil:
    java.util.List findSuperTypes(java.lang.Class,java.lang.Class) -> findSuperTypes
    java.util.List findSuperTypes(java.lang.Class,java.lang.Class,java.util.List) -> findSuperTypes
    void _addSuperTypes(java.lang.Class,java.lang.Class,java.util.Collection,boolean) -> _addSuperTypes
    java.lang.String canBeABeanType(java.lang.Class) -> canBeABeanType
    java.lang.String isLocalType(java.lang.Class,boolean) -> isLocalType
    java.lang.Class getOuterClass(java.lang.Class) -> getOuterClass
    boolean isProxyType(java.lang.Class) -> isProxyType
    boolean isConcrete(java.lang.Class) -> isConcrete
    boolean isCollectionMapOrArray(java.lang.Class) -> isCollectionMapOrArray
    java.lang.Class findClass(java.lang.String) -> findClass
    boolean hasGetterSignature(java.lang.reflect.Method) -> hasGetterSignature
    java.lang.Throwable getRootCause(java.lang.Throwable) -> getRootCause
    void throwAsIAE(java.lang.Throwable) -> throwAsIAE
    void throwAsIAE(java.lang.Throwable,java.lang.String) -> throwAsIAE
    void unwrapAndThrowAsIAE(java.lang.Throwable) -> unwrapAndThrowAsIAE
    void unwrapAndThrowAsIAE(java.lang.Throwable,java.lang.String) -> unwrapAndThrowAsIAE
    java.lang.Object createInstance(java.lang.Class,boolean) -> createInstance
    java.lang.reflect.Constructor findConstructor(java.lang.Class,boolean) -> findConstructor
    java.lang.Object defaultValue(java.lang.Class) -> defaultValue
    void checkAndFixAccess(java.lang.reflect.Member) -> checkAndFixAccess
    java.lang.Class findEnumType(java.util.EnumSet) -> findEnumType
    java.lang.Class findEnumType(java.util.EnumMap) -> findEnumType
    java.lang.Class findEnumType(java.lang.Enum) -> findEnumType
    java.lang.Class findEnumType(java.lang.Class) -> findEnumType
org.codehaus.jackson.map.util.ClassUtil$EnumTypeLocator -> org.codehaus.jackson.map.util.ClassUtil$EnumTypeLocator:
    org.codehaus.jackson.map.util.ClassUtil$EnumTypeLocator instance -> instance
    java.lang.reflect.Field enumSetTypeField -> enumSetTypeField
    java.lang.reflect.Field enumMapTypeField -> enumMapTypeField
    java.lang.Class enumTypeFor(java.util.EnumSet) -> enumTypeFor
    java.lang.Class enumTypeFor(java.util.EnumMap) -> enumTypeFor
    java.lang.Object get(java.lang.Object,java.lang.reflect.Field) -> get
    java.lang.reflect.Field locateField(java.lang.Class,java.lang.String,java.lang.Class) -> locateField
org.codehaus.jackson.map.util.Comparators -> org.codehaus.jackson.map.util.Comparators:
    java.lang.Object getArrayComparator(java.lang.Object) -> getArrayComparator
org.codehaus.jackson.map.util.Comparators$1 -> org.codehaus.jackson.map.util.Comparators$1:
    java.lang.Object val$defaultValue -> val$defaultValue
    int val$length -> val$length
    boolean equals(java.lang.Object) -> equals
org.codehaus.jackson.map.util.EnumResolver -> org.codehaus.jackson.map.util.EnumResolver:
    java.lang.Class _enumClass -> _enumClass
    java.lang.Enum[] _enums -> _enums
    java.util.HashMap _enumsById -> _enumsById
    org.codehaus.jackson.map.util.EnumResolver constructFor(java.lang.Class,org.codehaus.jackson.map.AnnotationIntrospector) -> constructFor
    org.codehaus.jackson.map.util.EnumResolver constructUsingToString(java.lang.Class) -> constructUsingToString
    org.codehaus.jackson.map.util.EnumResolver constructUnsafe(java.lang.Class,org.codehaus.jackson.map.AnnotationIntrospector) -> constructUnsafe
    org.codehaus.jackson.map.util.EnumResolver constructUnsafeUsingToString(java.lang.Class) -> constructUnsafeUsingToString
    java.lang.Enum findEnum(java.lang.String) -> findEnum
    java.lang.Enum getEnum(int) -> getEnum
    java.lang.Class getEnumClass() -> getEnumClass
    int lastValidIndex() -> lastValidIndex
org.codehaus.jackson.map.util.EnumValues -> org.codehaus.jackson.map.util.EnumValues:
    java.util.EnumMap _values -> _values
    org.codehaus.jackson.map.util.EnumValues construct(java.lang.Class,org.codehaus.jackson.map.AnnotationIntrospector) -> construct
    org.codehaus.jackson.map.util.EnumValues constructFromName(java.lang.Class,org.codehaus.jackson.map.AnnotationIntrospector) -> constructFromName
    org.codehaus.jackson.map.util.EnumValues constructFromToString(java.lang.Class,org.codehaus.jackson.map.AnnotationIntrospector) -> constructFromToString
    org.codehaus.jackson.io.SerializedString serializedValueFor(java.lang.Enum) -> serializedValueFor
org.codehaus.jackson.map.util.LRUMap -> org.codehaus.jackson.map.util.LRUMap:
    int _maxEntries -> _maxEntries
    boolean removeEldestEntry(java.util.Map$Entry) -> removeEldestEntry
org.codehaus.jackson.map.util.LinkedNode -> org.codehaus.jackson.map.util.LinkedNode:
    java.lang.Object _value -> _value
    org.codehaus.jackson.map.util.LinkedNode _next -> _next
    org.codehaus.jackson.map.util.LinkedNode next() -> next
    java.lang.Object value() -> value
org.codehaus.jackson.map.util.ObjectBuffer -> org.codehaus.jackson.map.util.ObjectBuffer:
    org.codehaus.jackson.map.util.ObjectBuffer$Node _bufferHead -> _bufferHead
    org.codehaus.jackson.map.util.ObjectBuffer$Node _bufferTail -> _bufferTail
    int _bufferedEntryCount -> _bufferedEntryCount
    java.lang.Object[] _freeBuffer -> _freeBuffer
    java.lang.Object[] resetAndStart() -> resetAndStart
    java.lang.Object[] appendCompletedChunk(java.lang.Object[]) -> appendCompletedChunk
    java.lang.Object[] completeAndClearBuffer(java.lang.Object[],int) -> completeAndClearBuffer
    java.lang.Object[] completeAndClearBuffer(java.lang.Object[],int,java.lang.Class) -> completeAndClearBuffer
    void completeAndClearBuffer(java.lang.Object[],int,java.util.List) -> completeAndClearBuffer
    int initialCapacity() -> initialCapacity
    void _reset() -> _reset
    void _copyTo(java.lang.Object,int,java.lang.Object[],int) -> _copyTo
org.codehaus.jackson.map.util.ObjectBuffer$Node -> org.codehaus.jackson.map.util.ObjectBuffer$Node:
    java.lang.Object[] _data -> _data
    org.codehaus.jackson.map.util.ObjectBuffer$Node _next -> _next
    java.lang.Object[] getData() -> getData
    org.codehaus.jackson.map.util.ObjectBuffer$Node next() -> next
    void linkNext(org.codehaus.jackson.map.util.ObjectBuffer$Node) -> linkNext
org.codehaus.jackson.map.util.PrimitiveArrayBuilder -> org.codehaus.jackson.map.util.PrimitiveArrayBuilder:
    java.lang.Object _freeBuffer -> _freeBuffer
    org.codehaus.jackson.map.util.PrimitiveArrayBuilder$Node _bufferHead -> _bufferHead
    org.codehaus.jackson.map.util.PrimitiveArrayBuilder$Node _bufferTail -> _bufferTail
    int _bufferedEntryCount -> _bufferedEntryCount
    java.lang.Object resetAndStart() -> resetAndStart
    java.lang.Object appendCompletedChunk(java.lang.Object,int) -> appendCompletedChunk
    java.lang.Object completeAndClearBuffer(java.lang.Object,int) -> completeAndClearBuffer
    java.lang.Object _constructArray(int) -> _constructArray
    void _reset() -> _reset
org.codehaus.jackson.map.util.PrimitiveArrayBuilder$Node -> org.codehaus.jackson.map.util.PrimitiveArrayBuilder$Node:
    java.lang.Object _data -> _data
    int _dataLength -> _dataLength
    org.codehaus.jackson.map.util.PrimitiveArrayBuilder$Node _next -> _next
    java.lang.Object getData() -> getData
    int copyData(java.lang.Object,int) -> copyData
    org.codehaus.jackson.map.util.PrimitiveArrayBuilder$Node next() -> next
    void linkNext(org.codehaus.jackson.map.util.PrimitiveArrayBuilder$Node) -> linkNext
org.codehaus.jackson.map.util.Provider -> org.codehaus.jackson.map.util.Provider:
    java.util.Collection provide() -> provide
org.codehaus.jackson.map.util.RootNameLookup -> org.codehaus.jackson.map.util.RootNameLookup:
    org.codehaus.jackson.map.util.LRUMap _rootNames -> _rootNames
    org.codehaus.jackson.io.SerializedString findRootName(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.MapperConfig) -> findRootName
    org.codehaus.jackson.io.SerializedString findRootName(java.lang.Class,org.codehaus.jackson.map.MapperConfig) -> findRootName
org.codehaus.jackson.map.util.StdDateFormat -> org.codehaus.jackson.map.util.StdDateFormat:
    java.lang.String[] ALL_FORMATS -> ALL_FORMATS
    java.text.DateFormat DATE_FORMAT_RFC1123 -> DATE_FORMAT_RFC1123
    java.text.DateFormat DATE_FORMAT_ISO8601 -> DATE_FORMAT_ISO8601
    java.text.DateFormat DATE_FORMAT_ISO8601_Z -> DATE_FORMAT_ISO8601_Z
    java.text.DateFormat DATE_FORMAT_PLAIN -> DATE_FORMAT_PLAIN
    org.codehaus.jackson.map.util.StdDateFormat instance -> instance
    java.text.DateFormat _formatRFC1123 -> _formatRFC1123
    java.text.DateFormat _formatISO8601 -> _formatISO8601
    java.text.DateFormat _formatISO8601_z -> _formatISO8601_z
    java.text.DateFormat _formatPlain -> _formatPlain
    org.codehaus.jackson.map.util.StdDateFormat clone() -> clone
    java.util.Date parse(java.lang.String) -> parse
    java.util.Date parse(java.lang.String,java.text.ParsePosition) -> parse
    java.lang.StringBuffer format(java.util.Date,java.lang.StringBuffer,java.text.FieldPosition) -> format
    boolean looksLikeISO8601(java.lang.String) -> looksLikeISO8601
    java.util.Date parseAsISO8601(java.lang.String,java.text.ParsePosition) -> parseAsISO8601
    java.util.Date parseAsRFC1123(java.lang.String,java.text.ParsePosition) -> parseAsRFC1123
    boolean hasTimeZone(java.lang.String) -> hasTimeZone
    java.lang.Object clone() -> clone
org.codehaus.jackson.node.ArrayNode -> org.codehaus.jackson.node.ArrayNode:
    java.util.ArrayList _children -> _children
    org.codehaus.jackson.JsonToken asToken() -> asToken
    boolean isArray() -> isArray
    int size() -> size
    java.util.Iterator getElements() -> getElements
    org.codehaus.jackson.JsonNode get(java.lang.String) -> get
    void serialize(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
    void add(org.codehaus.jackson.JsonNode) -> add
    void addNull() -> addNull
    void add(int) -> add
    void add(float) -> add
    void add(java.lang.String) -> add
    void add(byte[]) -> add
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    void _add(org.codehaus.jackson.JsonNode) -> _add
    boolean _sameChildren(java.util.ArrayList) -> _sameChildren
org.codehaus.jackson.node.BaseJsonNode -> org.codehaus.jackson.node.BaseJsonNode:
    org.codehaus.jackson.JsonParser$NumberType getNumberType() -> getNumberType
    void serialize(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.node.BigIntegerNode -> org.codehaus.jackson.node.BigIntegerNode:
    java.math.BigInteger _value -> _value
    org.codehaus.jackson.node.BigIntegerNode valueOf(java.math.BigInteger) -> valueOf
    org.codehaus.jackson.JsonToken asToken() -> asToken
    org.codehaus.jackson.JsonParser$NumberType getNumberType() -> getNumberType
    java.lang.Number getNumberValue() -> getNumberValue
    int getIntValue() -> getIntValue
    long getLongValue() -> getLongValue
    java.math.BigInteger getBigIntegerValue() -> getBigIntegerValue
    double getDoubleValue() -> getDoubleValue
    java.math.BigDecimal getDecimalValue() -> getDecimalValue
    java.lang.String asText() -> asText
    boolean asBoolean(boolean) -> asBoolean
    void serialize(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.codehaus.jackson.node.BinaryNode -> org.codehaus.jackson.node.BinaryNode:
    org.codehaus.jackson.node.BinaryNode EMPTY_BINARY_NODE -> EMPTY_BINARY_NODE
    byte[] _data -> _data
    org.codehaus.jackson.node.BinaryNode valueOf(byte[]) -> valueOf
    org.codehaus.jackson.JsonToken asToken() -> asToken
    boolean isBinary() -> isBinary
    byte[] getBinaryValue() -> getBinaryValue
    java.lang.String asText() -> asText
    void serialize(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
org.codehaus.jackson.node.BooleanNode -> org.codehaus.jackson.node.BooleanNode:
    org.codehaus.jackson.node.BooleanNode TRUE -> TRUE
    org.codehaus.jackson.node.BooleanNode FALSE -> FALSE
    org.codehaus.jackson.node.BooleanNode getTrue() -> getTrue
    org.codehaus.jackson.node.BooleanNode getFalse() -> getFalse
    org.codehaus.jackson.JsonToken asToken() -> asToken
    java.lang.String asText() -> asText
    boolean asBoolean() -> asBoolean
    boolean asBoolean(boolean) -> asBoolean
    int asInt(int) -> asInt
    long asLong(long) -> asLong
    void serialize(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    boolean equals(java.lang.Object) -> equals
org.codehaus.jackson.node.ContainerNode -> org.codehaus.jackson.node.ContainerNode:
    org.codehaus.jackson.node.JsonNodeFactory _nodeFactory -> _nodeFactory
    java.lang.String asText() -> asText
    int size() -> size
    org.codehaus.jackson.node.ArrayNode arrayNode() -> arrayNode
    org.codehaus.jackson.node.NullNode nullNode() -> nullNode
    org.codehaus.jackson.node.NumericNode numberNode(int) -> numberNode
    org.codehaus.jackson.node.NumericNode numberNode(long) -> numberNode
    org.codehaus.jackson.node.NumericNode numberNode(float) -> numberNode
    org.codehaus.jackson.node.TextNode textNode(java.lang.String) -> textNode
    org.codehaus.jackson.node.BinaryNode binaryNode(byte[]) -> binaryNode
org.codehaus.jackson.node.ContainerNode$NoNodesIterator -> org.codehaus.jackson.node.ContainerNode$NoNodesIterator:
    org.codehaus.jackson.node.ContainerNode$NoNodesIterator instance -> instance
    org.codehaus.jackson.node.ContainerNode$NoNodesIterator instance() -> instance
    boolean hasNext() -> hasNext
    org.codehaus.jackson.JsonNode next() -> next
    void remove() -> remove
    java.lang.Object next() -> next
org.codehaus.jackson.node.DecimalNode -> org.codehaus.jackson.node.DecimalNode:
    java.math.BigDecimal _value -> _value
    org.codehaus.jackson.node.DecimalNode valueOf(java.math.BigDecimal) -> valueOf
    org.codehaus.jackson.JsonToken asToken() -> asToken
    org.codehaus.jackson.JsonParser$NumberType getNumberType() -> getNumberType
    java.lang.Number getNumberValue() -> getNumberValue
    int getIntValue() -> getIntValue
    long getLongValue() -> getLongValue
    java.math.BigInteger getBigIntegerValue() -> getBigIntegerValue
    double getDoubleValue() -> getDoubleValue
    java.math.BigDecimal getDecimalValue() -> getDecimalValue
    java.lang.String asText() -> asText
    void serialize(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.codehaus.jackson.node.DoubleNode -> org.codehaus.jackson.node.DoubleNode:
    double _value -> _value
    org.codehaus.jackson.node.DoubleNode valueOf(double) -> valueOf
    org.codehaus.jackson.JsonToken asToken() -> asToken
    org.codehaus.jackson.JsonParser$NumberType getNumberType() -> getNumberType
    java.lang.Number getNumberValue() -> getNumberValue
    int getIntValue() -> getIntValue
    long getLongValue() -> getLongValue
    double getDoubleValue() -> getDoubleValue
    java.math.BigDecimal getDecimalValue() -> getDecimalValue
    java.math.BigInteger getBigIntegerValue() -> getBigIntegerValue
    java.lang.String asText() -> asText
    void serialize(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.codehaus.jackson.node.IntNode -> org.codehaus.jackson.node.IntNode:
    org.codehaus.jackson.node.IntNode[] CANONICALS -> CANONICALS
    int _value -> _value
    org.codehaus.jackson.node.IntNode valueOf(int) -> valueOf
    org.codehaus.jackson.JsonToken asToken() -> asToken
    org.codehaus.jackson.JsonParser$NumberType getNumberType() -> getNumberType
    java.lang.Number getNumberValue() -> getNumberValue
    int getIntValue() -> getIntValue
    long getLongValue() -> getLongValue
    double getDoubleValue() -> getDoubleValue
    java.math.BigDecimal getDecimalValue() -> getDecimalValue
    java.math.BigInteger getBigIntegerValue() -> getBigIntegerValue
    java.lang.String asText() -> asText
    boolean asBoolean(boolean) -> asBoolean
    void serialize(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.codehaus.jackson.node.JsonNodeFactory -> org.codehaus.jackson.node.JsonNodeFactory:
    org.codehaus.jackson.node.JsonNodeFactory instance -> instance
    org.codehaus.jackson.node.BooleanNode booleanNode(boolean) -> booleanNode
    org.codehaus.jackson.node.NullNode nullNode() -> nullNode
    org.codehaus.jackson.node.NumericNode numberNode(int) -> numberNode
    org.codehaus.jackson.node.NumericNode numberNode(long) -> numberNode
    org.codehaus.jackson.node.NumericNode numberNode(java.math.BigInteger) -> numberNode
    org.codehaus.jackson.node.NumericNode numberNode(float) -> numberNode
    org.codehaus.jackson.node.NumericNode numberNode(double) -> numberNode
    org.codehaus.jackson.node.NumericNode numberNode(java.math.BigDecimal) -> numberNode
    org.codehaus.jackson.node.TextNode textNode(java.lang.String) -> textNode
    org.codehaus.jackson.node.BinaryNode binaryNode(byte[]) -> binaryNode
    org.codehaus.jackson.node.ArrayNode arrayNode() -> arrayNode
    org.codehaus.jackson.node.ObjectNode objectNode() -> objectNode
    org.codehaus.jackson.node.POJONode POJONode(java.lang.Object) -> POJONode
org.codehaus.jackson.node.LongNode -> org.codehaus.jackson.node.LongNode:
    long _value -> _value
    org.codehaus.jackson.node.LongNode valueOf(long) -> valueOf
    org.codehaus.jackson.JsonToken asToken() -> asToken
    org.codehaus.jackson.JsonParser$NumberType getNumberType() -> getNumberType
    java.lang.Number getNumberValue() -> getNumberValue
    int getIntValue() -> getIntValue
    long getLongValue() -> getLongValue
    double getDoubleValue() -> getDoubleValue
    java.math.BigDecimal getDecimalValue() -> getDecimalValue
    java.math.BigInteger getBigIntegerValue() -> getBigIntegerValue
    java.lang.String asText() -> asText
    boolean asBoolean(boolean) -> asBoolean
    void serialize(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.codehaus.jackson.node.NodeCursor -> org.codehaus.jackson.node.NodeCursor:
    org.codehaus.jackson.node.NodeCursor _parent -> _parent
    org.codehaus.jackson.node.NodeCursor getParent() -> getParent
    java.lang.String getCurrentName() -> getCurrentName
    org.codehaus.jackson.JsonToken nextToken() -> nextToken
    org.codehaus.jackson.JsonToken endToken() -> endToken
    org.codehaus.jackson.JsonNode currentNode() -> currentNode
    boolean currentHasChildren() -> currentHasChildren
    org.codehaus.jackson.node.NodeCursor iterateChildren() -> iterateChildren
org.codehaus.jackson.node.NodeCursor$Array -> org.codehaus.jackson.node.NodeCursor$Array:
    java.util.Iterator _contents -> _contents
    org.codehaus.jackson.JsonNode _currentNode -> _currentNode
    java.lang.String getCurrentName() -> getCurrentName
    org.codehaus.jackson.JsonToken nextToken() -> nextToken
    org.codehaus.jackson.JsonToken endToken() -> endToken
    org.codehaus.jackson.JsonNode currentNode() -> currentNode
    boolean currentHasChildren() -> currentHasChildren
org.codehaus.jackson.node.NodeCursor$Object -> org.codehaus.jackson.node.NodeCursor$Object:
    java.util.Iterator _contents -> _contents
    java.util.Map$Entry _current -> _current
    boolean _needEntry -> _needEntry
    java.lang.String getCurrentName() -> getCurrentName
    org.codehaus.jackson.JsonToken nextToken() -> nextToken
    org.codehaus.jackson.JsonToken endToken() -> endToken
    org.codehaus.jackson.JsonNode currentNode() -> currentNode
    boolean currentHasChildren() -> currentHasChildren
org.codehaus.jackson.node.NodeCursor$RootValue -> org.codehaus.jackson.node.NodeCursor$RootValue:
    org.codehaus.jackson.JsonNode _node -> _node
    boolean _done -> _done
    java.lang.String getCurrentName() -> getCurrentName
    org.codehaus.jackson.JsonToken nextToken() -> nextToken
    org.codehaus.jackson.JsonToken endToken() -> endToken
    org.codehaus.jackson.JsonNode currentNode() -> currentNode
    boolean currentHasChildren() -> currentHasChildren
org.codehaus.jackson.node.NullNode -> org.codehaus.jackson.node.NullNode:
    org.codehaus.jackson.node.NullNode instance -> instance
    org.codehaus.jackson.node.NullNode getInstance() -> getInstance
    org.codehaus.jackson.JsonToken asToken() -> asToken
    java.lang.String asText() -> asText
    int asInt(int) -> asInt
    long asLong(long) -> asLong
    void serialize(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    boolean equals(java.lang.Object) -> equals
org.codehaus.jackson.node.NumericNode -> org.codehaus.jackson.node.NumericNode:
    boolean isNumber() -> isNumber
    int getIntValue() -> getIntValue
    long getLongValue() -> getLongValue
    int asInt() -> asInt
    int asInt(int) -> asInt
    long asLong(long) -> asLong
org.codehaus.jackson.node.ObjectNode -> org.codehaus.jackson.node.ObjectNode:
    java.util.LinkedHashMap _children -> _children
    org.codehaus.jackson.JsonToken asToken() -> asToken
    boolean isObject() -> isObject
    int size() -> size
    java.util.Iterator getElements() -> getElements
    org.codehaus.jackson.JsonNode get(java.lang.String) -> get
    java.util.Iterator getFields() -> getFields
    void serialize(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
    org.codehaus.jackson.JsonNode put(java.lang.String,org.codehaus.jackson.JsonNode) -> put
    org.codehaus.jackson.node.ArrayNode putArray(java.lang.String) -> putArray
    void putNull(java.lang.String) -> putNull
    void put(java.lang.String,int) -> put
    void put(java.lang.String,long) -> put
    void put(java.lang.String,float) -> put
    void put(java.lang.String,java.lang.String) -> put
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    org.codehaus.jackson.JsonNode _put(java.lang.String,org.codehaus.jackson.JsonNode) -> _put
org.codehaus.jackson.node.ObjectNode$NoFieldsIterator -> org.codehaus.jackson.node.ObjectNode$NoFieldsIterator:
    org.codehaus.jackson.node.ObjectNode$NoFieldsIterator instance -> instance
    boolean hasNext() -> hasNext
    java.util.Map$Entry next() -> next
    void remove() -> remove
    java.lang.Object next() -> next
org.codehaus.jackson.node.POJONode -> org.codehaus.jackson.node.POJONode:
    java.lang.Object _value -> _value
    org.codehaus.jackson.JsonToken asToken() -> asToken
    boolean isPojo() -> isPojo
    byte[] getBinaryValue() -> getBinaryValue
    java.lang.String asText() -> asText
    boolean asBoolean(boolean) -> asBoolean
    int asInt(int) -> asInt
    long asLong(long) -> asLong
    void serialize(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    java.lang.Object getPojo() -> getPojo
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
org.codehaus.jackson.node.TextNode -> org.codehaus.jackson.node.TextNode:
    org.codehaus.jackson.node.TextNode EMPTY_STRING_NODE -> EMPTY_STRING_NODE
    java.lang.String _value -> _value
    org.codehaus.jackson.node.TextNode valueOf(java.lang.String) -> valueOf
    org.codehaus.jackson.JsonToken asToken() -> asToken
    java.lang.String getTextValue() -> getTextValue
    byte[] getBinaryValue(org.codehaus.jackson.Base64Variant) -> getBinaryValue
    byte[] getBinaryValue() -> getBinaryValue
    java.lang.String asText() -> asText
    boolean asBoolean(boolean) -> asBoolean
    int asInt(int) -> asInt
    long asLong(long) -> asLong
    void serialize(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    void appendQuoted(java.lang.StringBuilder,java.lang.String) -> appendQuoted
    void _reportInvalidBase64(org.codehaus.jackson.Base64Variant,char,int) -> _reportInvalidBase64
    void _reportInvalidBase64(org.codehaus.jackson.Base64Variant,char,int,java.lang.String) -> _reportInvalidBase64
    void _reportBase64EOF() -> _reportBase64EOF
org.codehaus.jackson.node.TreeTraversingParser -> org.codehaus.jackson.node.TreeTraversingParser:
    org.codehaus.jackson.ObjectCodec _objectCodec -> _objectCodec
    org.codehaus.jackson.node.NodeCursor _nodeCursor -> _nodeCursor
    org.codehaus.jackson.JsonToken _nextToken -> _nextToken
    boolean _startContainer -> _startContainer
    boolean _closed -> _closed
    org.codehaus.jackson.ObjectCodec getCodec() -> getCodec
    void close() -> close
    org.codehaus.jackson.JsonToken nextToken() -> nextToken
    org.codehaus.jackson.JsonParser skipChildren() -> skipChildren
    java.lang.String getCurrentName() -> getCurrentName
    org.codehaus.jackson.JsonLocation getTokenLocation() -> getTokenLocation
    org.codehaus.jackson.JsonLocation getCurrentLocation() -> getCurrentLocation
    java.lang.String getText() -> getText
    char[] getTextCharacters() -> getTextCharacters
    int getTextLength() -> getTextLength
    int getTextOffset() -> getTextOffset
    boolean hasTextCharacters() -> hasTextCharacters
    org.codehaus.jackson.JsonParser$NumberType getNumberType() -> getNumberType
    java.math.BigInteger getBigIntegerValue() -> getBigIntegerValue
    java.math.BigDecimal getDecimalValue() -> getDecimalValue
    double getDoubleValue() -> getDoubleValue
    float getFloatValue() -> getFloatValue
    long getLongValue() -> getLongValue
    int getIntValue() -> getIntValue
    java.lang.Number getNumberValue() -> getNumberValue
    java.lang.Object getEmbeddedObject() -> getEmbeddedObject
    byte[] getBinaryValue(org.codehaus.jackson.Base64Variant) -> getBinaryValue
    org.codehaus.jackson.JsonNode currentNode() -> currentNode
    org.codehaus.jackson.JsonNode currentNumericNode() -> currentNumericNode
    void _handleEOF() -> _handleEOF
org.codehaus.jackson.node.TreeTraversingParser$1 -> org.codehaus.jackson.node.TreeTraversingParser$1:
    int[] $SwitchMap$org$codehaus$jackson$JsonToken -> $SwitchMap$org$codehaus$jackson$JsonToken
org.codehaus.jackson.node.ValueNode -> org.codehaus.jackson.node.ValueNode:
    void serializeWithType(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
    java.lang.String toString() -> toString
org.codehaus.jackson.sym.BytesToNameCanonicalizer -> org.codehaus.jackson.sym.BytesToNameCanonicalizer:
    org.codehaus.jackson.sym.BytesToNameCanonicalizer _parent -> _parent
    java.util.concurrent.atomic.AtomicReference _tableInfo -> _tableInfo
    int _hashSeed -> _hashSeed
    boolean _intern -> _intern
    org.codehaus.jackson.sym.BytesToNameCanonicalizer$TableInfo initTableInfo(int) -> initTableInfo
    org.codehaus.jackson.sym.BytesToNameCanonicalizer createRoot() -> createRoot
    org.codehaus.jackson.sym.BytesToNameCanonicalizer createRoot(int) -> createRoot
org.codehaus.jackson.sym.BytesToNameCanonicalizer$Bucket -> org.codehaus.jackson.sym.BytesToNameCanonicalizer$Bucket:
org.codehaus.jackson.sym.BytesToNameCanonicalizer$TableInfo -> org.codehaus.jackson.sym.BytesToNameCanonicalizer$TableInfo:
    int count -> count
    int mainHashMask -> mainHashMask
    int[] mainHash -> mainHash
    org.codehaus.jackson.sym.Name[] mainNames -> mainNames
    org.codehaus.jackson.sym.BytesToNameCanonicalizer$Bucket[] collList -> collList
    int collCount -> collCount
    int collEnd -> collEnd
    int longestCollisionList -> longestCollisionList
org.codehaus.jackson.sym.CharsToNameCanonicalizer -> org.codehaus.jackson.sym.CharsToNameCanonicalizer:
    org.codehaus.jackson.sym.CharsToNameCanonicalizer sBootstrapSymbolTable -> sBootstrapSymbolTable
    org.codehaus.jackson.sym.CharsToNameCanonicalizer _parent -> _parent
    int _hashSeed -> _hashSeed
    boolean _intern -> _intern
    boolean _canonicalize -> _canonicalize
    java.lang.String[] _symbols -> _symbols
    org.codehaus.jackson.sym.CharsToNameCanonicalizer$Bucket[] _buckets -> _buckets
    int _size -> _size
    int _sizeThreshold -> _sizeThreshold
    int _indexMask -> _indexMask
    int _longestCollisionList -> _longestCollisionList
    boolean _dirty -> _dirty
    org.codehaus.jackson.sym.CharsToNameCanonicalizer createRoot() -> createRoot
    org.codehaus.jackson.sym.CharsToNameCanonicalizer createRoot(int) -> createRoot
    void initTables(int) -> initTables
    int _thresholdSize(int) -> _thresholdSize
    org.codehaus.jackson.sym.CharsToNameCanonicalizer makeChild(boolean,boolean) -> makeChild
    org.codehaus.jackson.sym.CharsToNameCanonicalizer makeOrphan(int) -> makeOrphan
    void mergeChild(org.codehaus.jackson.sym.CharsToNameCanonicalizer) -> mergeChild
    void release() -> release
    int size() -> size
    boolean maybeDirty() -> maybeDirty
    java.lang.String findSymbol(char[],int,int,int) -> findSymbol
    int _hashToIndex(int) -> _hashToIndex
    int calcHash(char[],int,int) -> calcHash
    int calcHash(java.lang.String) -> calcHash
    void copyArrays() -> copyArrays
    void rehash() -> rehash
    void reportTooManyCollisions(int) -> reportTooManyCollisions
org.codehaus.jackson.sym.CharsToNameCanonicalizer$Bucket -> org.codehaus.jackson.sym.CharsToNameCanonicalizer$Bucket:
    java.lang.String _symbol -> _symbol
    org.codehaus.jackson.sym.CharsToNameCanonicalizer$Bucket _next -> _next
    int _length -> _length
    java.lang.String getSymbol() -> getSymbol
    org.codehaus.jackson.sym.CharsToNameCanonicalizer$Bucket getNext() -> getNext
    int length() -> length
    java.lang.String find(char[],int,int) -> find
org.codehaus.jackson.sym.Name -> org.codehaus.jackson.sym.Name:
    java.lang.String _name -> _name
    int _hashCode -> _hashCode
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
org.codehaus.jackson.type.JavaType -> org.codehaus.jackson.type.JavaType:
    java.lang.Class _class -> _class
    int _hashCode -> _hashCode
    java.lang.Object _valueHandler -> _valueHandler
    java.lang.Object _typeHandler -> _typeHandler
    org.codehaus.jackson.type.JavaType withTypeHandler(java.lang.Object) -> withTypeHandler
    org.codehaus.jackson.type.JavaType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    org.codehaus.jackson.type.JavaType withValueHandler(java.lang.Object) -> withValueHandler
    void setValueHandler(java.lang.Object) -> setValueHandler
    org.codehaus.jackson.type.JavaType narrowBy(java.lang.Class) -> narrowBy
    org.codehaus.jackson.type.JavaType forcedNarrowBy(java.lang.Class) -> forcedNarrowBy
    org.codehaus.jackson.type.JavaType widenBy(java.lang.Class) -> widenBy
    org.codehaus.jackson.type.JavaType _narrow(java.lang.Class) -> _narrow
    org.codehaus.jackson.type.JavaType _widen(java.lang.Class) -> _widen
    org.codehaus.jackson.type.JavaType narrowContentsBy(java.lang.Class) -> narrowContentsBy
    org.codehaus.jackson.type.JavaType widenContentsBy(java.lang.Class) -> widenContentsBy
    java.lang.Class getRawClass() -> getRawClass
    boolean isAbstract() -> isAbstract
    boolean isConcrete() -> isConcrete
    boolean isThrowable() -> isThrowable
    boolean isArrayType() -> isArrayType
    boolean isEnumType() -> isEnumType
    boolean isInterface() -> isInterface
    boolean isPrimitive() -> isPrimitive
    boolean isFinal() -> isFinal
    boolean isContainerType() -> isContainerType
    boolean isCollectionLikeType() -> isCollectionLikeType
    boolean isMapLikeType() -> isMapLikeType
    boolean hasGenericTypes() -> hasGenericTypes
    org.codehaus.jackson.type.JavaType getKeyType() -> getKeyType
    org.codehaus.jackson.type.JavaType getContentType() -> getContentType
    int containedTypeCount() -> containedTypeCount
    org.codehaus.jackson.type.JavaType containedType(int) -> containedType
    java.lang.String containedTypeName(int) -> containedTypeName
    java.lang.Object getValueHandler() -> getValueHandler
    java.lang.Object getTypeHandler() -> getTypeHandler
    java.lang.String toCanonical() -> toCanonical
    void _assertSubclass(java.lang.Class,java.lang.Class) -> _assertSubclass
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.codehaus.jackson.type.TypeReference -> org.codehaus.jackson.type.TypeReference:
    java.lang.reflect.Type _type -> _type
    java.lang.reflect.Type getType() -> getType
    int compareTo(org.codehaus.jackson.type.TypeReference) -> compareTo
    int compareTo(java.lang.Object) -> compareTo
org.codehaus.jackson.util.BufferRecycler -> org.codehaus.jackson.util.BufferRecycler:
    byte[][] _byteBuffers -> _byteBuffers
    char[][] _charBuffers -> _charBuffers
    byte[] allocByteBuffer(org.codehaus.jackson.util.BufferRecycler$ByteBufferType) -> allocByteBuffer
    char[] allocCharBuffer(org.codehaus.jackson.util.BufferRecycler$CharBufferType) -> allocCharBuffer
    char[] allocCharBuffer(org.codehaus.jackson.util.BufferRecycler$CharBufferType,int) -> allocCharBuffer
    void releaseCharBuffer(org.codehaus.jackson.util.BufferRecycler$CharBufferType,char[]) -> releaseCharBuffer
    byte[] balloc(int) -> balloc
    char[] calloc(int) -> calloc
org.codehaus.jackson.util.BufferRecycler$ByteBufferType -> org.codehaus.jackson.util.BufferRecycler$ByteBufferType:
    org.codehaus.jackson.util.BufferRecycler$ByteBufferType READ_IO_BUFFER -> READ_IO_BUFFER
    org.codehaus.jackson.util.BufferRecycler$ByteBufferType WRITE_ENCODING_BUFFER -> WRITE_ENCODING_BUFFER
    org.codehaus.jackson.util.BufferRecycler$ByteBufferType WRITE_CONCAT_BUFFER -> WRITE_CONCAT_BUFFER
    int size -> size
    org.codehaus.jackson.util.BufferRecycler$ByteBufferType[] $VALUES -> $VALUES
    org.codehaus.jackson.util.BufferRecycler$ByteBufferType[] values() -> values
    org.codehaus.jackson.util.BufferRecycler$ByteBufferType valueOf(java.lang.String) -> valueOf
    int access$000(org.codehaus.jackson.util.BufferRecycler$ByteBufferType) -> access$000
org.codehaus.jackson.util.BufferRecycler$CharBufferType -> org.codehaus.jackson.util.BufferRecycler$CharBufferType:
    org.codehaus.jackson.util.BufferRecycler$CharBufferType TOKEN_BUFFER -> TOKEN_BUFFER
    org.codehaus.jackson.util.BufferRecycler$CharBufferType CONCAT_BUFFER -> CONCAT_BUFFER
    org.codehaus.jackson.util.BufferRecycler$CharBufferType TEXT_BUFFER -> TEXT_BUFFER
    org.codehaus.jackson.util.BufferRecycler$CharBufferType NAME_COPY_BUFFER -> NAME_COPY_BUFFER
    int size -> size
    org.codehaus.jackson.util.BufferRecycler$CharBufferType[] $VALUES -> $VALUES
    org.codehaus.jackson.util.BufferRecycler$CharBufferType[] values() -> values
    org.codehaus.jackson.util.BufferRecycler$CharBufferType valueOf(java.lang.String) -> valueOf
    int access$100(org.codehaus.jackson.util.BufferRecycler$CharBufferType) -> access$100
org.codehaus.jackson.util.ByteArrayBuilder -> org.codehaus.jackson.util.ByteArrayBuilder:
    byte[] NO_BYTES -> NO_BYTES
    org.codehaus.jackson.util.BufferRecycler _bufferRecycler -> _bufferRecycler
    java.util.LinkedList _pastBlocks -> _pastBlocks
    int _pastLen -> _pastLen
    byte[] _currBlock -> _currBlock
    int _currBlockPtr -> _currBlockPtr
    void reset() -> reset
    void append(int) -> append
    void appendTwoBytes(int) -> appendTwoBytes
    void appendThreeBytes(int) -> appendThreeBytes
    byte[] toByteArray() -> toByteArray
    void write(byte[]) -> write
    void write(byte[],int,int) -> write
    void write(int) -> write
    void close() -> close
    void flush() -> flush
    void _allocMore() -> _allocMore
org.codehaus.jackson.util.CharTypes -> org.codehaus.jackson.util.CharTypes:
    char[] HEX_CHARS -> HEX_CHARS
    byte[] HEX_BYTES -> HEX_BYTES
    int[] sInputCodes -> sInputCodes
    int[] sInputCodesUtf8 -> sInputCodesUtf8
    int[] sInputCodesJsNames -> sInputCodesJsNames
    int[] sInputCodesUtf8JsNames -> sInputCodesUtf8JsNames
    int[] sInputCodesComment -> sInputCodesComment
    int[] sOutputEscapes128 -> sOutputEscapes128
    int[] sHexValues -> sHexValues
    int[] getInputCodeLatin1() -> getInputCodeLatin1
    int[] getInputCodeLatin1JsNames() -> getInputCodeLatin1JsNames
    int[] get7BitOutputEscapes() -> get7BitOutputEscapes
    int charToHex(int) -> charToHex
    void appendQuoted(java.lang.StringBuilder,java.lang.String) -> appendQuoted
    char[] copyHexChars() -> copyHexChars
    byte[] copyHexBytes() -> copyHexBytes
org.codehaus.jackson.util.DefaultPrettyPrinter -> org.codehaus.jackson.util.DefaultPrettyPrinter:
    org.codehaus.jackson.impl.Indenter _arrayIndenter -> _arrayIndenter
    org.codehaus.jackson.impl.Indenter _objectIndenter -> _objectIndenter
    boolean _spacesInObjectEntries -> _spacesInObjectEntries
    int _nesting -> _nesting
    void writeRootValueSeparator(org.codehaus.jackson.JsonGenerator) -> writeRootValueSeparator
    void writeStartObject(org.codehaus.jackson.JsonGenerator) -> writeStartObject
    void beforeObjectEntries(org.codehaus.jackson.JsonGenerator) -> beforeObjectEntries
    void writeObjectFieldValueSeparator(org.codehaus.jackson.JsonGenerator) -> writeObjectFieldValueSeparator
    void writeObjectEntrySeparator(org.codehaus.jackson.JsonGenerator) -> writeObjectEntrySeparator
    void writeEndObject(org.codehaus.jackson.JsonGenerator,int) -> writeEndObject
    void writeStartArray(org.codehaus.jackson.JsonGenerator) -> writeStartArray
    void beforeArrayValues(org.codehaus.jackson.JsonGenerator) -> beforeArrayValues
    void writeArrayValueSeparator(org.codehaus.jackson.JsonGenerator) -> writeArrayValueSeparator
    void writeEndArray(org.codehaus.jackson.JsonGenerator,int) -> writeEndArray
org.codehaus.jackson.util.DefaultPrettyPrinter$FixedSpaceIndenter -> org.codehaus.jackson.util.DefaultPrettyPrinter$FixedSpaceIndenter:
    void writeIndentation(org.codehaus.jackson.JsonGenerator,int) -> writeIndentation
    boolean isInline() -> isInline
org.codehaus.jackson.util.DefaultPrettyPrinter$Lf2SpacesIndenter -> org.codehaus.jackson.util.DefaultPrettyPrinter$Lf2SpacesIndenter:
    java.lang.String SYSTEM_LINE_SEPARATOR -> SYSTEM_LINE_SEPARATOR
    char[] SPACES -> SPACES
    boolean isInline() -> isInline
    void writeIndentation(org.codehaus.jackson.JsonGenerator,int) -> writeIndentation
org.codehaus.jackson.util.InternCache -> org.codehaus.jackson.util.InternCache:
    org.codehaus.jackson.util.InternCache instance -> instance
    boolean removeEldestEntry(java.util.Map$Entry) -> removeEldestEntry
    java.lang.String intern(java.lang.String) -> intern
org.codehaus.jackson.util.JsonParserDelegate -> org.codehaus.jackson.util.JsonParserDelegate:
    org.codehaus.jackson.JsonParser delegate -> delegate
    org.codehaus.jackson.ObjectCodec getCodec() -> getCodec
    boolean isEnabled(org.codehaus.jackson.JsonParser$Feature) -> isEnabled
    void close() -> close
    org.codehaus.jackson.JsonToken getCurrentToken() -> getCurrentToken
    void clearCurrentToken() -> clearCurrentToken
    java.lang.String getCurrentName() -> getCurrentName
    org.codehaus.jackson.JsonLocation getCurrentLocation() -> getCurrentLocation
    java.lang.String getText() -> getText
    char[] getTextCharacters() -> getTextCharacters
    int getTextLength() -> getTextLength
    int getTextOffset() -> getTextOffset
    java.math.BigInteger getBigIntegerValue() -> getBigIntegerValue
    byte getByteValue() -> getByteValue
    short getShortValue() -> getShortValue
    java.math.BigDecimal getDecimalValue() -> getDecimalValue
    double getDoubleValue() -> getDoubleValue
    float getFloatValue() -> getFloatValue
    int getIntValue() -> getIntValue
    long getLongValue() -> getLongValue
    org.codehaus.jackson.JsonParser$NumberType getNumberType() -> getNumberType
    java.lang.Number getNumberValue() -> getNumberValue
    byte[] getBinaryValue(org.codehaus.jackson.Base64Variant) -> getBinaryValue
    java.lang.Object getEmbeddedObject() -> getEmbeddedObject
    org.codehaus.jackson.JsonLocation getTokenLocation() -> getTokenLocation
    org.codehaus.jackson.JsonToken nextToken() -> nextToken
    org.codehaus.jackson.JsonParser skipChildren() -> skipChildren
org.codehaus.jackson.util.JsonParserSequence -> org.codehaus.jackson.util.JsonParserSequence:
    org.codehaus.jackson.JsonParser[] _parsers -> _parsers
    int _nextParser -> _nextParser
    org.codehaus.jackson.util.JsonParserSequence createFlattened(org.codehaus.jackson.JsonParser,org.codehaus.jackson.JsonParser) -> createFlattened
    void addFlattenedActiveParsers(java.util.List) -> addFlattenedActiveParsers
    void close() -> close
    org.codehaus.jackson.JsonToken nextToken() -> nextToken
    boolean switchToNext() -> switchToNext
org.codehaus.jackson.util.TextBuffer -> org.codehaus.jackson.util.TextBuffer:
    char[] NO_CHARS -> NO_CHARS
    org.codehaus.jackson.util.BufferRecycler _allocator -> _allocator
    char[] _inputBuffer -> _inputBuffer
    int _inputStart -> _inputStart
    int _inputLen -> _inputLen
    java.util.ArrayList _segments -> _segments
    boolean _hasSegments -> _hasSegments
    int _segmentSize -> _segmentSize
    char[] _currentSegment -> _currentSegment
    int _currentSize -> _currentSize
    java.lang.String _resultString -> _resultString
    char[] _resultArray -> _resultArray
    void releaseBuffers() -> releaseBuffers
    void resetWithEmpty() -> resetWithEmpty
    void resetWithShared(char[],int,int) -> resetWithShared
    void resetWithCopy(char[],int,int) -> resetWithCopy
    void resetWithString(java.lang.String) -> resetWithString
    char[] findBuffer(int) -> findBuffer
    void clearSegments() -> clearSegments
    int size() -> size
    int getTextOffset() -> getTextOffset
    char[] getTextBuffer() -> getTextBuffer
    java.lang.String contentsAsString() -> contentsAsString
    char[] contentsAsArray() -> contentsAsArray
    java.math.BigDecimal contentsAsDecimal() -> contentsAsDecimal
    double contentsAsDouble() -> contentsAsDouble
    void append(char) -> append
    void append(char[],int,int) -> append
    void append(java.lang.String,int,int) -> append
    char[] getCurrentSegment() -> getCurrentSegment
    char[] emptyAndGetCurrentSegment() -> emptyAndGetCurrentSegment
    int getCurrentSegmentSize() -> getCurrentSegmentSize
    void setCurrentLength(int) -> setCurrentLength
    char[] finishCurrentSegment() -> finishCurrentSegment
    java.lang.String toString() -> toString
    void unshare(int) -> unshare
    void expand(int) -> expand
    char[] buildResultArray() -> buildResultArray
    char[] _charArray(int) -> _charArray
org.codehaus.jackson.util.TokenBuffer -> org.codehaus.jackson.util.TokenBuffer:
    int DEFAULT_PARSER_FEATURES -> DEFAULT_PARSER_FEATURES
    org.codehaus.jackson.ObjectCodec _objectCodec -> _objectCodec
    int _generatorFeatures -> _generatorFeatures
    boolean _closed -> _closed
    org.codehaus.jackson.util.TokenBuffer$Segment _first -> _first
    org.codehaus.jackson.util.TokenBuffer$Segment _last -> _last
    int _appendOffset -> _appendOffset
    org.codehaus.jackson.impl.JsonWriteContext _writeContext -> _writeContext
    org.codehaus.jackson.JsonParser asParser() -> asParser
    org.codehaus.jackson.JsonParser asParser(org.codehaus.jackson.ObjectCodec) -> asParser
    org.codehaus.jackson.JsonParser asParser(org.codehaus.jackson.JsonParser) -> asParser
    void serialize(org.codehaus.jackson.JsonGenerator) -> serialize
    java.lang.String toString() -> toString
    org.codehaus.jackson.JsonGenerator useDefaultPrettyPrinter() -> useDefaultPrettyPrinter
    void flush() -> flush
    void close() -> close
    void writeStartArray() -> writeStartArray
    void writeEndArray() -> writeEndArray
    void writeStartObject() -> writeStartObject
    void writeEndObject() -> writeEndObject
    void writeFieldName(java.lang.String) -> writeFieldName
    void writeFieldName(org.codehaus.jackson.SerializableString) -> writeFieldName
    void writeFieldName(org.codehaus.jackson.io.SerializedString) -> writeFieldName
    void writeString(java.lang.String) -> writeString
    void writeString(char[],int,int) -> writeString
    void writeString(org.codehaus.jackson.SerializableString) -> writeString
    void writeRaw(java.lang.String) -> writeRaw
    void writeRaw(char[],int,int) -> writeRaw
    void writeRaw(char) -> writeRaw
    void writeRawValue(java.lang.String) -> writeRawValue
    void writeNumber(int) -> writeNumber
    void writeNumber(long) -> writeNumber
    void writeNumber(double) -> writeNumber
    void writeNumber(float) -> writeNumber
    void writeNumber(java.math.BigDecimal) -> writeNumber
    void writeNumber(java.math.BigInteger) -> writeNumber
    void writeNumber(java.lang.String) -> writeNumber
    void writeBoolean(boolean) -> writeBoolean
    void writeNull() -> writeNull
    void writeObject(java.lang.Object) -> writeObject
    void writeBinary(org.codehaus.jackson.Base64Variant,byte[],int,int) -> writeBinary
    void copyCurrentEvent(org.codehaus.jackson.JsonParser) -> copyCurrentEvent
    void copyCurrentStructure(org.codehaus.jackson.JsonParser) -> copyCurrentStructure
    void _append(org.codehaus.jackson.JsonToken) -> _append
    void _append(org.codehaus.jackson.JsonToken,java.lang.Object) -> _append
    void _reportUnsupportedOperation() -> _reportUnsupportedOperation
org.codehaus.jackson.util.TokenBuffer$1 -> org.codehaus.jackson.util.TokenBuffer$1:
    int[] $SwitchMap$org$codehaus$jackson$JsonToken -> $SwitchMap$org$codehaus$jackson$JsonToken
    int[] $SwitchMap$org$codehaus$jackson$JsonParser$NumberType -> $SwitchMap$org$codehaus$jackson$JsonParser$NumberType
org.codehaus.jackson.util.TokenBuffer$Parser -> org.codehaus.jackson.util.TokenBuffer$Parser:
    org.codehaus.jackson.ObjectCodec _codec -> _codec
    org.codehaus.jackson.util.TokenBuffer$Segment _segment -> _segment
    int _segmentPtr -> _segmentPtr
    org.codehaus.jackson.impl.JsonReadContext _parsingContext -> _parsingContext
    boolean _closed -> _closed
    org.codehaus.jackson.util.ByteArrayBuilder _byteBuilder -> _byteBuilder
    org.codehaus.jackson.JsonLocation _location -> _location
    void setLocation(org.codehaus.jackson.JsonLocation) -> setLocation
    org.codehaus.jackson.ObjectCodec getCodec() -> getCodec
    void close() -> close
    org.codehaus.jackson.JsonToken nextToken() -> nextToken
    org.codehaus.jackson.JsonLocation getTokenLocation() -> getTokenLocation
    org.codehaus.jackson.JsonLocation getCurrentLocation() -> getCurrentLocation
    java.lang.String getCurrentName() -> getCurrentName
    java.lang.String getText() -> getText
    char[] getTextCharacters() -> getTextCharacters
    int getTextLength() -> getTextLength
    int getTextOffset() -> getTextOffset
    boolean hasTextCharacters() -> hasTextCharacters
    java.math.BigInteger getBigIntegerValue() -> getBigIntegerValue
    java.math.BigDecimal getDecimalValue() -> getDecimalValue
    double getDoubleValue() -> getDoubleValue
    float getFloatValue() -> getFloatValue
    int getIntValue() -> getIntValue
    long getLongValue() -> getLongValue
    org.codehaus.jackson.JsonParser$NumberType getNumberType() -> getNumberType
    java.lang.Number getNumberValue() -> getNumberValue
    java.lang.Object getEmbeddedObject() -> getEmbeddedObject
    byte[] getBinaryValue(org.codehaus.jackson.Base64Variant) -> getBinaryValue
    java.lang.Object _currentObject() -> _currentObject
    void _checkIsNumber() -> _checkIsNumber
    void _handleEOF() -> _handleEOF
org.codehaus.jackson.util.TokenBuffer$Segment -> org.codehaus.jackson.util.TokenBuffer$Segment:
    org.codehaus.jackson.JsonToken[] TOKEN_TYPES_BY_INDEX -> TOKEN_TYPES_BY_INDEX
    org.codehaus.jackson.util.TokenBuffer$Segment _next -> _next
    long _tokenTypes -> _tokenTypes
    java.lang.Object[] _tokens -> _tokens
    org.codehaus.jackson.JsonToken type(int) -> type
    java.lang.Object get(int) -> get
    org.codehaus.jackson.util.TokenBuffer$Segment next() -> next
    org.codehaus.jackson.util.TokenBuffer$Segment append(int,org.codehaus.jackson.JsonToken) -> append
    org.codehaus.jackson.util.TokenBuffer$Segment append(int,org.codehaus.jackson.JsonToken,java.lang.Object) -> append
    void set(int,org.codehaus.jackson.JsonToken) -> set
    void set(int,org.codehaus.jackson.JsonToken,java.lang.Object) -> set
